Search.setIndex({"docnames": ["autoapi/poplar/distributions/index", "autoapi/poplar/index", "autoapi/poplar/likelihood/index", "autoapi/poplar/nn/index", "autoapi/poplar/nn/networks/index", "autoapi/poplar/nn/plot/index", "autoapi/poplar/nn/rescaling/index", "autoapi/poplar/nn/training/index", "autoapi/poplar/utilities/index", "index"], "filenames": ["autoapi/poplar/distributions/index.rst", "autoapi/poplar/index.rst", "autoapi/poplar/likelihood/index.rst", "autoapi/poplar/nn/index.rst", "autoapi/poplar/nn/networks/index.rst", "autoapi/poplar/nn/plot/index.rst", "autoapi/poplar/nn/rescaling/index.rst", "autoapi/poplar/nn/training/index.rst", "autoapi/poplar/utilities/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.likelihood</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.nn.networks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.nn.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.nn.rescaling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.nn.training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplar.utilities</span></code>", "Welcome to poplar\u2019s documentation!"], "terms": {"linearmodel": [4, 7], "in_featur": 4, "int": [4, 7, 8], "out_featur": 4, "neuron": 4, "list": [4, 5, 7], "activ": 4, "ani": [4, 7], "name": 4, "model": [1, 4, 7], "devic": [4, 7, 8], "cpu": [4, 7, 8], "rescal": 4, "none": [4, 5, 7], "out_activ": 4, "initialis": 4, "xavier_uniform_": [], "dropout": 4, "0": 4, "batch_norm": 4, "fals": [4, 7], "base": 4, "torch": [4, 7, 8], "implement": 4, "standard": 4, "multi": [3, 4], "layer": [3, 4], "perceptron": [3, 4], "some": [4, 7], "conveni": 4, "featur": 4, "approxim": 4, "us": [4, 7, 8], "thi": [4, 7, 8], "i": [1, 4, 5, 7, 8], "subclass": 4, "paramet": [4, 5, 7, 8], "number": [4, 7, 8], "input": [4, 8], "output": [4, 5, 7, 8], "A": [4, 7], "contain": 4, "each": 4, "exclud": 4, "The": [4, 5, 7, 8], "hidden": 4, "str": [4, 5, 7], "option": [4, 5, 7, 8], "file": 4, "default": [4, 5, 7, 8], "pytorch": [4, 7, 8], "_type_": 4, "an": [4, 7], "object": 4, "identityrescal": 4, "see": 4, "mlsel": 4, "py": 4, "exampl": 4, "set": [4, 8], "initi": 4, "weight": 4, "all": 4, "float": [4, 8], "probabl": [4, 8], "bool": [4, 7], "If": [4, 7], "true": [4, 7], "enabl": 4, "batch": [4, 7], "normalis": 4, "between": [4, 7, 8], "forward": 4, "x": [4, 8], "tensor": [4, 7, 8], "comput": [4, 8], "remov": 4, "extra": 4, "dimens": 4, "return": [4, 5, 7, 8], "result": 4, "size": [4, 7, 8], "1": [4, 7, 8], "type": 7, "save": [4, 7], "outdir": [4, 7], "pickl": 4, "reload": 4, "later": 4, "directori": [4, 7], "which": [4, 5, 8], "place": 4, "run_on_dataset": 4, "n_batch": [4, 7], "luminosity_dist": 4, "runtim": 4, "run": [4, 7], "appli": 4, "necessari": 4, "transform": 4, "distanc": 4, "luminos": 4, "can": 4, "also": [4, 7], "provid": 4, "convert": [4, 8], "unnormalis": 4, "valu": [4, 8], "through": 4, "process": [4, 7], "data": [4, 5, 7, 8], "entir": 4, "dataset": 4, "multipli": 4, "time": 4, "statist": 4, "By": [4, 7], "after": 4, "revers": 4, "scale": 4, "onli": [4, 5], "taken": 4, "total": 4, "per_datapoint": 4, "test_threshold_accuraci": 4, "xdata": 4, "ydata": 4, "threshold": [4, 8], "confusion_matrix": 4, "run_kwarg": 4, "_summary_": 4, "target": 4, "compar": 4, "accuraci": 4, "when": 4, "oper": 4, "classifi": 4, "e": [4, 8], "below": 4, "abov": 4, "confus": 4, "matrix": 4, "format": 4, "kwarg": 4, "keyword": 4, "argument": 4, "pass": [4, 7], "doubl": 4, "confmat": 4, "over": 4, "two": [4, 7], "load_model": 4, "path": 4, "load": 4, "exist": 4, "from": [4, 8], "pkl": 4, "loss_plot": 5, "train_loss": 5, "test_loss": 5, "filenam": 5, "simpl": [3, 5], "routin": 5, "produc": [5, 7], "loss": [5, 7], "curv": [5, 7], "train": [3, 5], "test": [5, 7], "string": 5, "figur": 5, "case": 5, "matplotlib": 5, "fig": 5, "network": [3, 7], "n_epoch": 7, "loss_funct": 7, "optimis": 7, "verbos": 7, "plot": 7, "update_everi": 7, "n_test_batch": 7, "save_best": 7, "schedul": 7, "loop": 7, "instanc": 7, "allow": 7, "basic": 7, "monitor": 7, "includ": 7, "regular": 7, "command": 7, "line": 7, "indic": 7, "current": 7, "progress": 7, "you": 7, "need": 7, "more": 7, "complex": 7, "advis": 7, "write": 7, "your": 7, "own": 7, "start": 7, "point": [7, 8], "label": 7, "respect": [7, 8], "epoch": 7, "per": 7, "It": 7, "recommend": 7, "one": [7, 8], "http": [7, 8], "org": 7, "doc": 7, "stabl": 7, "html": 7, "adam": 7, "learn": [1, 7], "rate": 7, "1e": 7, "3": 7, "should": 7, "instanti": 7, "befor": 7, "displai": 7, "ar": 7, "regularli": 7, "interv": 7, "updat": 7, "diagnost": 7, "achiev": 7, "lowest": 7, "valid": 7, "adjust": 7, "dure": 7, "train_test_split": 7, "ratio": 7, "dtype": 7, "float64": 7, "split": 7, "along": 7, "first": 7, "axi": 7, "support": 7, "switch": 7, "cast": 7, "numpi": 7, "ndarrai": [7, 8], "move": 7, "interpol": 8, "xp": 8, "fp": 8, "One": 8, "dimension": 8, "linear": 8, "monoton": 8, "increas": 8, "sampl": 8, "piecewis": 8, "given": 8, "discret": 8, "evalu": 8, "github": 8, "com": 8, "issu": 8, "50334": 8, "issuecom": 8, "1247611276": 8, "coordin": 8, "must": 8, "y": 8, "same": 8, "length": 8, "detection_probabilty_from_optimal_snr": 8, "optimal_snr": 8, "union": 8, "np": 8, "number_of_detector": 8, "detect": 8, "optim": 8, "snr": 8, "surviv": 8, "non": 8, "central": 8, "chi": 8, "squar": 8, "distribut": 8, "gpu": 8, "compat": 8, "therefor": 8, "forc": 8, "synchronis": 8, "movement": 8, "detector": 8, "detection_prob": 8, "resul": 8, "selection_function_from_optimal_snr": 8, "select": [1, 8], "mean": 8, "api": 9, "arg": [], "refer": 9, "xavier_uniform": 4, "packag": 1, "bias": 1, "machin": 1, "perform": 1, "hyperparamet": 1, "estim": 1, "nn": 1, "tool": 3, "creat": 3, "neural": 3, "subpackag": 9}, "objects": {"": [[1, 0, 0, "-", "poplar"]], "poplar": [[0, 0, 0, "-", "distributions"], [2, 0, 0, "-", "likelihood"], [3, 0, 0, "-", "nn"], [8, 0, 0, "-", "utilities"]], "poplar.nn": [[4, 0, 0, "-", "networks"], [5, 0, 0, "-", "plot"], [6, 0, 0, "-", "rescaling"], [7, 0, 0, "-", "training"]], "poplar.nn.networks": [[4, 1, 1, "", "LinearModel"], [4, 3, 1, "", "load_model"]], "poplar.nn.networks.LinearModel": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "run_on_dataset"], [4, 2, 1, "", "save"], [4, 2, 1, "", "test_threshold_accuracy"]], "poplar.nn.plot": [[5, 3, 1, "", "loss_plot"]], "poplar.nn.training": [[7, 3, 1, "", "train"], [7, 3, 1, "", "train_test_split"]], "poplar.utilities": [[8, 3, 1, "", "detection_probabilty_from_optimal_snr"], [8, 3, 1, "", "interpolate"], [8, 3, 1, "", "selection_function_from_optimal_snr"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [], "poplar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "distribut": 0, "likelihood": 2, "nn": [3, 4, 5, 6, 7], "network": 4, "modul": [4, 5, 7, 8], "content": [4, 5, 7, 8, 9], "class": 4, "function": [4, 5, 7, 8], "plot": 5, "rescal": 6, "train": 7, "util": 8, "welcom": 9, "": 9, "document": 9, "subpackag": 1}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to poplar\u2019s documentation!": [[9, "welcome-to-poplar-s-documentation"]], "Contents:": [[9, null]], "poplar.distributions": [[0, "module-poplar.distributions"]], "poplar": [[1, "module-poplar"]], "Subpackages": [[1, "subpackages"]], "poplar.likelihood": [[2, "module-poplar.likelihood"]], "poplar.nn": [[3, "module-poplar.nn"]], "poplar.nn.networks": [[4, "module-poplar.nn.networks"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Classes": [[4, "classes"]], "Functions": [[4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"]], "poplar.nn.plot": [[5, "module-poplar.nn.plot"]], "poplar.nn.rescaling": [[6, "module-poplar.nn.rescaling"]], "poplar.nn.training": [[7, "module-poplar.nn.training"]], "poplar.utilities": [[8, "module-poplar.utilities"]]}, "indexentries": {"module": [[0, "module-poplar.distributions"], [1, "module-poplar"], [2, "module-poplar.likelihood"], [3, "module-poplar.nn"], [4, "module-poplar.nn.networks"], [5, "module-poplar.nn.plot"], [6, "module-poplar.nn.rescaling"], [7, "module-poplar.nn.training"], [8, "module-poplar.utilities"]], "poplar.distributions": [[0, "module-poplar.distributions"]], "poplar": [[1, "module-poplar"]], "poplar.likelihood": [[2, "module-poplar.likelihood"]], "poplar.nn": [[3, "module-poplar.nn"]], "linearmodel (class in poplar.nn.networks)": [[4, "poplar.nn.networks.LinearModel"]], "forward() (poplar.nn.networks.linearmodel method)": [[4, "poplar.nn.networks.LinearModel.forward"]], "load_model() (in module poplar.nn.networks)": [[4, "poplar.nn.networks.load_model"]], "poplar.nn.networks": [[4, "module-poplar.nn.networks"]], "run_on_dataset() (poplar.nn.networks.linearmodel method)": [[4, "poplar.nn.networks.LinearModel.run_on_dataset"]], "save() (poplar.nn.networks.linearmodel method)": [[4, "poplar.nn.networks.LinearModel.save"]], "test_threshold_accuracy() (poplar.nn.networks.linearmodel method)": [[4, "poplar.nn.networks.LinearModel.test_threshold_accuracy"]], "loss_plot() (in module poplar.nn.plot)": [[5, "poplar.nn.plot.loss_plot"]], "poplar.nn.plot": [[5, "module-poplar.nn.plot"]], "poplar.nn.rescaling": [[6, "module-poplar.nn.rescaling"]], "poplar.nn.training": [[7, "module-poplar.nn.training"]], "train() (in module poplar.nn.training)": [[7, "poplar.nn.training.train"]], "train_test_split() (in module poplar.nn.training)": [[7, "poplar.nn.training.train_test_split"]], "detection_probabilty_from_optimal_snr() (in module poplar.utilities)": [[8, "poplar.utilities.detection_probabilty_from_optimal_snr"]], "interpolate() (in module poplar.utilities)": [[8, "poplar.utilities.interpolate"]], "poplar.utilities": [[8, "module-poplar.utilities"]], "selection_function_from_optimal_snr() (in module poplar.utilities)": [[8, "poplar.utilities.selection_function_from_optimal_snr"]]}})