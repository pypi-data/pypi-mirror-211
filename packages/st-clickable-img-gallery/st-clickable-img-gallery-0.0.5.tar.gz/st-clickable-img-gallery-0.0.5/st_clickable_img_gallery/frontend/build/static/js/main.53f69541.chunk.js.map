{"version":3,"sources":["index.tsx"],"names":["Streamlit","events","addEventListener","RENDER_EVENT","event","data","detail","child","document","body","lastElementChild","removeChild","div","appendChild","createElement","key","args","style","imagesLoaded","i","length","imgDiv","border","padding","cursor","link","href","target","img","src","imgTitle","innerText","paddingLeft","onload","setFrameHeight","setComponentReady"],"mappings":"8KAAA,kBA6GAA,IAAUC,OAAOC,iBAAiBF,IAAUG,cAhD5C,SAAkBC,GAKhB,IAJA,IAAMC,EAAQD,EAAkCE,OAG5CC,EAAQC,SAASC,KAAKC,iBACnBH,GACLC,SAASC,KAAKE,YAAYJ,GAC1BA,EAAQC,SAASC,KAAKC,iBAIxB,IAAIE,EAAMJ,SAASC,KAAKI,YAAYL,SAASM,cAAc,QAC3D,IAAK,IAAIC,KAAOV,EAAKW,KAAL,UACdJ,EAAIK,MAAMF,GAAcV,EAAKW,KAAL,UAAuBD,GAKjD,IADA,IAAIG,EAAe,EACVC,EAAI,EAAGA,EAAId,EAAKW,KAAL,MAAmBI,OAAQD,IAAK,CAClD,IAAIE,EAAST,EAAIC,YAAYL,SAASM,cAAc,QACpDO,EAAOJ,MAAMK,OAAS,kBACtBD,EAAOJ,MAAMM,QAAU,OACvBF,EAAOJ,MAAMO,OAAS,UAEtB,IAAIC,EAAOJ,EAAOR,YAAYL,SAASM,cAAc,MACrDW,EAAKC,KAAOrB,EAAKW,KAAL,MAAmBG,GAC/BM,EAAKE,OAAS,SAEd,IAAIC,EAAMH,EAAKZ,YAAYL,SAASM,cAAc,QAClD,IAAK,IAAIC,KAAOV,EAAKW,KAAL,UACdY,EAAIX,MAAMF,GAAcV,EAAKW,KAAL,UAAuBD,GAGjD,GADAa,EAAIC,IAAMxB,EAAKW,KAAL,MAAmBG,GACzBd,EAAKW,KAAL,OAAoBI,OAASD,EAAG,CAClC,IAAIW,EAAWT,EAAOR,YAAYL,SAASM,cAAc,MACzDgB,EAASC,UAAY1B,EAAKW,KAAL,OAAoBG,GACzCW,EAASb,MAAMe,YAAc,MAG/BJ,EAAIK,OAAS,aACXf,IACqBb,EAAKW,KAAL,MAAmBI,QACtCpB,IAAUkC,sBAOlBlC,IAAUmC,sB","file":"static/js/main.53f69541.chunk.js","sourcesContent":["// import { Streamlit, RenderData } from \"streamlit-component-lib\"\n\n// function onRender(event: Event): void {\n//   const data = (event as CustomEvent<RenderData>).detail\n\n//   // Remove existing content\n//   let child = document.body.lastElementChild;\n//   if (child) {\n//     document.body.removeChild(child)\n//   }\n\n//   // Add and style the image container\n//   let div = document.body.appendChild(document.createElement(\"div\"))\n//   for (let key in data.args[\"div_style\"]) {\n//     div.style[key as any] = data.args[\"div_style\"][key]\n//   }\n\n//   // Add and style all images\n//   let imagesLoaded = 0\n//   for (let i = 0; i < data.args[\"paths\"].length; i++) {\n//     let imgDiv = div.appendChild(document.createElement(\"div\")) // Create a new div for each image and its title\n//     imgDiv.style.border = \"1px solid black\"; // Add a border to the div\n//     imgDiv.style.padding = \"10px\"; // Add some padding to the div\n//     imgDiv.style.cursor = \"pointer\";\n//     imgDiv.onclick = function (): void { // Move the onclick event to the div\n//       Streamlit.setComponentValue(i)\n//     }\n//     imgDiv.onmouseover = function (): void { // Add a mouseover event to darken the image\n//       img.style.opacity = \"0.7\";\n//     }\n//     imgDiv.onmouseout = function (): void { // Add a mouseout event to lighten the image\n//       img.style.opacity = \"1.0\";\n//     }\n//     let img = imgDiv.appendChild(document.createElement(\"img\"))\n//     for (let key in data.args[\"img_style\"]) {\n//       img.style[key as any] = data.args[\"img_style\"][key]\n//     }\n//     img.src = data.args[\"paths\"][i]\n//     if (data.args[\"titles\"].length > i) {\n//       let imgTitle = imgDiv.appendChild(document.createElement(\"p\")) // Create a new p element for the title\n//       imgTitle.innerText = data.args[\"titles\"][i] // Set the innerText of the p element to the title\n//       imgTitle.style.paddingLeft = \"8px\"\n//     }\n//     // img.onclick = function (): void {\n//     //   Streamlit.setComponentValue(i)\n//     // }\n//     // eslint-disable-next-line\n//     img.onload = function (): void {\n//       imagesLoaded++\n//       if (imagesLoaded === data.args[\"paths\"].length) {\n//         Streamlit.setFrameHeight()\n//       }\n//     }\n//   }\n// }\n\n// Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n// Streamlit.setComponentReady()\n\nimport { Streamlit, RenderData } from \"streamlit-component-lib\"\n\nfunction onRender(event: Event): void {\n  const data = (event as CustomEvent<RenderData>).detail\n\n  // Remove existing content\n  let child = document.body.lastElementChild;\n  while (child) {\n    document.body.removeChild(child);\n    child = document.body.lastElementChild;\n  }\n\n  // Add and style the image container\n  let div = document.body.appendChild(document.createElement(\"div\"))\n  for (let key in data.args[\"div_style\"]) {\n    div.style[key as any] = data.args[\"div_style\"][key]\n  }\n\n  // Add and style all images\n  let imagesLoaded = 0\n  for (let i = 0; i < data.args[\"paths\"].length; i++) {\n    let imgDiv = div.appendChild(document.createElement(\"div\")) // Create a new div for each image and its title\n    imgDiv.style.border = \"1px solid black\"; // Add a border to the div\n    imgDiv.style.padding = \"10px\"; // Add some padding to the div\n    imgDiv.style.cursor = \"pointer\";\n\n    let link = imgDiv.appendChild(document.createElement(\"a\")) // Create a new link element\n    link.href = data.args[\"links\"][i] // Set the href to the link from the \"links\" array\n    link.target = \"_blank\" // Open the link in a new tab\n\n    let img = link.appendChild(document.createElement(\"img\")) // Append the img element to the link instead of the div\n    for (let key in data.args[\"img_style\"]) {\n      img.style[key as any] = data.args[\"img_style\"][key]\n    }\n    img.src = data.args[\"paths\"][i]\n    if (data.args[\"titles\"].length > i) {\n      let imgTitle = imgDiv.appendChild(document.createElement(\"p\")) // Create a new p element for the title\n      imgTitle.innerText = data.args[\"titles\"][i] // Set the innerText of the p element to the title\n      imgTitle.style.paddingLeft = \"8px\"\n    }\n    // eslint-disable-next-line\n    img.onload = function (): void {\n      imagesLoaded++\n      if (imagesLoaded === data.args[\"paths\"].length) {\n        Streamlit.setFrameHeight()\n      }\n    }\n  }\n}\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\nStreamlit.setComponentReady()\n\n"],"sourceRoot":""}