Metadata-Version: 2.1
Name: CalSciPy
Version: 0.3.2
Summary: A collection
Author: Darik A. O'Neil
Maintainer: Darik A. O'Neil
License: MIT License
        
        Copyright (c) 2023 Darik A Oâ€™Neil
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: documentation, https://calscipy.readthedocs.io/en/latest/?badge=latest
Project-URL: repository, https://github.com/darikoneil/CalSciPy
Keywords: CalSciPy,Calcium Imaging
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: <4,>=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: pillow
Requires-Dist: PPVD
Requires-Dist: prettytable
Requires-Dist: PyQt5
Requires-Dist: seaborn
Requires-Dist: scikit-learn
Requires-Dist: scipy
Requires-Dist: tqdm
Provides-Extra: development
Requires-Dist: build ; extra == 'development'
Requires-Dist: coverage[toml] ; extra == 'development'
Requires-Dist: coveralls ; extra == 'development'
Requires-Dist: flake8 ; extra == 'development'
Requires-Dist: flake8-annotations ; extra == 'development'
Requires-Dist: flake8-bugbear ; extra == 'development'
Requires-Dist: flake8-class-attributes-order ; extra == 'development'
Requires-Dist: flake8-comprehensions ; extra == 'development'
Requires-Dist: flake8-html ; extra == 'development'
Requires-Dist: flake8-unused-arguments ; extra == 'development'
Requires-Dist: pytest ; extra == 'development'
Requires-Dist: pytest-datafiles (==2.0.1) ; extra == 'development'
Requires-Dist: pytest-lazy-fixture ; extra == 'development'
Requires-Dist: pytest-sugar ; extra == 'development'
Requires-Dist: pytest-clarity ; extra == 'development'
Requires-Dist: toml ; extra == 'development'
Requires-Dist: tomli ; extra == 'development'
Requires-Dist: twine ; extra == 'development'
Provides-Extra: gpu
Requires-Dist: cupy ; extra == 'gpu'

## CalSciPy       
<!-- Line 1 Badges... PyPi, Downloads, Maintained, Coverage, Documentation -->
<!-- Line 2 Badges... Python Versions, PyPi Status, License, Contributors -->
![PyPI](https://img.shields.io/pypi/v/CalSciPy)
![PyPI - Downloads](https://img.shields.io/pypi/dm/CalSciPy)
![Maintenance](https://img.shields.io/maintenance/yes/2023)
[![Coverage Status](https://coveralls.io/repos/github/darikoneil/CalSciPy/badge.svg?branch=master)](https://coveralls.io/github/darikoneil/CalSciPy?branch=master)
[![Documentation Status](https://readthedocs.org/projects/calscipy/badge/?version=latest)](https://calscipy.readthedocs.io/en/latest/?badge=latest)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/CalSciPy?)
![PyPI - Status](https://img.shields.io/pypi/status/CalSciPy)
![GitHub](https://img.shields.io/github/license/darikoneil/CalSciPy)
[![Contributors](https://img.shields.io/github/contributors-anon/darikoneil/CalSciPy)](https://github.com/darikoneil/CalSciPy/graphs/contributors)
![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/darikoneil/CalSciPy/calscipy_lint_test_action.yml)


This python packages contains a variety of useful methods for handling, processing, and visualizing calcium imaging data. It's intended to be a collection of useful, well-documented functions often used in boilerplate code alongside software packages such as [Caiman](https://github.com/flatironinstitute/CaImAn), [SIMA](https://github.com/losonczylab/sima), and [Suite2P](https://github.com/MouseLand/suite2p).

#### Highlights
* Assign unique colormaps to subsets of ROIs to generate rich, informative videos
* Perona-Malik diffusion for edge-preserving denoising
* Methods for handling Bruker's PrairieView data
* Interactive visualization

#### Installation
`pip install CalSciPy`

#### Subpackages
* Bruker - MAIN
* Coloring - TODO
* Event Processing - DEV
* Input/Output (I/O) - MAIN
* Image Processing - DEV
* Interactive Visuals - TODO
* Reorganization - MAIN
* Signal Processing - DEV
* Static Visuals - TODO

#### Documentation
Hosted at [ReadtheDocs](https://calscipy.readthedocs.io/en/latest/index.html#).
Available locally as [HTML](https://github.com/darikoneil/CalSciPy/tree/master/docs/build/html), [LATEX](https://github.com/darikoneil/CalSciPy/tree/master/docs/build/latex) and [PDF](https://github.com/darikoneil/CalSciPy/blob/master/docs/build/pdf/calscipy.pdf).

#### Roadmap
TODO - UNDOCUMENTED / OFFLINE     
DEV - UNTESTED / IN DEV BRANCH      
MAIN - COMPLETE /  IN MAIN BRANCH     

Generally completing each module before the next.     
Exceptions done last:       
* Bruker's Prairiview XML
* Bruker's Prairieview ENV parsing
* Trace Processing's Diffusion
* Event Processing's Covariance
* Interactive's ROI methods
