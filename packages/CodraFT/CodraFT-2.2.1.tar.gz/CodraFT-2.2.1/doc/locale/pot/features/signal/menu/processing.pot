# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, CODRA - Pierre Raybaut
# This file is distributed under the same license as the CodraFT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CodraFT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-02 11:38+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../features/signal/menu/processing.rst:2
msgid "\"Processing\" menu"
msgstr ""

#: ../../features/signal/menu/processing.rst:23
msgid "Normalize"
msgstr ""

#: ../../features/signal/menu/processing.rst:7
msgid "Create a new signal which is the normalization of each selected signal by maximum, amplitude, sum or energy:"
msgstr ""

#: ../../features/signal/menu/processing.rst:14
#: ../../features/signal/menu/processing.rst:39
msgid "Parameter"
msgstr ""

#: ../../features/signal/menu/processing.rst:15
msgid "Normalization"
msgstr ""

#: ../../features/signal/menu/processing.rst:16
msgid "Maximum"
msgstr ""

#: ../../features/signal/menu/processing.rst:17
msgid ":math:`y_{1}= \\dfrac{y_{0}}{max(y_{0})}`"
msgstr ""

#: ../../features/signal/menu/processing.rst:18
msgid "Amplitude"
msgstr ""

#: ../../features/signal/menu/processing.rst:19
msgid ":math:`y_{1}= \\dfrac{y_{0}'}{max(y_{0}')}` with :math:`y_{0}'=y_{0}-min(y_{0})`"
msgstr ""

#: ../../features/signal/menu/processing.rst:20
msgid "Sum"
msgstr ""

#: ../../features/signal/menu/processing.rst:21
msgid ":math:`y_{1}= \\dfrac{y_{0}}{\\sum_{n=0}^{N}y_{0}[n]}`"
msgstr ""

#: ../../features/signal/menu/processing.rst:22
msgid "Energy"
msgstr ""

#: ../../features/signal/menu/processing.rst:23
msgid ":math:`y_{1}= \\dfrac{y_{0}}{\\sum_{n=0}^{N}|y_{0}[n]|^2}`"
msgstr ""

#: ../../features/signal/menu/processing.rst:26
msgid "Derivative"
msgstr ""

#: ../../features/signal/menu/processing.rst:26
msgid "Create a new signal which is the derivative of each selected signal."
msgstr ""

#: ../../features/signal/menu/processing.rst:29
msgid "Integral"
msgstr ""

#: ../../features/signal/menu/processing.rst:29
msgid "Create a new signal which is the integral of each selected signal."
msgstr ""

#: ../../features/signal/menu/processing.rst:44
#: ../../features/signal/menu/processing.rst:40
msgid "Linear calibration"
msgstr ""

#: ../../features/signal/menu/processing.rst:32
msgid "Create a new signal which is a linear calibration of each selected signal with respect to X or Y axis:"
msgstr ""

#: ../../features/signal/menu/processing.rst:41
msgid "X-axis"
msgstr ""

#: ../../features/signal/menu/processing.rst:42
msgid ":math:`x_{1} = a.x_{0} + b`"
msgstr ""

#: ../../features/signal/menu/processing.rst:43
msgid "Y-axis"
msgstr ""

#: ../../features/signal/menu/processing.rst:44
msgid ":math:`y_{1} = a.y_{0} + b`"
msgstr ""

#: ../../features/signal/menu/processing.rst:48
msgid "Gaussian filter"
msgstr ""

#: ../../features/signal/menu/processing.rst:47
msgid "Compute 1D-Gaussian filter of each selected signal (implementation based on `scipy.ndimage.gaussian_filter1d <https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.gaussian_filter1d.html>`_)."
msgstr ""

#: ../../features/signal/menu/processing.rst:55
msgid "Moving average"
msgstr ""

#: ../../features/signal/menu/processing.rst:51
msgid "Compute moving average on :math:`M` points of each selected signal, without border effect:"
msgstr ""

#: ../../features/signal/menu/processing.rst:54
msgid "y_{1}[i]=\\dfrac{1}{M}\\sum_{j=0}^{M-1}y_{0}[i+j]\n"
"\n"
""
msgstr ""

#: ../../features/signal/menu/processing.rst:59
msgid "Moving median"
msgstr ""

#: ../../features/signal/menu/processing.rst:58
msgid "Compute moving median of each selected signal (implementation based on `scipy.signal.medfilt <https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.medfilt.html>`_)."
msgstr ""

#: ../../features/signal/menu/processing.rst:63
msgid "Wiener filter"
msgstr ""

#: ../../features/signal/menu/processing.rst:62
msgid "Compute Wiener filter of each selected signal (implementation based on `scipy.signal.wiener <https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.wiener.html>`_)."
msgstr ""

#: ../../features/signal/menu/processing.rst:67
msgid "FFT"
msgstr ""

#: ../../features/signal/menu/processing.rst:66
msgid "Create a new signal which is the Fast Fourier Transform (FFT) of each selected signal."
msgstr ""

#: ../../features/signal/menu/processing.rst:70
msgid "Inverse FFT"
msgstr ""

#: ../../features/signal/menu/processing.rst:70
msgid "Create a new signal which is the inverse FFT of each selected signal."
msgstr ""

#: ../../features/signal/menu/processing.rst:87
msgid "Lorentzian, Voigt, Polynomial and Multi-Gaussian fit"
msgstr ""

#: ../../features/signal/menu/processing.rst:73
msgid "Open an interactive curve fitting tool in a modal dialog box."
msgstr ""

#: ../../features/signal/menu/processing.rst:79
msgid "Model"
msgstr ""

#: ../../features/signal/menu/processing.rst:80
msgid "Equation"
msgstr ""

#: ../../features/signal/menu/processing.rst:81
msgid "Gaussian"
msgstr ""

#: ../../features/signal/menu/processing.rst:82
msgid ":math:`y = y_{0}+\\dfrac{A}{\\sqrt{2\\pi}.\\sigma}.exp(-\\dfrac{1}{2}.(\\dfrac{x-x_{0}}{\\sigma})^2)`"
msgstr ""

#: ../../features/signal/menu/processing.rst:83
msgid "Lorentzian"
msgstr ""

#: ../../features/signal/menu/processing.rst:84
msgid ":math:`y = y_{0}+\\dfrac{A}{\\sigma.\\pi}.\\dfrac{1}{1+(\\dfrac{x-x_{0}}{\\sigma})^2}`"
msgstr ""

#: ../../features/signal/menu/processing.rst:85
msgid "Voigt"
msgstr ""

#: ../../features/signal/menu/processing.rst:86
msgid ":math:`y = y_{0}+A.\\dfrac{Re(exp(-z^2).erfc(-j.z))}{\\sqrt{2\\pi}.\\sigma}` with :math:`z = \\dfrac{x-x_{0}-j.\\sigma}{\\sqrt{2}.\\sigma}`"
msgstr ""

#: ../../features/signal/menu/processing.rst:87
msgid "Multi-Gaussian"
msgstr ""

#: ../../features/signal/menu/processing.rst:88
msgid ":math:`y = y_{0}+\\sum_{i=0}^{K}\\dfrac{A_{i}}{\\sqrt{2\\pi}.\\sigma_{i}}.exp(-\\dfrac{1}{2}.(\\dfrac{x-x_{0,i}}{\\sigma_{i}})^2)`"
msgstr ""
