{"version":3,"file":"chunks/app_views_starfish_modules_HTTPModule_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"mYAIA,MAAMA,GAAmBC,EAAAA,EAAAA,eAGtB,CACDC,eAAWC,EACXC,aAAeC,QAGV,SAASC,EAAiBC,GAA0C,IAAzC,SAACC,GAAsCD,EACvE,MAAOL,EAAWE,IAAgBK,EAAAA,EAAAA,YAClC,OACEC,EAAAA,EAAAA,IAACV,EAAiBW,SAAQ,CACxBC,MAAO,CACLV,YACAE,gBACAI,SAEDA,GAGP,CAEO,SAASK,IACd,MAAM,UAACX,IAAaY,EAAAA,EAAAA,YAAWd,GAC/B,OAAKE,GAKHQ,EAAAA,EAAAA,IAACK,EAAAA,GAAK,CAACC,KAAK,QAAQ,eAAa,mBAAmBC,UAAQ,EAAAT,SACzDN,IALI,IAQX,CAzBgBI,EAAiBY,YAAA,oBAcjBL,EAAcK,YAAA,iBAavB,MAAMC,EAAeA,KAAML,EAAAA,EAAAA,YAAWd,E,idC7B9B,SAASoB,IACtB,OACEV,EAAAA,EAAAA,IAACW,EAAAA,GAAW,CAAAb,UACVc,EAAAA,EAAAA,IAAChB,EAAAA,GAAiB,CAAAE,SAAA,EAChBE,EAAAA,EAAAA,IAACW,EAAAA,GAAa,CAAAb,UACZE,EAAAA,EAAAA,IAACW,EAAAA,GAAoB,CAAAb,UACnBE,EAAAA,EAAAA,IAACW,EAAAA,GAAY,CAAAb,UAAEe,EAAAA,EAAAA,GAAE,cAIrBb,EAAAA,EAAAA,IAACW,EAAAA,GAAW,CAAAb,UACVc,EAAAA,EAAAA,IAACD,EAAAA,GAAW,CAACG,WAAS,EAAAhB,SAAA,EACpBE,EAAAA,EAAAA,IAACG,EAAAA,GAAc,KACfH,EAAAA,EAAAA,IAACe,EAAAA,EAAoB,CAAAjB,UACnBE,EAAAA,EAAAA,IAACgB,EAAAA,EAAS,CAACC,WAAYC,EAAAA,EAAAA,kBAOrC,CArBwBR,EAAUF,YAAA,Y","sources":["webpack:///./app/utils/performance/contexts/pageError.tsx","webpack:///./app/views/starfish/modules/HTTPModule.tsx"],"sourcesContent":["import {createContext, useContext, useState} from 'react';\n\nimport {Alert} from 'sentry/components/alert';\n\nconst pageErrorContext = createContext<{\n  setPageError: (error: string | undefined) => void;\n  pageError?: string;\n}>({\n  pageError: undefined,\n  setPageError: (_: string | undefined) => {},\n});\n\nexport function PageErrorProvider({children}: {children: React.ReactNode}) {\n  const [pageError, setPageError] = useState<string | undefined>();\n  return (\n    <pageErrorContext.Provider\n      value={{\n        pageError,\n        setPageError,\n      }}\n    >\n      {children}\n    </pageErrorContext.Provider>\n  );\n}\n\nexport function PageErrorAlert() {\n  const {pageError} = useContext(pageErrorContext);\n  if (!pageError) {\n    return null;\n  }\n\n  return (\n    <Alert type=\"error\" data-test-id=\"page-error-alert\" showIcon>\n      {pageError}\n    </Alert>\n  );\n}\n\nexport const usePageError = () => useContext(pageErrorContext);\n","import * as Layout from 'sentry/components/layouts/thirds';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {t} from 'sentry/locale';\nimport {\n  PageErrorAlert,\n  PageErrorProvider,\n} from 'sentry/utils/performance/contexts/pageError';\nimport {ModuleName} from 'sentry/views/starfish/types';\nimport SpansView from 'sentry/views/starfish/views/spans/spansView';\n\nexport default function HTTPModule() {\n  return (\n    <Layout.Page>\n      <PageErrorProvider>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Layout.Title>{t('API')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <PageErrorAlert />\n            <PageFiltersContainer>\n              <SpansView moduleName={ModuleName.HTTP} />\n            </PageFiltersContainer>\n          </Layout.Main>\n        </Layout.Body>\n      </PageErrorProvider>\n    </Layout.Page>\n  );\n}\n"],"names":["pageErrorContext","createContext","pageError","undefined","setPageError","_","PageErrorProvider","_ref","children","useState","_jsx","Provider","value","PageErrorAlert","useContext","Alert","type","showIcon","displayName","usePageError","HTTPModule","Layout","_jsxs","t","fullWidth","PageFiltersContainer","SpansView","moduleName","ModuleName"],"sourceRoot":""}