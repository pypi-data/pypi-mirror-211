{"version":3,"file":"chunks/app_components_platformPicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/platformPicker.tsx","webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport SearchBar from 'sentry/components/searchBar';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\n\nexport const PLATFORM_CATEGORIES: {\n  id: string;\n  name: string;\n  platforms?: PlatformKey[];\n}[] = [...JSON.parse(JSON.stringify(categoryList)), {id: 'all', name: t('All')}];\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nexport type Category = (typeof PLATFORM_CATEGORIES)[number]['id'];\n\nexport type Platform = PlatformIntegration & {\n  category: Category;\n};\n\ninterface PlatformPickerProps {\n  setPlatform: (props: Platform | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) => {\n      if (category === 'all') {\n        return true;\n      }\n\n      // Symfony was no appering under the server category\n      // because the php-symfony entry in src/sentry/integration-docs/_platforms.json\n      // does not contain the suffix 2.\n      // This is a temporary fix until we can update that file or completly remove the php-symfony2 occurrences\n      if (\n        (platform.id as any) === 'php-symfony' &&\n        (currentCategory?.platforms as undefined | string[])?.includes('php-symfony2')\n      ) {\n        return true;\n      }\n      return (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n    };\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAnalytics('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAnalytics('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <StyledSearchBar\n            size=\"sm\"\n            query={filter}\n            placeholder={t('Filter Platforms')}\n            onChange={val => this.setState({filter: val}, this.logSearch)}\n          />\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => {\n            return (\n              <PlatformCard\n                data-test-id={`platform-${platform.id}`}\n                key={platform.id}\n                platform={platform}\n                selected={this.props.platform === platform.id}\n                onClear={(e: React.MouseEvent) => {\n                  setPlatform(null);\n                  e.stopPropagation();\n                }}\n                onClick={() => {\n                  trackAnalytics('growth.select_platform', {\n                    platform_id: platform.id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  setPlatform({...platform, category});\n                }}\n              />\n            );\n          })}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  min-width: 6rem;\n  max-width: 12rem;\n  margin-top: -${space(0.25)};\n  margin-left: auto;\n  flex-shrink: 0;\n  flex-basis: 0;\n  flex-grow: 1;\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n  cursor: pointer;\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n"],"names":["ListLink","_ref","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","_jsx","StyledLi","classNames","RouterLink","onlyActiveOnIndex","displayName","_styled","shouldForwardProp","prop","p","theme","PLATFORM_CATEGORIES","JSON","parse","stringify","categoryList","id","name","t","PlatformList","space","PlatformPicker","Component","constructor","arguments","_defineProperty","category","this","defaultCategory","filter","noAutoFilter","platform","split","debounce","state","trackAnalytics","search","toLowerCase","num_results","platformList","length","source","organization","DEFAULT_DEBOUNCE_DURATION","currentCategory","filtered","platforms","includes","filterAliases","some","alias","sort","a","b","localeCompare","showOther","_ref2","render","setPlatform","listProps","listClassName","_jsxs","Fragment","NavContainer","CategoryNav","map","_ref3","onClick","e","setState","preventDefault","StyledSearchBar","size","placeholder","onChange","val","logSearch","PlatformCard","selected","onClear","stopPropagation","platform_id","EmptyMessage","icon","IconProject","title","tct","ExternalLink","href","border","SearchBar","NavTabs","styles","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","defaultProps","IconClose","isCircled","borderless","_ref4","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","subText","fontSizeExtraSmall","queryProp","defaultQuery","onSearch","width","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","value","onSubmit","current","blur","clearSearch","FormWrap","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","type","autoComplete","SearchBarTrailingButton"],"sourceRoot":""}