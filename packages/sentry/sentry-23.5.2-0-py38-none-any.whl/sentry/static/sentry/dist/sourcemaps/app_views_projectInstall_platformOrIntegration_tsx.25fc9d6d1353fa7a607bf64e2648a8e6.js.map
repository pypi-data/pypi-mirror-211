{"version":3,"file":"chunks/app_views_projectInstall_platformOrIntegration_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/projectInstall/platform.tsx","webpack:///./app/views/onboarding/components/firstEventIndicator.tsx","webpack:///./app/views/projectInstall/components/firstEventFooter.tsx","webpack:///./app/views/projectInstall/components/platformHeaderButtonBar.tsx","webpack:///./app/views/projectInstall/platformIntegrationSetup.tsx","webpack:///./app/views/projectInstall/platformOrIntegration.tsx"],"sourcesContent":["import {Fragment, useCallback, useEffect, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {loadDocs} from 'sentry/actionCreators/projects';\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {DocumentationWrapper} from 'sentry/components/onboarding/documentationWrapper';\nimport {Footer} from 'sentry/components/onboarding/footer';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {\n  performance as performancePlatforms,\n  Platform,\n  PlatformKey,\n} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconChevron} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\n// in this case, the default is rendered inside the hook\nconst SetUpSdkDoc = HookOrDefault({\n  hookName: 'component:set-up-sdk-doc',\n});\n\ntype Props = RouteComponentProps<{platform: string; projectId: string}, {}>;\n\nexport function SetUpGeneralSdkDoc({\n  organization,\n  projectSlug,\n  platform,\n}: {\n  organization: Organization;\n  platform: Platform;\n  projectSlug: Project['slug'];\n}) {\n  const api = useApi();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [html, setHtml] = useState('');\n\n  const fetchDocs = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const {html: reponse} = await loadDocs({\n        api,\n        orgSlug: organization.slug,\n        projectSlug,\n        platform: platform.key as PlatformKey,\n      });\n      setHtml(reponse);\n      window.scrollTo(0, 0);\n    } catch (err) {\n      setError(err);\n    }\n\n    setLoading(false);\n  }, [api, organization.slug, projectSlug, platform.key]);\n\n  useEffect(() => {\n    fetchDocs();\n  }, [fetchDocs]);\n\n  return (\n    <div>\n      <Alert type=\"info\" showIcon>\n        {tct(\n          `\n           This is a quick getting started guide. For in-depth instructions\n           on integrating Sentry with [platform], view\n           [docLink:our complete documentation].`,\n          {\n            platform: platform.name,\n            docLink: <ExternalLink href={platform.link ?? undefined} />,\n          }\n        )}\n      </Alert>\n      {loading ? (\n        <LoadingIndicator />\n      ) : error ? (\n        <LoadingError onRetry={fetchDocs} />\n      ) : (\n        <Fragment>\n          <SentryDocumentTitle\n            title={`${t('Configure')} ${platform.name}`}\n            projectSlug={projectSlug}\n          />\n          <DocumentationWrapper dangerouslySetInnerHTML={{__html: html}} />\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport function ProjectInstallPlatform({location, params, route, router}: Props) {\n  const organization = useOrganization();\n  const isSelfHosted = ConfigStore.get('isSelfHosted');\n\n  const {projects, initiallyLoaded} = useProjects({\n    slugs: [params.projectId],\n    orgId: organization.slug,\n  });\n\n  const loadingProjects = !initiallyLoaded;\n  const project = !loadingProjects\n    ? projects.find(proj => proj.slug === params.projectId)\n    : undefined;\n\n  const heartbeatFooter = !!organization?.features.includes(\n    'onboarding-heartbeat-footer'\n  );\n\n  const currentPlatform = params.platform ?? 'other';\n  const platformIntegration = platforms.find(p => p.id === currentPlatform);\n  const platform: Platform = {\n    key: currentPlatform as PlatformKey,\n    id: platformIntegration?.id,\n    name: platformIntegration?.name,\n    link: platformIntegration?.link,\n  };\n\n  const redirectToNeutralDocs = useCallback(() => {\n    if (!project?.slug) {\n      return;\n    }\n\n    router.push(\n      normalizeUrl(\n        `/organizations/${organization.slug}/projects/${project.slug}/getting-started/`\n      )\n    );\n  }, [organization.slug, project?.slug, router]);\n\n  useEffect(() => {\n    // redirect if platform is not known.\n    if (!platform.key || platform.key === 'other') {\n      redirectToNeutralDocs();\n    }\n  }, [platform.key, redirectToNeutralDocs]);\n\n  if (!platform.id) {\n    return <NotFound />;\n  }\n\n  const issueStreamLink = `/organizations/${organization.slug}/issues/`;\n  const performanceOverviewLink = `/organizations/${organization.slug}/performance/`;\n  const gettingStartedLink = `/organizations/${organization.slug}/projects/${params.projectId}/getting-started/`;\n  const showPerformancePrompt = performancePlatforms.includes(platform.id as PlatformKey);\n  const isGettingStarted = window.location.href.indexOf('getting-started') > 0;\n\n  if (!project) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <StyledPageHeader>\n        <h2>{t('Configure %(platform)s SDK', {platform: platform.name})}</h2>\n        <ButtonBar gap={1}>\n          <Button\n            icon={<IconChevron direction=\"left\" size=\"sm\" />}\n            size=\"sm\"\n            to={gettingStartedLink}\n          >\n            {t('Back')}\n          </Button>\n          <Button size=\"sm\" href={platform.link ?? undefined} external>\n            {t('Full Documentation')}\n          </Button>\n        </ButtonBar>\n      </StyledPageHeader>\n      <div>\n        {isSelfHosted ? (\n          <SetUpGeneralSdkDoc\n            organization={organization}\n            projectSlug={project.slug}\n            platform={platform}\n          />\n        ) : (\n          <SetUpSdkDoc\n            organization={organization}\n            project={project}\n            location={location}\n            platform={platform}\n          />\n        )}\n\n        {isGettingStarted && showPerformancePrompt && (\n          <Feature\n            features={['performance-view']}\n            hookName=\"feature-disabled:performance-new-project\"\n          >\n            {({hasFeature}) => {\n              if (hasFeature) {\n                return null;\n              }\n              return (\n                <StyledAlert type=\"info\" showIcon>\n                  {t(\n                    `Your selected platform supports performance, but your organization does not have performance enabled.`\n                  )}\n                </StyledAlert>\n              );\n            }}\n          </Feature>\n        )}\n\n        {isGettingStarted && heartbeatFooter ? (\n          <Footer\n            projectSlug={params.projectId}\n            projectId={project?.id}\n            route={route}\n            router={router}\n            location={location}\n          />\n        ) : (\n          <StyledButtonBar gap={1}>\n            <Button\n              priority=\"primary\"\n              busy={loadingProjects}\n              to={{\n                pathname: issueStreamLink,\n                query: project?.id,\n                hash: '#welcome',\n              }}\n            >\n              {t('Take me to Issues')}\n            </Button>\n            <Button\n              busy={loadingProjects}\n              to={{\n                pathname: performanceOverviewLink,\n                query: project?.id,\n              }}\n            >\n              {t('Take me to Performance')}\n            </Button>\n          </StyledButtonBar>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(3)};\n  width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: auto;\n    grid-row-gap: ${space(1)};\n    grid-auto-flow: row;\n  }\n`;\n\nconst StyledPageHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n\n  h2 {\n    margin: 0;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    flex-direction: column;\n    align-items: flex-start;\n\n    h2 {\n      margin-bottom: ${space(2)};\n    }\n  }\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-top: ${space(2)};\n`;\n","import styled from '@emotion/styled';\nimport {AnimatePresence, HTMLMotionProps, motion, Variants} from 'framer-motion';\n\nimport {Button} from 'sentry/components/button';\nimport {IconCheckmark} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport pulsingIndicatorStyles from 'sentry/styles/pulsingIndicator';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventWaiter, {EventWaiterProps} from 'sentry/utils/eventWaiter';\nimport testableTransition from 'sentry/utils/testableTransition';\n\ntype RenderProps = {\n  firstEventButton: React.ReactNode;\n  indicator: React.ReactNode;\n};\n\ninterface FirstEventIndicatorProps extends Omit<EventWaiterProps, 'children' | 'api'> {\n  children: (props: RenderProps) => React.ReactNode;\n}\n\nfunction FirstEventIndicator({children, ...props}: FirstEventIndicatorProps) {\n  return (\n    <EventWaiter {...props}>\n      {({firstIssue}) =>\n        children({\n          indicator: <Indicator firstIssue={firstIssue} {...props} />,\n          firstEventButton: (\n            <Button\n              title={t(\"You'll need to send your first error to continue\")}\n              tooltipProps={{disabled: !!firstIssue}}\n              disabled={!firstIssue}\n              priority=\"primary\"\n              onClick={() =>\n                trackAnalytics('growth.onboarding_take_to_error', {\n                  organization: props.organization,\n                })\n              }\n              to={`/organizations/${props.organization.slug}/issues/${\n                firstIssue && firstIssue !== true && 'id' in firstIssue\n                  ? `${firstIssue.id}/`\n                  : ''\n              }?referrer=onboarding-first-event-indicator`}\n            >\n              {t('Take me to my error')}\n            </Button>\n          ),\n        })\n      }\n    </EventWaiter>\n  );\n}\n\ninterface IndicatorProps extends Omit<EventWaiterProps, 'children' | 'api'> {\n  firstIssue: null | boolean | Group;\n}\n\nfunction Indicator({firstIssue}: IndicatorProps) {\n  return (\n    <Container>\n      <AnimatePresence>\n        {!firstIssue ? <Waiting key=\"waiting\" /> : <Success key=\"received\" />}\n      </AnimatePresence>\n    </Container>\n  );\n}\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: right;\n`;\n\nconst StatusWrapper = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  /* Keep the wrapper in the parent grids first cell for transitions */\n  grid-column: 1;\n  grid-row: 1;\n`;\n\nStatusWrapper.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: {\n    initial: {opacity: 0, y: -10},\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: testableTransition({when: 'beforeChildren', staggerChildren: 0.35}),\n    },\n    exit: {opacity: 0, y: 10},\n  },\n};\n\nfunction Waiting(props: HTMLMotionProps<'div'>) {\n  return (\n    <StatusWrapper {...props}>\n      <AnimatedText>{t('Waiting to receive first event to continue')}</AnimatedText>\n      <WaitingIndicator />\n    </StatusWrapper>\n  );\n}\n\nfunction Success(props: HTMLMotionProps<'div'>) {\n  return (\n    <StatusWrapper {...props}>\n      <AnimatedText>{t('Event was received!')}</AnimatedText>\n      <ReceivedIndicator />\n    </StatusWrapper>\n  );\n}\n\nconst indicatorAnimation: Variants = {\n  initial: {opacity: 0, y: -10},\n  animate: {opacity: 1, y: 0},\n  exit: {opacity: 0, y: 10},\n};\n\nconst AnimatedText = styled(motion.div)``;\n\nAnimatedText.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst WaitingIndicator = styled(motion.div)`\n  margin: 0 6px;\n  ${pulsingIndicatorStyles};\n`;\n\nWaitingIndicator.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst ReceivedIndicator = styled(IconCheckmark)`\n  color: #fff;\n  background: ${p => p.theme.green300};\n  border-radius: 50%;\n  padding: 3px;\n  margin: 0 ${space(0.25)};\n`;\n\nReceivedIndicator.defaultProps = {\n  size: 'sm',\n};\n\nexport {Indicator};\n\nexport default FirstEventIndicator;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport FirstEventIndicator from 'sentry/views/onboarding/components/firstEventIndicator';\nimport CreateSampleEventButton from 'sentry/views/onboarding/createSampleEventButton';\n\ninterface FirstEventFooterProps {\n  organization: Organization;\n  project: Project;\n  docsLink?: string;\n  docsOnClick?: () => void;\n}\n\nexport default function FirstEventFooter({\n  organization,\n  project,\n  docsLink,\n  docsOnClick,\n}: FirstEventFooterProps) {\n  return (\n    <Fragment>\n      <FirstEventIndicator\n        organization={organization}\n        project={project}\n        eventType=\"error\"\n      >\n        {({indicator, firstEventButton}) => (\n          <CTAFooter>\n            <Actions gap={2}>\n              {firstEventButton}\n              <Button external href={docsLink} onClick={docsOnClick}>\n                {t('View full documentation')}\n              </Button>\n            </Actions>\n            {indicator}\n          </CTAFooter>\n        )}\n      </FirstEventIndicator>\n      <CTASecondary>\n        {tct(\n          'Just want to poke around before getting too cozy with the SDK? [sample:View a sample event for this SDK] or [skip:finish setup later].',\n          {\n            sample: (\n              <CreateSampleEventButton\n                aria-label=\"View a sample event\"\n                project={project}\n                source=\"onboarding\"\n                priority=\"link\"\n              />\n            ),\n            skip: (\n              <Button priority=\"link\" href=\"/\" aria-label={t('Finish setup later')} />\n            ),\n          }\n        )}\n      </CTASecondary>\n    </Fragment>\n  );\n}\n\nconst CTAFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin: ${space(2)} 0;\n  margin-top: ${space(4)};\n`;\n\nconst CTASecondary = styled('p')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  max-width: 500px;\n`;\n\nconst Actions = styled(ButtonBar)`\n  display: inline-grid;\n  justify-self: start;\n`;\n","import {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  docsLink: string;\n  gettingStartedLink: string;\n};\n\nexport default function PlatformHeaderButtonBar({gettingStartedLink, docsLink}: Props) {\n  return (\n    <ButtonBar gap={1}>\n      <Button\n        size=\"sm\"\n        icon={<IconChevron size=\"xs\" direction=\"left\" />}\n        to={gettingStartedLink}\n      >\n        {t('Back')}\n      </Button>\n      <Button size=\"sm\" href={docsLink} external>\n        {t('Full Documentation')}\n      </Button>\n    </ButtonBar>\n  );\n}\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport platforms from 'sentry/data/platforms';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {IntegrationProvider, Organization, Project} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AddInstallationInstructions from 'sentry/views/onboarding/components/integrations/addInstallationInstructions';\nimport PostInstallCodeSnippet from 'sentry/views/onboarding/components/integrations/postInstallCodeSnippet';\nimport {AddIntegrationButton} from 'sentry/views/settings/organizationIntegrations/addIntegrationButton';\n\nimport FirstEventFooter from './components/firstEventFooter';\nimport PlatformHeaderButtonBar from './components/platformHeaderButtonBar';\n\ntype Props = {\n  integrationSlug: string;\n  organization: Organization;\n} & RouteComponentProps<{platform: string; projectId: string}, {}> &\n  AsyncComponent['props'];\n\ntype State = {\n  installed: boolean;\n  integrations: {providers: IntegrationProvider[]};\n  project: Project | null;\n} & AsyncComponent['state'];\n\nclass PlatformIntegrationSetup extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      installed: false,\n      integrations: {providers: []},\n      project: null,\n    };\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    window.scrollTo(0, 0);\n\n    const {platform} = this.props.params;\n\n    // redirect if platform is not known.\n    if (!platform || platform === 'other') {\n      this.redirectToNeutralDocs();\n    }\n  }\n\n  get provider() {\n    const {providers} = this.state.integrations;\n    return providers.length ? providers[0] : null;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, integrationSlug, params} = this.props;\n\n    if (!integrationSlug) {\n      return [];\n    }\n\n    return [\n      [\n        'integrations',\n        `/organizations/${organization.slug}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      ['project', `/projects/${organization.slug}/${params.projectId}/`],\n    ];\n  }\n\n  handleFullDocsClick = () => {\n    const {organization} = this.props;\n    trackAnalytics('growth.onboarding_view_full_docs', {organization});\n  };\n\n  redirectToNeutralDocs() {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    const url = `/organizations/${organization.slug}/projects/${projectId}/getting-started/`;\n\n    browserHistory.push(normalizeUrl(url));\n  }\n\n  handleAddIntegration = () => {\n    this.setState({installed: true});\n  };\n\n  trackSwitchToManual = () => {\n    const {organization, integrationSlug} = this.props;\n    trackIntegrationAnalytics('integrations.switch_manual_sdk_setup', {\n      integration_type: 'first_party',\n      integration: integrationSlug,\n      view: 'project_creation',\n      organization,\n    });\n  };\n\n  render() {\n    const {organization, params} = this.props;\n    const {installed, project} = this.state;\n    const {projectId, platform} = params;\n    const provider = this.provider;\n\n    const platformIntegration = platforms.find(p => p.id === platform);\n    if (!provider || !platformIntegration || !project) {\n      return null;\n    }\n    const gettingStartedLink = `/organizations/${organization.slug}/projects/${projectId}/getting-started/`;\n\n    // TODO: make dynamic when adding more integrations\n    const docsLink =\n      'https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/';\n\n    return (\n      <OuterWrapper>\n        <InnerWrapper>\n          <StyledTitle>\n            {t('Automatically instrument %s', platformIntegration.name)}\n          </StyledTitle>\n          <HeaderButtons>\n            <PlatformHeaderButtonBar\n              gettingStartedLink={gettingStartedLink}\n              docsLink={docsLink}\n            />\n          </HeaderButtons>\n          {!installed ? (\n            <Fragment>\n              <AddInstallationInstructions />\n              <StyledButtonBar gap={1}>\n                <AddIntegrationButton\n                  provider={provider}\n                  onAddIntegration={this.handleAddIntegration}\n                  organization={organization}\n                  priority=\"primary\"\n                  size=\"sm\"\n                  analyticsParams={{view: 'project_creation', already_installed: false}}\n                  modalParams={{projectId: project.id}}\n                  aria-label={t('Add integration')}\n                />\n                <Button\n                  size=\"sm\"\n                  to={{\n                    pathname: window.location.pathname,\n                    query: {manual: '1'},\n                  }}\n                  onClick={this.trackSwitchToManual}\n                >\n                  {t('Manual Setup')}\n                </Button>\n              </StyledButtonBar>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <PostInstallCodeSnippet provider={provider} />\n              <FirstEventFooter\n                project={project}\n                organization={organization}\n                docsLink={docsLink}\n                docsOnClick={this.handleFullDocsClick}\n              />\n            </Fragment>\n          )}\n        </InnerWrapper>\n      </OuterWrapper>\n    );\n  }\n}\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(3)};\n  width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: auto;\n    grid-row-gap: ${space(1)};\n    grid-auto-flow: row;\n  }\n`;\n\nconst InnerWrapper = styled('div')`\n  max-width: 850px;\n`;\n\nconst OuterWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst HeaderButtons = styled('div')`\n  width: min-content;\n  margin-bottom: ${space(3)};\n`;\n\nconst StyledTitle = styled('h2')`\n  margin: 0;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(PlatformIntegrationSetup);\n","import * as qs from 'query-string';\n\nimport {OnboardingContextProvider} from 'sentry/components/onboarding/onboardingContext';\nimport {platformToIntegrationMap} from 'sentry/utils/integrationUtil';\n\nimport {ProjectInstallPlatform} from './platform';\nimport PlatformIntegrationSetup from './platformIntegrationSetup';\n\ntype Props = React.ComponentProps<typeof ProjectInstallPlatform> &\n  Omit<React.ComponentProps<typeof PlatformIntegrationSetup>, 'integrationSlug'>;\n\nfunction PlatformOrIntegration(props: Props) {\n  const parsed = qs.parse(window.location.search);\n  const {platform} = props.params;\n  const integrationSlug = platform && platformToIntegrationMap[platform];\n  // check for manual override query param\n  // TODO(priscila): check this case\n  if (integrationSlug && parsed.manual !== '1') {\n    return <PlatformIntegrationSetup integrationSlug={integrationSlug} {...props} />;\n  }\n  return (\n    <OnboardingContextProvider>\n      <ProjectInstallPlatform {...props} />\n    </OnboardingContextProvider>\n  );\n}\n\nexport default PlatformOrIntegration;\n"],"names":["SetUpSdkDoc","HookOrDefault","hookName","SetUpGeneralSdkDoc","_ref","organization","projectSlug","platform","api","useApi","loading","setLoading","useState","error","setError","html","setHtml","fetchDocs","useCallback","async","reponse","loadDocs","orgSlug","slug","key","window","scrollTo","err","useEffect","_jsxs","children","_jsx","Alert","type","showIcon","tct","name","docLink","ExternalLink","href","link","undefined","LoadingIndicator","LoadingError","onRetry","Fragment","SentryDocumentTitle","title","t","DocumentationWrapper","dangerouslySetInnerHTML","__html","ProjectInstallPlatform","_ref2","location","params","route","router","useOrganization","isSelfHosted","ConfigStore","projects","initiallyLoaded","useProjects","slugs","projectId","orgId","loadingProjects","project","find","proj","heartbeatFooter","features","includes","currentPlatform","platformIntegration","platforms","p","id","redirectToNeutralDocs","push","normalizeUrl","NotFound","issueStreamLink","performanceOverviewLink","gettingStartedLink","showPerformancePrompt","performancePlatforms","isGettingStarted","indexOf","StyledPageHeader","ButtonBar","gap","Button","icon","IconChevron","direction","size","to","external","Feature","_ref3","hasFeature","StyledAlert","Footer","StyledButtonBar","priority","busy","pathname","query","hash","displayName","_styled","target","space","theme","breakpoints","small","FirstEventIndicator","props","EventWaiter","firstIssue","indicator","Indicator","firstEventButton","tooltipProps","disabled","onClick","trackAnalytics","Container","AnimatePresence","Success","Waiting","styles","StatusWrapper","motion","fontSizeMedium","AnimatedText","WaitingIndicator","ReceivedIndicator","defaultProps","initial","animate","exit","variants","opacity","y","transition","testableTransition","when","staggerChildren","indicatorAnimation","pulsingIndicatorStyles","IconCheckmark","green300","FirstEventFooter","docsLink","docsOnClick","eventType","CTAFooter","Actions","CTASecondary","sample","CreateSampleEventButton","source","skip","subText","PlatformHeaderButtonBar","PlatformIntegrationSetup","AsyncComponent","constructor","arguments","_defineProperty","this","setState","installed","integrationSlug","trackIntegrationAnalytics","integration_type","integration","view","getDefaultState","super","integrations","providers","componentDidMount","provider","state","length","getEndpoints","url","browserHistory","render","OuterWrapper","InnerWrapper","StyledTitle","HeaderButtons","PostInstallCodeSnippet","handleFullDocsClick","AddInstallationInstructions","AddIntegrationButton","onAddIntegration","handleAddIntegration","analyticsParams","already_installed","modalParams","manual","trackSwitchToManual","withOrganization","PlatformOrIntegration","parsed","qs","search","platformToIntegrationMap","OnboardingContextProvider"],"sourceRoot":""}