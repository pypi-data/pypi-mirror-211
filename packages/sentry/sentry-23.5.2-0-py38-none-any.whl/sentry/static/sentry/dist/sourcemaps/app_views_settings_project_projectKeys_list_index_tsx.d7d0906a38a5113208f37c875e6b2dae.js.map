{"version":3,"file":"chunks/app_views_settings_project_projectKeys_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/list/loaderScript.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {t(\n              'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n            )}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport FieldHelp from 'sentry/components/forms/fieldGroup/fieldHelp';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  projectKey: ProjectKey;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nexport function LoaderScript({projectKey, routes, params, location}: Props) {\n  const loaderLink = getDynamicText({\n    value: projectKey.dsn.cdn,\n    fixed: '__JS_SDK_LOADER_URL__',\n  });\n\n  const editUrl = recreateRoute(`${projectKey.id}/`, {routes, params, location});\n\n  return (\n    <Fragment>\n      <FieldGroup\n        label={t('Loader Script')}\n        help={tct(\n          'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                {t(' What does the script provide?')}\n              </ExternalLink>\n            ),\n          }\n        )}\n        inline={false}\n        flexibleControlStateSize\n      >\n        <TextCopyInput aria-label={t('Loader Script')}>\n          {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n        </TextCopyInput>\n\n        <HelpFooter>\n          {tct(\n            'You can [configureLink:configure] the Loader Script to enable/disable Performance, Replay, and more.',\n            {\n              configureLink: <Link to={editUrl} />,\n            }\n          )}\n        </HelpFooter>\n      </FieldGroup>\n    </Fragment>\n  );\n}\n\nconst HelpFooter = styled(FieldHelp)`\n  margin-top: ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport Confirm from 'sentry/components/confirm';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {LoaderScript} from 'sentry/views/settings/project/projectKeys/list/loaderScript';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  hasWriteAccess: boolean;\n  onRemove: (data: ProjectKey) => void;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  orgId: string;\n  project: Project;\n  projectId: string;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nfunction KeyRow({\n  data,\n  onRemove,\n  onToggle,\n  hasWriteAccess,\n  routes,\n  location,\n  params,\n  project,\n}: Props) {\n  const handleEnable = () => onToggle(true, data);\n  const handleDisable = () => onToggle(false, data);\n\n  const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n  const platform = project.platform || 'other';\n  const isBrowserJavaScript = platform === 'javascript';\n  const isJsPlatform = platform.startsWith('javascript');\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        <Title disabled={!data.isActive}>\n          <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n          {!data.isActive && (\n            <small>\n              {' \\u2014  '}\n              {t('Disabled')}\n            </small>\n          )}\n        </Title>\n        <Controls>\n          <Button to={editUrl} size=\"sm\">\n            {t('Configure')}\n          </Button>\n          <Confirm\n            disabled={!hasWriteAccess}\n            onConfirm={data.isActive ? handleDisable : handleEnable}\n            confirmText={data.isActive ? t('Disable Key') : t('Enable Key')}\n            message={\n              data.isActive\n                ? t('Are you sure you want to disable this key?')\n                : t('Are you sure you want to enable this key?')\n            }\n          >\n            <Button size=\"sm\">{data.isActive ? t('Disable') : t('Enable')}</Button>\n          </Confirm>\n          <Confirm\n            disabled={!hasWriteAccess}\n            priority=\"danger\"\n            onConfirm={() => onRemove(data)}\n            confirmText={t('Remove Key')}\n            message={t(\n              'Are you sure you want to remove this key? This action is irreversible.'\n            )}\n          >\n            <Button size=\"sm\" icon={<IconDelete />} aria-label={t('Delete')} />\n          </Confirm>\n        </Controls>\n      </PanelHeader>\n\n      <StyledClippedBox\n        clipHeight={300}\n        defaultClipped={!isJsPlatform}\n        btnText={t('Expand')}\n      >\n        <StyledPanelBody disabled={!data.isActive}>\n          <ProjectKeyCredentials\n            projectId={`${data.projectId}`}\n            data={data}\n            showMinidump={!isJsPlatform}\n            showUnreal={!isJsPlatform}\n            showSecurityEndpoint={!isJsPlatform}\n          />\n\n          {isBrowserJavaScript && (\n            <LoaderScript\n              projectKey={data}\n              routes={routes}\n              location={location}\n              params={params}\n            />\n          )}\n        </StyledPanelBody>\n      </StyledClippedBox>\n    </Panel>\n  );\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {IconAdd, IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['keyList', `/projects/${organization.slug}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'PUT',\n          data: {isActive},\n        }\n      );\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, project, routes, params} = this.props;\n    const {projectId} = params;\n    const hasAccess = hasEveryAccess(['project:write'], {organization, project});\n\n    return (\n      <Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            hasWriteAccess={hasAccess}\n            key={key.id}\n            orgId={organization.slug}\n            projectId={projectId}\n            project={this.props.project}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {organization, project} = this.props;\n    const isEmpty = !this.state.keyList.length;\n    const hasAccess = hasEveryAccess(['project:write'], {organization, project});\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            <Button\n              onClick={this.handleCreateKey}\n              size=\"sm\"\n              priority=\"primary\"\n              icon={<IconAdd size=\"xs\" isCircled />}\n              disabled={!hasAccess}\n            >\n              {t('Generate New Key')}\n            </Button>\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/configuration/options/\" />\n              ),\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        <PermissionAlert project={project} />\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput aria-label={t('DSN URL')}>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={tct('Use your security header endpoint for features like [link].', {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/security-policy-reporting/\">\n                {t('CSP and Expect-CT reports')}\n              </ExternalLink>\n            ),\n          })}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Security Header Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Minidump Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput aria-label={t('Unreal Engine 4 Endpoint URL')}>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","PermissionAlert","_ref","access","project","team","props","Access","_ref2","hasAccess","Alert","type","t","LoaderScript","projectKey","routes","params","location","loaderLink","getDynamicText","value","dsn","cdn","fixed","editUrl","recreateRoute","id","Fragment","_jsxs","FieldGroup","label","help","tct","link","ExternalLink","href","inline","flexibleControlStateSize","TextCopyInput","HelpFooter","configureLink","Link","to","_styled","FieldHelp","target","space","KeyRow","data","onRemove","onToggle","hasWriteAccess","platform","isBrowserJavaScript","isJsPlatform","startsWith","Panel","PanelHeader","hasButtons","Title","disabled","isActive","PanelHeaderLink","Controls","Button","size","Confirm","onConfirm","handleDisable","handleEnable","confirmText","message","priority","icon","IconDelete","StyledClippedBox","clipHeight","defaultClipped","btnText","StyledPanelBody","ProjectKeyCredentials","projectId","showMinidump","showUnreal","showSecurityEndpoint","ClippedBox","p","theme","subText","PanelBody","ProjectKeys","constructor","_defineProperty","async","oldKeyList","state","keyList","addLoadingMessage","setState","filter","key","organization","api","requestPromise","slug","method","addSuccessMessage","_err","addErrorMessage","map","routeTitleGen","getEndpoints","renderEmpty","EmptyMessage","IconFlag","description","renderResults","hasEveryAccess","orgId","handleToggleKey","handleRemoveKey","Pagination","pageLinks","keyListPageLinks","renderBody","isEmpty","SettingsPageHeader","action","onClick","handleCreateKey","IconAdd","isCircled","TextBlock","code","withOrganization","showDsn","showDsnPublic","showProjectId","showPublicKey","showSecretKey","showDeprecatedDsn","setShowDeprecatedDsn","useState","curr","public","StyledField","secret","security","minidump","unreal"],"sourceRoot":""}