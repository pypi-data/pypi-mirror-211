{"version":3,"file":"chunks/app_views_settings_projectDataForwarding_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectDataForwarding/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport {space} from 'sentry/styles/space';\nimport {Plugin} from 'sentry/types';\n\ntype Props = {\n  onEnablePlugin: (plugin: Plugin) => void;\n  plugins: Plugin[];\n  disabled?: boolean;\n};\n\nfunction InactivePlugins({disabled, plugins, onEnablePlugin}: Props) {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              disabled={disabled}\n              title={\n                disabled ? t('You do not have permission to set up an integration.') : ''\n              }\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled(Button)`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import {disablePlugin, enablePlugin} from 'sentry/actionCreators/plugins';\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport InactivePlugins from 'sentry/components/inactivePlugins';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport PluginConfig from 'sentry/components/pluginConfig';\nimport {t} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\n\ntype Props = {\n  organization: Organization;\n  pluginList: Plugin[];\n  project: Project;\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nfunction PluginList({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) {\n  const hasWriteAccess = hasEveryAccess(['project:write'], {organization, project});\n\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        disabled={!hasWriteAccess}\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n}\n\nexport default PluginList;\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {t(\n              'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n            )}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {hasEveryAccess} from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {Alert} from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport PluginList from 'sentry/components/pluginList';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Plugin, Project, TimeseriesValue} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype StatProps = {\n  params: {\n    orgId: string;\n    projectId: string;\n  };\n};\n\ntype StatState = AsyncComponent['state'] & {\n  stats: TimeseriesValue[];\n};\n\nclass DataForwardingStats extends AsyncComponent<StatProps, StatState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const options = {\n      query: {\n        since,\n        until,\n        resolution: '1d',\n        stat: 'forwarded',\n      },\n    };\n\n    return [['stats', `/projects/${orgId}/${projectId}/stats/`, options]];\n  }\n\n  renderBody() {\n    const {projectId} = this.props.params;\n    const {stats} = this.state;\n    const series: Series = {\n      seriesName: t('Forwarded'),\n      data: stats.map(([timestamp, value]) => ({name: timestamp * 1000, value})),\n    };\n    const forwardedAny = series.data.some(({value}) => value > 0);\n\n    return (\n      <Panel>\n        <SentryDocumentTitle title={t('Data Forwarding')} projectSlug={projectId} />\n        <PanelHeader>{t('Forwarded events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {forwardedAny ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing forwarded in the last 30 days.')}\n              description={t('Total events forwarded to third party integrations.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncComponent['state'] & {\n  plugins: Plugin[];\n};\n\nclass ProjectDataForwarding extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    return [['plugins', `/projects/${organization.slug}/${projectId}/plugins/`]];\n  }\n\n  get forwardingPlugins() {\n    return this.state.plugins.filter(\n      p => p.type === 'data-forwarding' && p.hasConfiguration\n    );\n  }\n\n  updatePlugin(plugin: Plugin, enabled: boolean) {\n    const plugins = this.state.plugins.map(p => ({\n      ...p,\n      enabled: p.id === plugin.id ? enabled : p.enabled,\n    }));\n\n    this.setState({plugins});\n  }\n\n  onEnablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, true);\n  onDisablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, false);\n\n  renderBody() {\n    const {organization, project} = this.props;\n    const plugins = this.forwardingPlugins;\n    const hasAccess = hasEveryAccess(['project:write'], {organization, project});\n    const params = {...this.props.params, orgId: organization.slug};\n\n    const pluginsPanel =\n      plugins.length > 0 ? (\n        <PluginList\n          organization={organization}\n          project={project}\n          pluginList={plugins}\n          onEnablePlugin={this.onEnablePlugin}\n          onDisablePlugin={this.onDisablePlugin}\n        />\n      ) : (\n        <Panel>\n          <EmptyMessage\n            title={t('There are no integrations available for data forwarding')}\n          />\n        </Panel>\n      );\n\n    return (\n      <div data-test-id=\"data-forwarding-settings\">\n        <Feature\n          features={['projects:data-forwarding']}\n          hookName=\"feature-disabled:data-forwarding\"\n        >\n          {({hasFeature, features}) => (\n            <Fragment>\n              <SettingsPageHeader title={t('Data Forwarding')} />\n              <TextBlock>\n                {tct(\n                  `Data Forwarding allows processed events to be sent to your\n                favorite business intelligence tools. The exact payload and\n                types of data depend on the integration you're using. Learn\n                more about this functionality in our [link:documentation].`,\n                  {\n                    link: (\n                      <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/data-forwarding/\" />\n                    ),\n                  }\n                )}\n              </TextBlock>\n              <PermissionAlert project={project} />\n\n              <Alert showIcon>\n                {tct(\n                  `Sentry forwards [em:all applicable error events] to the provider, in\n                some cases this may be a significant volume of data.`,\n                  {\n                    em: <strong />,\n                  }\n                )}\n              </Alert>\n\n              {!hasFeature && (\n                <FeatureDisabled\n                  alert\n                  featureName={t('Data Forwarding')}\n                  features={features}\n                />\n              )}\n\n              <DataForwardingStats params={params} />\n              {hasAccess && hasFeature && pluginsPanel}\n            </Fragment>\n          )}\n        </Feature>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectDataForwarding);\n"],"names":["InactivePlugins","_ref","disabled","plugins","onEnablePlugin","length","_jsxs","Panel","children","_jsx","PanelHeader","t","PanelBody","Plugins","map","plugin","IntegrationButton","title","onClick","className","id","Label","StyledPluginIcon","pluginId","TextOverflow","shortName","name","displayName","_styled","target","space","Button","p","theme","fontSizeSmall","borderRadius","styles","PluginIcon","PluginList","organization","project","pluginList","onDisablePlugin","hasWriteAccess","hasEveryAccess","handleDisablePlugin","disablePlugin","projectId","slug","orgId","filter","enabled","data","PluginConfig","isHidden","enablePlugin","PanelItem","PermissionAlert","access","team","props","Access","_ref2","hasAccess","Alert","type","DataForwardingStats","AsyncComponent","getEndpoints","this","params","until","Math","floor","Date","getTime","query","since","resolution","stat","renderBody","stats","state","series","seriesName","timestamp","value","forwardedAny","some","SentryDocumentTitle","projectSlug","withPadding","MiniBarChart","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","EmptyMessage","description","ProjectDataForwarding","constructor","arguments","_defineProperty","updatePlugin","forwardingPlugins","hasConfiguration","setState","pluginsPanel","Feature","features","hookName","_ref3","hasFeature","Fragment","SettingsPageHeader","TextBlock","tct","link","ExternalLink","href","showIcon","em","FeatureDisabled","alert","featureName","withOrganization"],"sourceRoot":""}