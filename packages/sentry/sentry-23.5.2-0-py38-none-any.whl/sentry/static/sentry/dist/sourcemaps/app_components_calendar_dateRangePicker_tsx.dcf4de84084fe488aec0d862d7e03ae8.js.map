{"version":3,"file":"chunks/app_components_calendar_dateRangePicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"sbAOA,MAwNA,GAxN8BA,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,aAAZD,CAAa,YAC9BE,EAAAA,EAAAA,GAAM,GAAE,sMAcGC,GAAKA,EAAEC,MAAMC,QAAM,oFAU9BF,GAAKA,EAAEC,MAAME,WAAS,+LAMtBH,GAAKA,EAAEC,MAAMG,OAAK,kEAQlBJ,GAAKA,EAAEC,MAAMI,SAAO,4CAIpBL,GAAKA,EAAEC,MAAMK,YAAU,qGASFN,GAAKA,EAAEC,MAAMC,QAAM,gDAI7BF,GAAKA,EAAEC,MAAMC,QAAM,0IAWzBF,GAAKA,EAAEC,MAAMC,QAAM,kCAInBF,GAAKA,EAAEC,MAAMM,OAAK,2YA8BJP,GAAKA,EAAEC,MAAMO,cAAY,+BACtBR,GAAKA,EAAEC,MAAMO,cAAY,gNAW5BR,GAAKA,EAAEC,MAAMO,cAAY,+BACtBR,GAAKA,EAAEC,MAAMO,cAAY,8EAO3BR,GAAKA,EAAEC,MAAMO,cAAY,gCACtBR,GAAKA,EAAEC,MAAMO,cAAY,+MAW5BR,GAAKA,EAAEC,MAAMO,cAAY,gCACtBR,GAAKA,EAAEC,MAAMO,cAAY,4QA2BvCT,EAAAA,EAAAA,GAAM,GAAE,6GAWjBC,GAAKA,EAAEC,MAAME,WAAS,kCAElBH,GAAKA,EAAEC,MAAMQ,eAAa,aAC5BV,EAAAA,EAAAA,GAAM,KAAK,KAAIA,EAAAA,EAAAA,GAAM,GAAE,uUA+BZC,GAAKA,EAAEC,MAAME,WAAS,kDAKvBH,GAAKA,EAAEC,MAAME,WAAS,c,qVC7M/C,MAAMO,EAAoB,UAM1B,SAASC,EAAeC,GAKC,IAJvBC,SAAUC,EAAgB,UAC1BC,EAAS,QACTC,KACGC,GACkBL,EACrB,MAAMC,GAAWK,EAAAA,EAAAA,cACdC,KAXL,SAA0BA,GACxB,YAA4CC,IAArCD,IAAcT,EACvB,EAUWW,CAAiBF,IAItBL,IAAmBK,EAAYT,GAAmB,GAEpD,CAACI,IAGGQ,GAAkBC,EAAAA,EAAAA,UAAQ,IACvB,CAAC,CAACR,YAAWC,UAASQ,IAAKd,KACjC,CAACM,EAASD,IAEb,OACEU,EAAAA,EAAAA,IAACC,EAAAA,EAAqB,CAAAC,UACpBF,EAAAA,EAAAA,IAACG,EAAAA,GAAS,IAAKX,EAAOJ,SAAUA,EAAUS,OAAQA,KAGxD,CA1BSX,EAAekB,YAAA,kBA4BxB,S","sources":["webpack:///./app/components/calendar/calendarStylesWrapper.tsx","webpack:///./app/components/calendar/dateRangePicker.tsx"],"sourcesContent":["import 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nimport styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\nconst CalendarStylesWrapper = styled('div')`\n  padding: ${space(2)};\n\n  .rdrCalendarWrapper:not(.rdrDateRangeWrapper) .rdrDayHovered .rdrDayNumber:after {\n    border: 0;\n  }\n\n  .rdrSelected,\n  .rdrInRange,\n  .rdrStartEdge,\n  .rdrEndEdge {\n    left: 0;\n    right: 0;\n    top: 3px;\n    bottom: 3px;\n    background-color: ${p => p.theme.active};\n  }\n\n  .rdrDayNumber {\n    top: 3px;\n    bottom: 3px;\n    font-weight: normal;\n  }\n\n  .rdrDayNumber span {\n    color: ${p => p.theme.textColor};\n  }\n\n  .rdrDay:not(.rdrDayPassive) .rdrStartEdge ~ .rdrDayNumber span,\n  .rdrDay:not(.rdrDayPassive) .rdrEndEdge ~ .rdrDayNumber span,\n  .rdrDay:not(.rdrDayPassive) .rdrInRange ~ .rdrDayNumber span {\n    color: ${p => p.theme.white};\n  }\n\n  .rdrDayDisabled {\n    background: none;\n  }\n\n  .rdrDayDisabled span {\n    color: ${p => p.theme.subText};\n  }\n\n  .rdrDayToday .rdrDayNumber span {\n    color: ${p => p.theme.activeText};\n\n    &:after {\n      display: none;\n    }\n  }\n\n  .rdrDayToday .rdrDayNumber {\n    border-radius: 2rem;\n    box-shadow: inset 0 0 0 2px ${p => p.theme.active};\n  }\n\n  .rdrDayNumber span:after {\n    background-color: ${p => p.theme.active};\n    font-variant-numeric: tabular-nums;\n  }\n\n  .rdrDefinedRangesWrapper,\n  .rdrDateDisplayWrapper,\n  .rdrWeekDays {\n    display: none;\n  }\n\n  .rdrInRange {\n    background: ${p => p.theme.active};\n  }\n\n  .rdrDayInPreview {\n    background: ${p => p.theme.hover};\n  }\n\n  .rdrMonth {\n    width: 300px;\n    font-size: 1.2em;\n    padding: 0;\n  }\n\n  .rdrStartEdge {\n    border-top-left-radius: 1.14em;\n    border-bottom-left-radius: 1.14em;\n  }\n\n  .rdrEndEdge {\n    border-top-right-radius: 1.14em;\n    border-bottom-right-radius: 1.14em;\n  }\n\n  .rdrDayStartPreview,\n  .rdrDayEndPreview,\n  .rdrDayInPreview {\n    border: 0;\n    background: rgba(200, 200, 200, 0.3);\n    z-index: -1;\n  }\n\n  .rdrDayStartOfMonth {\n    .rdrInRange,\n    .rdrDayInPreview {\n      border-top-left-radius: ${p => p.theme.borderRadius};\n      border-bottom-left-radius: ${p => p.theme.borderRadius};\n    }\n  }\n\n  .rdrDayStartOfWeek {\n    .rdrInRange,\n    .rdrEndEdge,\n    .rdrDayInPreview,\n    /* Adjust radii on last hovered day, unless it's also the start of a selected range */\n    .rdrDayEndPreview:not(.rdrDayStartPreview):first-child,\n    :not(.rdrStartEdge) ~ .rdrDayEndPreview:not(.rdrDayStartPreview) {\n      border-top-left-radius: ${p => p.theme.borderRadius};\n      border-bottom-left-radius: ${p => p.theme.borderRadius};\n    }\n  }\n\n  .rdrDayEndOfMonth {\n    .rdrInRange,\n    .rdrDayInPreview {\n      border-top-right-radius: ${p => p.theme.borderRadius};\n      border-bottom-right-radius: ${p => p.theme.borderRadius};\n    }\n  }\n\n  .rdrDayEndOfWeek {\n    .rdrInRange,\n    .rdrStartEdge,\n    .rdrDayInPreview,\n    /* Adjust radii on first hovered day, unless it's also the end of a selected range */\n    .rdrDayStartPreview:not(.rdrDayEndPreview):first-child,\n    :not(.rdrEndEdge) ~ .rdrDayStartPreview:not(.rdrDayEndPreview) {\n      border-top-right-radius: ${p => p.theme.borderRadius};\n      border-bottom-right-radius: ${p => p.theme.borderRadius};\n    }\n  }\n\n  .rdrDayStartOfMonth,\n  .rdrDayStartOfWeek {\n    .rdrInRange,\n    .rdrEndEdge {\n      left: 0;\n    }\n  }\n\n  .rdrDayEndOfMonth,\n  .rdrDayEndOfWeek {\n    .rdrInRange,\n    .rdrStartEdge {\n      right: 0;\n    }\n  }\n\n  .rdrStartEdge.rdrEndEdge {\n    border-radius: 1.14em;\n  }\n\n  .rdrMonthAndYearWrapper {\n    height: 32px;\n    align-items: stretch;\n    padding-bottom: ${space(1)};\n    padding-top: 0;\n  }\n\n  .rdrDay {\n    height: 2.5em;\n  }\n\n  .rdrMonthPicker select,\n  .rdrYearPicker select {\n    background: none;\n    color: ${p => p.theme.textColor};\n    font-weight: normal;\n    font-size: ${p => p.theme.fontSizeLarge};\n    padding: ${space(0.25)} ${space(1)};\n  }\n\n  .rdrMonthsVertical {\n    align-items: center;\n  }\n\n  .rdrCalendarWrapper {\n    flex: 1;\n    background: none;\n  }\n\n  .rdrNextPrevButton {\n    width: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: auto;\n    background-color: transparent;\n    border: none;\n  }\n\n  .rdrPprevButton {\n    margin-left: 0;\n  }\n\n  .rdrNextButton {\n    margin-right: 0;\n  }\n\n  .rdrPprevButton i {\n    border-right-color: ${p => p.theme.textColor};\n    margin: 0;\n  }\n\n  .rdrNextButton i {\n    border-left-color: ${p => p.theme.textColor};\n    margin: 0;\n  }\n`;\n\nexport default CalendarStylesWrapper;\n","import {useCallback, useMemo} from 'react';\nimport {DateRange, DateRangeProps, Range, RangeKeyDict} from 'react-date-range';\n\nimport CalendarStylesWrapper from './calendarStylesWrapper';\n\nexport type DateRangePickerProps = Omit<DateRangeProps, 'ranges' | 'onChange'> & {\n  onChange: (range: Range) => void;\n  endDate?: Date;\n  startDate?: Date;\n};\n\ntype RangeSelection = {primary: Range};\n\nconst PRIMARY_RANGE_KEY = 'primary';\n\nfunction isRangeSelection(rangesByKey: RangeKeyDict): rangesByKey is RangeSelection {\n  return rangesByKey?.[PRIMARY_RANGE_KEY] !== undefined;\n}\n\nfunction DateRangePicker({\n  onChange: incomingOnChange,\n  startDate,\n  endDate,\n  ...props\n}: DateRangePickerProps) {\n  const onChange = useCallback(\n    (rangesByKey: RangeKeyDict) => {\n      if (!isRangeSelection(rangesByKey)) {\n        return;\n      }\n\n      incomingOnChange?.(rangesByKey[PRIMARY_RANGE_KEY]);\n    },\n    [incomingOnChange]\n  );\n\n  const ranges: Range[] = useMemo(() => {\n    return [{startDate, endDate, key: PRIMARY_RANGE_KEY}];\n  }, [endDate, startDate]);\n\n  return (\n    <CalendarStylesWrapper>\n      <DateRange {...props} onChange={onChange} ranges={ranges} />\n    </CalendarStylesWrapper>\n  );\n}\n\nexport default DateRangePicker;\n"],"names":["_styled","target","space","p","theme","active","textColor","white","subText","activeText","hover","borderRadius","fontSizeLarge","PRIMARY_RANGE_KEY","DateRangePicker","_ref","onChange","incomingOnChange","startDate","endDate","props","useCallback","rangesByKey","undefined","isRangeSelection","ranges","useMemo","key","_jsx","CalendarStylesWrapper","children","DateRange","displayName"],"sourceRoot":""}