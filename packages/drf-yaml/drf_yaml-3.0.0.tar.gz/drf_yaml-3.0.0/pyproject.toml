[tool.poetry]
name = "drf-yaml"
version = "3.0.0"
description = "YAML support for Django REST Framework"
authors = [
    "Jos√© Padilla <hello@jpadilla.com>",
    "Xavier Francisco <xavier.n.francisco@gmail.com>",
]
license = "BSD"
readme = "README.md"
homepage = "https://github.com/Qu4tro/django-rest-framework-yaml"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
]
packages = [{include = "drf_yaml"}]


[tool.poetry.dependencies]
python = "^3.8"
PyYAML = ">=5.1"

[tool.poetry.group.dev.dependencies]
django = "^4.2"
djangorestframework = "^3.14.0"
tox = "^4.5.1"
pre-commit = "^3.2.2"
mypy = "^1.2.0"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.7"
djangorestframework-stubs = "^3.14.0"
django-stubs = "^4.2.0"
types-pyyaml = "^6.0.12.9"
toml = "^0.10.2"
bpython = "^0.24"
types-toml = "^0.10.8.6"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.8"
mike = "^1.1.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.mypy]
strict = true

[tool.ruff]
select = [
    "A" , "B", "C", "E", "D", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG",
    "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY",
    "PD", "PGH", "PIE", "PL", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH",
    "TID", "TRY", "UP", "YTT",
]
ignore = [
    "UP006", "UP007", "UP035",
    "ANN101", "ANN401",
    "D203", "D212",
]

[tool.ruff.flake8-builtins]
builtins-ignorelist = ['format']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = [
    "test_*.py",
    "_test_*.py",
]
addopts = "--verbose -rf -rE --durations=8"

[tool.coverage.run]
source = ["."]
branch = true
omit = []

[tool.coverage.report]
skip_covered = true
skip_empty = true
exclude_lines = [
  "# pragma: no cover",
  "NotImplementedError",
  "if __name__ == \"__main__\"",
]
