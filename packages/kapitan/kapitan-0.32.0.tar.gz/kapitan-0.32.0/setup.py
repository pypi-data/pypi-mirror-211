# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['kapitan',
 'kapitan.dependency_manager',
 'kapitan.inputs',
 'kapitan.inputs.templates.components.other_component',
 'kapitan.reclass',
 'kapitan.reclass.doc.source',
 'kapitan.reclass.reclass',
 'kapitan.reclass.reclass.adapters',
 'kapitan.reclass.reclass.datatypes',
 'kapitan.reclass.reclass.datatypes.tests',
 'kapitan.reclass.reclass.output',
 'kapitan.reclass.reclass.storage',
 'kapitan.reclass.reclass.storage.mixed',
 'kapitan.reclass.reclass.storage.tests',
 'kapitan.reclass.reclass.storage.yaml_fs',
 'kapitan.reclass.reclass.storage.yaml_git',
 'kapitan.reclass.reclass.tests',
 'kapitan.reclass.reclass.utils',
 'kapitan.reclass.reclass.utils.tests',
 'kapitan.reclass.reclass.values',
 'kapitan.reclass.reclass.values.tests',
 'kapitan.refs',
 'kapitan.refs.secrets',
 'kapitan.remoteinventory',
 'kapitan.validator',
 'reclass',
 'reclass.doc.source',
 'reclass.reclass',
 'reclass.reclass.adapters',
 'reclass.reclass.datatypes',
 'reclass.reclass.datatypes.tests',
 'reclass.reclass.output',
 'reclass.reclass.storage',
 'reclass.reclass.storage.mixed',
 'reclass.reclass.storage.tests',
 'reclass.reclass.storage.yaml_fs',
 'reclass.reclass.storage.yaml_git',
 'reclass.reclass.tests',
 'reclass.reclass.utils',
 'reclass.reclass.utils.tests',
 'reclass.reclass.values',
 'reclass.reclass.values.tests']

package_data = \
{'': ['*'],
 'kapitan': ['lib/*'],
 'kapitan.inputs': ['templates/components/my_component/*',
                    'templates/inventory/classes/*',
                    'templates/inventory/targets/*',
                    'templates/templates/docs/*',
                    'templates/templates/scripts/*'],
 'kapitan.reclass': ['doc/*',
                     'examples/ansible/*',
                     'examples/classes/*',
                     'examples/classes/debian/*',
                     'examples/classes/debian/release/*',
                     'examples/classes/debian/suite/*',
                     'examples/classes/mail/*',
                     'examples/nodes/munich/*',
                     'examples/nodes/zurich/*',
                     'examples/salt/*',
                     'releasenotes/*',
                     'releasenotes/notes/*',
                     'test/model/default/*',
                     'test/model/default/classes/*',
                     'test/model/default/classes/lab/env/*',
                     'test/model/default/nodes/*',
                     'test/model/extensions/*',
                     'test/model/extensions/classes/*',
                     'test/model/extensions/classes/lab/env/*',
                     'test/model/extensions/classes/relative/*',
                     'test/model/extensions/classes/relative/nested/*',
                     'test/model/extensions/classes/relative/nested/deep/*',
                     'test/model/extensions/classes/relative/nested/dive/*',
                     'test/model/extensions/nodes/*'],
 'kapitan.reclass.reclass.tests': ['data/01/classes/*',
                                   'data/01/nodes/*',
                                   'data/02/classes/*',
                                   'data/02/classes/one/*',
                                   'data/02/classes/two/*',
                                   'data/02/nodes/*',
                                   'data/03/classes/*',
                                   'data/03/nodes/alpha/*',
                                   'data/03/nodes/beta/*',
                                   'data/04/classes/*',
                                   'data/04/nodes/alpha/*',
                                   'data/05/classes/components/*',
                                   'data/05/classes/components/cluster-autoscaler/*',
                                   'data/05/classes/components/core-dns/*',
                                   'data/05/classes/versions/*',
                                   'data/05/nodes/*',
                                   'data/06/classes/applications/*',
                                   'data/06/classes/environments/*',
                                   'data/06/nodes/*'],
 'reclass': ['doc/*',
             'examples/ansible/*',
             'examples/classes/*',
             'examples/classes/debian/*',
             'examples/classes/debian/release/*',
             'examples/classes/debian/suite/*',
             'examples/classes/mail/*',
             'examples/nodes/munich/*',
             'examples/nodes/zurich/*',
             'examples/salt/*',
             'releasenotes/*',
             'releasenotes/notes/*',
             'test/model/default/*',
             'test/model/default/classes/*',
             'test/model/default/classes/lab/env/*',
             'test/model/default/nodes/*',
             'test/model/extensions/*',
             'test/model/extensions/classes/*',
             'test/model/extensions/classes/lab/env/*',
             'test/model/extensions/classes/relative/*',
             'test/model/extensions/classes/relative/nested/*',
             'test/model/extensions/classes/relative/nested/deep/*',
             'test/model/extensions/classes/relative/nested/dive/*',
             'test/model/extensions/nodes/*'],
 'reclass.reclass.tests': ['data/01/classes/*',
                           'data/01/nodes/*',
                           'data/02/classes/*',
                           'data/02/classes/one/*',
                           'data/02/classes/two/*',
                           'data/02/nodes/*',
                           'data/03/classes/*',
                           'data/03/nodes/alpha/*',
                           'data/03/nodes/beta/*',
                           'data/04/classes/*',
                           'data/04/nodes/alpha/*',
                           'data/05/classes/components/*',
                           'data/05/classes/components/cluster-autoscaler/*',
                           'data/05/classes/components/core-dns/*',
                           'data/05/classes/versions/*',
                           'data/05/nodes/*',
                           'data/06/classes/applications/*',
                           'data/06/classes/environments/*',
                           'data/06/nodes/*']}

install_requires = \
['addict>=2.4.0,<3.0.0',
 'azure-identity>=1.12.0,<2.0.0',
 'azure-keyvault-keys>=4.7.0,<5.0.0',
 'boto3>=1.18.17,<2.0.0',
 'certifi',
 'cryptography>=3.4.7,<40.0.0',
 'gitdb>=4.0.10,<5.0.0',
 'gitpython>=3.1.30,<4.0.0',
 'google-api-python-client>=2.15.0,<3.0.0',
 'hvac>=0.11.0,<0.12.0',
 'jinja2>=3.0.1,<4.0.0',
 'jsonnet>=0.18.0,<0.19.0',
 'jsonschema>=4.17.3,<5.0.0',
 'kadet>=0.2.2,<0.3.0',
 'packaging>=23.0,<24.0',
 'python-gnupg>=0.4.7,<0.5.0',
 'python-magic>=0.4.27,<0.5.0',
 'pyyaml>=6.0,<7.0',
 'requests>=2.28.2,<3.0.0',
 'six>=1.16.0,<2.0.0',
 'toml>=0.10.2,<0.11.0',
 'typing-extensions>=4.0.0,<5.0.0',
 'yamllint>=1.29.0,<2.0.0']

extras_require = \
{'gojsonnet': ['gojsonnet>=0.17.0,<0.18.0'], 'test': ['docker>=5.0.0,<6.0.0']}

entry_points = \
{'console_scripts': ['kapitan = kapitan.cli:main']}

setup_kwargs = {
    'name': 'kapitan',
    'version': '0.32.0',
    'description': 'Generic templated configuration management for Kubernetes, Terraform and other things',
    'long_description': '# Kapitan: advanced configuration management tool\n\n![Unit Tests](https://github.com/kapicorp/kapitan/actions/workflows/test.yml/badge.svg)\n![Python Version](https://img.shields.io/pypi/pyversions/kapitan)\n![Downloads](https://img.shields.io/pypi/dm/kapitan)\n![Docker Pulls](https://img.shields.io/docker/pulls/kapicorp/kapitan)\n[![Docker](https://github.com/kapicorp/kapitan/workflows/Docker%20Build%20and%20Push/badge.svg)](https://github.com/kapicorp/kapitan/actions?query=workflow%3A%22Docker+Build+and+Push%22)\n[![Releases](https://img.shields.io/github/release/kapicorp/kapitan.svg)](https://github.com/kapicorp/kapitan/releases)\n[![Docker Image Size](https://img.shields.io/docker/image-size/kapicorp/kapitan/latest.svg)](https://hub.docker.com/r/kapicorp/kapitan)\n\n<img src="docs/images/kapitan_logo.png" width="25">\n\n\n**`Kapitan`** aims to be your *one-stop tool* to help you manage the ever growing complexity of your configurations.\n\nJoin the community [`#kapitan`](https://kubernetes.slack.com/archives/C981W2HD3)\n\n## [**Official site**](https://kapitan.dev) <https://kapitan.dev>\n\n\n## [**Quick Start**](https://kapitan.dev/kapitan_overview/#quickstart)\n\n## Install Kapitan\n\n### Docker (recommended)\n\n```shell\ndocker run -t --rm -v $(pwd):/src:delegated kapicorp/kapitan -h\n```\n\nOn Linux you can add `-u $(id -u)` to `docker run` to preserve file permissions.\n\n### Pip\n\nKapitan needs Python 3.7.\n\n#### Install Python 3.7\n\n* Linux: `sudo apt-get update && sudo apt-get install -y python3.7-dev python3-pip python3-yaml git`\n* Mac: `brew install python3 libyaml git libmagic`\n\n#### Install Kapitan\n\nUser (`$HOME/.local/lib/python3.7/bin` on Linux or `$HOME/Library/Python/3.7/bin` on macOS):\n\n```shell\npip3 install --user --upgrade kapitan\n```\n\nSystem-wide (not recommended):\n\n```shell\nsudo pip3 install --upgrade kapitan\n```\n\n## Build Kapitan\n\n### Docker\n\nTo build a docker image for the architecture of your machine, run `docker build . -t you-kapitan-image`, and to build for a specific platform, add `--platform linux/arm64`.\n\nTo build a multi-platform image (as the CI does), follow [the docker multi-platform documentation](https://docs.docker.com/build/building/multi-platform/).\n\n## Related projects\n\n* [Tesoro](https://github.com/kapicorp/tesoro) - Kubernetes Admission Controller for Kapitan Secrets\n* [Kapitan Reference](https://github.com/kapicorp/kapitan-reference) - our reference repository to get started with Kapitan\n',
    'author': 'Ricardo Amaro',
    'author_email': 'ramaro@kapicorp.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/kapicorp/kapitan',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
