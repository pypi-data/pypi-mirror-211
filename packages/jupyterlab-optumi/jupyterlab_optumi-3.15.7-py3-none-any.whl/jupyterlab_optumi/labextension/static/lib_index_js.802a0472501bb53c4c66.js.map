{"version":3,"file":"lib_index_js.802a0472501bb53c4c66.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACoC;AACpC,iEAAe,CAAC,+CAAY,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP9B;AACA;AACA;AACA;AACA;AACA;AAC+B;AACC;AACqC;AACb;AACE;AACQ;AACV;AACd;AACD;AACzC;AACO,oBAAoB,oDAAK;AAChC;AACA,iEAAe;AACf;AACA;AACA,eAAe,8DAAS,EAAE,oEAAe,EAAE,kEAAgB,EAAE,+DAAa,EAAE,oEAAgB;AAC5F;AACA;AACA,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAU;AAClB,QAAQ,mDAAe;AACvB,QAAQ,uDAAmB;AAC3B,QAAQ,qDAAiB;AACzB,QAAQ,kDAAc;AACtB,qFAAqF,uDAAmB;AACxG;AACA,yBAAyB,+EAA6B;AACtD;AACA,QAAQ,8EAA4B,QAAQ;AAC5C;AACA;AACA,0BAA0B,gFAA8B;AACxD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAc;AAC1B,YAAY,mDAAe;AAC3B,YAAY,sDAAkB;AAC9B,SAAS;AACT,iBAAiB,oEAAkB,CAAC,gDAAmB,CAAC,mDAAe;AACvE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,aAAa;AACb","sources":["webpack://jupyterlab_optumi/./lib/index.js","webpack://jupyterlab_optumi/./lib/widget.js"],"sourcesContent":["/*\n **  Copyright (C) Optumi Inc - All rights reserved.\n **\n **  You may only use this code under license with Optumi Inc and any distribution or modification is strictly prohibited.\n **  To receive a copy of the licensing terms please write to contact@optumi.com or visit us at http://www.optumi.com.\n **/\nimport optumiPlugin from './widget';\nexport default [optumiPlugin];\n","/*\n **  Copyright (C) Optumi Inc - All rights reserved.\n **\n **  You may only use this code under license with Optumi Inc and any distribution or modification is strictly prohibited.\n **  To receive a copy of the licensing terms please write to contact@optumi.com or visit us at http://www.optumi.com.\n **/\nimport * as React from 'react';\nimport { Global } from 'common';\nimport { ILabShell, ILayoutRestorer } from '@jupyterlab/application';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { ReactWidget, IThemeManager } from '@jupyterlab/apputils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { Token } from '@lumino/coreutils';\nimport { OptumiLeftPanel } from 'common';\n// TODO:JJ Does this really need to be exported?\nexport const IOptumi = new Token('optumi:IOptumi');\nconst id = 'optumi';\nexport default {\n    activate,\n    id,\n    requires: [ILabShell, ILayoutRestorer, INotebookTracker, IThemeManager, IDocumentManager],\n    provides: IOptumi,\n    autoStart: true,\n};\nasync function activate(lab, labShell, restorer, tracker, manager, docManager) {\n    let widget;\n    async function loadPanel() {\n        // add widget\n        if (!widget.isAttached) {\n            labShell.add(widget, 'left', { rank: 1000 });\n        }\n    }\n    // Creates the left side bar widget once the app has fully started\n    lab.started.then(() => {\n        document.documentElement.style.setProperty('--jp-sidebar-min-width', '340px');\n        // Set some well known globals\n        Global.lab = lab;\n        Global.labShell = labShell;\n        Global.themeManager = manager;\n        Global.docManager = docManager;\n        Global.tracker = tracker;\n        docManager.services.contents.getDownloadUrl('Agreement.html').then((url) => (Global.agreementURL = url));\n        // Wait until we have a version to set metadata related globals\n        const settings = ServerConnection.makeSettings();\n        const url = settings.baseUrl + 'optumi/version';\n        ServerConnection.makeRequest(url, {}, settings)\n            .then((response) => {\n            if (response.status !== 200)\n                throw new ServerConnection.ResponseError(response);\n            return response.json();\n        })\n            .then((data) => {\n            // Get the version from the server\n            // We do not want to start the extension until we know the version, it might mess with metadata\n            const version = data.version;\n            const userHome = data.userHome;\n            const jupyterHome = data.jupyterHome;\n            console.log('JupyterLab extension jupyterlab-optumi version ' + version + ' is activated!');\n            Global.version = version;\n            Global.userHome = userHome;\n            Global.jupyterHome = jupyterHome;\n        });\n        widget = ReactWidget.create(React.createElement(OptumiLeftPanel, null));\n        widget.id = 'optumi/Optumi';\n        widget.title.iconClass = 'jp-o-logo jp-SideBar-tabIcon';\n        widget.title.caption = 'Optumi';\n        restorer.add(widget, widget.id);\n    });\n    // Initialize once the application shell has been restored\n    lab.restored.then(() => {\n        loadPanel();\n    });\n    return { widget };\n}\n"],"names":[],"sourceRoot":""}