{"version":3,"file":"static/js/110.1278d03f.chunk.js","mappings":"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","sources":["../../core/src/app/browser.tsx","../../core/src/workspace/CodeLocationMenu.tsx","../../core/src/workspace/RepositoryCountTags.tsx","../../core/src/workspace/CodeLocationRowSet.tsx","../../core/src/workspace/RepositoryLocationsList.tsx","../../core/src/instance/CodeLocationsPage.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../core/src/workspace/ReloadAllButton.tsx","../../ui/src/components/NonIdealState.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A hook that provides a mechanism for copying a string, triggered by user\n * behavior. If the Clipboard API is available, use it directly.\n *\n * The Clipboard can be undefined in an insecure context\n * (https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API), so we\n * also provide a fallback that uses an offscreen input and `execCommand` to\n * copy the contents. This is less ideal because it steals focus and is a DOM\n * hack, but it should still be effective enough for our needs.\n */\nexport const useCopyToClipboard = () => {\n  const clipboardAPI = navigator.clipboard;\n  const node = React.useRef<HTMLInputElement | null>(null);\n\n  React.useEffect(() => {\n    if (!clipboardAPI) {\n      node.current = document.createElement('input');\n      node.current.style.position = 'fixed';\n      node.current.style.top = '-10000px';\n      document.body.appendChild(node.current);\n    }\n\n    return () => {\n      node.current && document.body.removeChild(node.current);\n    };\n  }, [clipboardAPI]);\n\n  return React.useCallback(\n    (text: string) => {\n      if (clipboardAPI) {\n        clipboardAPI.writeText(text);\n      } else if (node.current) {\n        node.current.value = text;\n        node.current.select();\n        document.execCommand('copy');\n      }\n    },\n    [clipboardAPI],\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledReadOnlyCodeMirror,\n  Table,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu: React.FC<{locationNode: WorkspaceRepositoryLocationNode}> = ({\n  locationNode,\n}) => {\n  const [configIsOpen, setConfigIsOpen] = React.useState(false);\n  const [libsIsOpen, setLibsIsOpen] = React.useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}> = ({isOpen, setIsOpen, metadata}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}> = ({isOpen, setIsOpen, libraries}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Libray</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig: React.FC<{\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}> = ({displayMetadata}) => {\n  const yamlString = React.useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledReadOnlyCodeMirror\n      value={yamlString}\n      options={{lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\n\nexport const RepositoryCountTags: React.FC<{\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}> = ({repo, repoAddress}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet: React.FC<Props> = ({locationNode}) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.Gray500}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName: React.FC<{metadata: WorkspaceDisplayMetadataFragment[]}> = ({metadata}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = React.useCallback(async () => {\n    copy(value);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.Gray700};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    color: ${Colors.Gray700};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile: React.FC<{metadata: WorkspaceDisplayMetadataFragment[]}> = ({\n  metadata,\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.Gray700, fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nconst LocationStatus: React.FC<{\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}> = (props) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  const reloadFn = React.useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nconst ReloadButton: React.FC<{location: string}> = ({location}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, NonIdealState, Spinner, Table} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {CodeLocationRowSet} from './CodeLocationRowSet';\nimport {WorkspaceContext} from './WorkspaceContext';\n\nexport const RepositoryLocationsList = () => {\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  if (loading && !locationEntries.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading...</div>\n      </Box>\n    );\n  }\n\n  if (!locationEntries.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Status</th>\n          <th>Updated</th>\n          <th>Definitions</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {locationEntries.map((location) => (\n          <CodeLocationRowSet key={location.name} locationNode={location} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\n\nexport const CodeLocationsPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  // Consider each loaded repository to be a \"code location\".\n  const entryCount = React.useMemo(() => {\n    let count = 0;\n    locationEntries.forEach((entry) => {\n      if (!entry.locationOrLoadError || entry.locationOrLoadError?.__typename === 'PythonError') {\n        count += 1;\n      } else {\n        count += entry.locationOrLoadError.repositories.length;\n      }\n    });\n    return count;\n  }, [locationEntries]);\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        <ReloadAllButton />\n      </Box>\n      <RepositoryLocationsList />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon?: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : icon ? (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      ) : null}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n          shrink: 1,\n          grow: 1,\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["useCopyToClipboard","clipboardAPI","navigator","clipboard","node","React","current","document","createElement","style","position","top","body","appendChild","removeChild","text","writeText","value","select","execCommand","CodeLocationMenu","_ref","_locationNode$locatio","locationNode","_React$useState","_React$useState2","_slicedToArray","configIsOpen","setConfigIsOpen","_React$useState3","_React$useState4","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","locationOrLoadError","__typename","dagsterLibraryVersions","_jsx","MenuItem","icon","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","_jsxs","_Fragment","children","Popover","content","Menu","Button","Icon","name","CodeLocationConfigDialog","metadata","displayMetadata","_ref2","Dialog","title","onClose","width","CodeLocationConfig","DialogFooter","topBorder","intent","_ref3","Table","map","library","version","_ref4","yamlString","kvPairs","reduce","accum","item","_objectSpread","_defineProperty","key","yaml","StyledReadOnlyCodeMirror","options","lineNumbers","mode","theme","RepositoryCountTags","repo","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","filter","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Box","flex","direction","gap","alignItems","Tooltip","concat","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","styled","Link","withConfig","displayName","componentId","CodeLocationRowSet","maxWidth","color","Colors","MiddleTruncate","LocationStatus","location","locationOrError","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","JoinedButtons","ReloadButton","repositories","_toConsumableArray","sort","a","b","localeCompare","repository","buildRepoAddress","allMetadata","fontWeight","repoAddressAsHumanString","ImageName","ModuleOrPackageOrFile","copy","imageKV","find","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","showSharedToaster","message","stop","ImageNameBox","display","_ref5","_ref6","fontSize","props","_locationOrError$loca","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","_useRepositoryLocatio","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","_ref7","ReloadRepositoryLocationButton","ChildComponent","_ref8","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","RepositoryLocationsList","_React$useContext","WorkspaceContext","locationEntries","padding","horizontal","Spinner","purpose","vertical","NonIdealState","description","CodeLocationsPage","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","_React$useContext2","entryCount","count","forEach","entry","_entry$locationOrLoad","PageHeader","Heading","tabs","InstanceTabs","tab","justifyContent","height","Subheading","id","ReloadAllButton","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","modifiers","offset","enabled","WorkspaceStatus","placeholder","codeLocations","type","fillColor","refreshState","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","bottom","QueryRefreshCountdown","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","_templateObject","_taggedTemplateLiteral","rest","_objectWithoutProperties","_excluded","containerProps","getTabA11yProps","getTabContent","titleText","undefined","tabCSS","_ref$label","label","_useUnscopedPermissio","useUnscopedPermissions","canReloadWorkspace","permissions","disabledReasons","reloadFnForWorkspace","errorLocationId","RepositoryLocationErrorDialog","canEscapeKeyClose","canOutsideClickClose","DialogBody","PythonErrorInfo","action","shrinkable","singleContentElement","Boolean","background","margin","borderRadius","size","shrink","grow"],"sourceRoot":""}