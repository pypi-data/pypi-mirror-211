[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "liquid-jsonpath"
dynamic = ["version"]
description = 'JSONPath selectors for Python Liquid.'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [{ name = "James Prior", email = "jamesgr.prior@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = ["python-liquid>=1.9.2", "python-jsonpath>=0.7.1"]

[project.urls]
Documentation = "https://jg-rp.github.io/liquid/jsonpath/introduction"
Issues = "https://github.com/jg-rp/liquid-jsonpath/issues"
Source = "https://github.com/jg-rp/liquid-jsonpath"

[tool.hatch.version]
path = "liquid_jsonpath/__about__.py"

[tool.hatch.build.targets.sdist]
packages = ["liquid_jsonpath"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.build.targets.wheel]
packages = ["liquid_jsonpath"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.envs.default]
dependencies = [
  "black",
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-cov",
  "mypy",
  "twine",
  "ruff",
  "types-python-dateutil",
]


[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
cov = "pytest --cov-report=term-missing --cov-fail-under=98 --cov-config=pyproject.toml --cov=liquid_jsonpath --cov=tests {args}"
cov-html = "pytest --cov-report=html --cov-config=pyproject.toml --cov=liquid_jsonpath --cov=tests {args}"
lint = "ruff check ."
typing = "mypy"

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.black]
target-version = ["py37"]
line-length = 88

[tool.ruff]
target-version = "py37"
line-length = 88
select = [
  "A",
  "ARG",
  "B",
  "BLE",
  "C90",
  "D",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "SIM",
  "T10",
  "T20",
  "TID",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  # Init docstrings go in the class docstring
  "D107",
]

unfixable = [
  # Don't touch unused imports
  "F401",
]

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.isort]
force-single-line = true
known-first-party = ["liquid_jsonpath"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"liquid_jsonpath/__about__.py" = ["D100"]
"liquid_jsonpath/__init__.py" = ["D104"]
"liquid_jsonpath/filters/__init__.py" = ["D104"]
"liquid_jsonpath/tags/__init__.py" = ["D104"]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "D100", "D101", "D104", "D103"]


[tool.ruff.pydocstyle]
convention = "google"

[tool.coverage.run]
source_pkgs = ["liquid_jsonpath", "tests"]
branch = true
parallel = true
omit = ["liquid_jsonpath/__about__.py"]

[tool.coverage.paths]
liquid_jsonpath = ["liquid_jsonpath", "*/liquid-jsonpath/liquid_jsonpath"]
tests = ["tests", "*/liquid-jsonpath/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
files = "liquid_jsonpath"
python_version = "3.10"
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
local_partial_types = true
no_implicit_reexport = true
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false
warn_return_any = true
warn_unreachable = true
