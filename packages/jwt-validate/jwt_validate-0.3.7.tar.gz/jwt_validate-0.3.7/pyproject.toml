[tool.poetry]
name = "jwt-validate"
version = "0.3.7"
description = "Library for validation token JWT"
authors = ["Reinaldo Saraiva do Carmo <reinaldo.carmo@luizalabs.com>"]
license = "BeerWare"
readme = "index.md"
packages = [{include = "jwt_validate"}]

classifiers = [
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.24.0"
pyjwt = {extras = ["crypto"], version = "^2.7.0"}
pytest-env = "^0.8.1"


[tool.poetry.group.dev.dependencies]
python-dotenv = "^1.0.0"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
httpx = "^0.24.0"
pytest-mock = "^3.10.0"
pytest-asyncio = "^0.21.0"
blue = "^0.9.1"
isort = "^5.12.0"
mkdocs-material = "^9.1.11"
mkdocstrings = "^0.21.2"
mkdocstrings-python = "^0.10.1"
taskipy = "^1.10.4"
pyjwt = {extras = ["crypto"], version = "^2.7.0"}
fastapi = "^0.95.1"
uvicorn = "^0.22.0"
pydantic = {extras = ["email"], version = "^1.10.7"}
ipython = "^8.13.2"



[tool.poetry.group.doc.dependencies]
griffe = "^0.27.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "."
log_level = "DEBUG"
addopts = "-ra --doctest-modules"



[tool.coverage.run]
omit = ["*/*/tests/*", "*/*/settings/*", "**/tests/*", "**/conftest.py", "**/db.py", "**/base_class.py"]


[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
force_grid_wrap = 2
combine_as_imports = true

[tool.coverage.report]
fail_under = 80



[tool.taskipy.tasks]
lint = "blue . && isort ."
docs = "mkdocs serve" 
pre_test = "task lint"
test = "pytest -s -x --cov-report term --cov=. --cov-report term-missing -vv"
post = "coverage html"
uvicorn = "uvicorn  iaas_jwt.main:app --reload"
ipython = "ipython --no-autoindent --InteractiveShellApp.exec_lines='%load_ext autoreload' --InteractiveShellApp.exec_lines='%autoreload 2'"