# coding=utf-8
# *** WARNING: this file was generated by pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from ._enums import *

__all__ = [
    'ContactInfoResponse',
]

@pulumi.output_type
class ContactInfoResponse(dict):
    """
    The contact information of the peer.
    """
    def __init__(__self__, *,
                 emails: Optional[Sequence[str]] = None,
                 phone: Optional[Sequence[str]] = None):
        """
        The contact information of the peer.
        :param Sequence[str] emails: The list of email addresses.
        :param Sequence[str] phone: The list of contact numbers.
        """
        if emails is not None:
            pulumi.set(__self__, "emails", emails)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)

    @property
    @pulumi.getter
    def emails(self) -> Optional[Sequence[str]]:
        """
        The list of email addresses.
        """
        return pulumi.get(self, "emails")

    @property
    @pulumi.getter
    def phone(self) -> Optional[Sequence[str]]:
        """
        The list of contact numbers.
        """
        return pulumi.get(self, "phone")


