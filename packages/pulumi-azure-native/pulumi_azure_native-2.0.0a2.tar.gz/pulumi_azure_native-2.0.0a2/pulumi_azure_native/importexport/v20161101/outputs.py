# coding=utf-8
# *** WARNING: this file was generated by pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'DriveBitLockerKeyResponse',
]

@pulumi.output_type
class DriveBitLockerKeyResponse(dict):
    """
    BitLocker recovery key or password to the specified drive
    """
    def __init__(__self__, *,
                 bit_locker_key: Optional[str] = None,
                 drive_id: Optional[str] = None):
        """
        BitLocker recovery key or password to the specified drive
        :param str bit_locker_key: BitLocker recovery key or password
        :param str drive_id: Drive ID
        """
        if bit_locker_key is not None:
            pulumi.set(__self__, "bit_locker_key", bit_locker_key)
        if drive_id is not None:
            pulumi.set(__self__, "drive_id", drive_id)

    @property
    @pulumi.getter(name="bitLockerKey")
    def bit_locker_key(self) -> Optional[str]:
        """
        BitLocker recovery key or password
        """
        return pulumi.get(self, "bit_locker_key")

    @property
    @pulumi.getter(name="driveId")
    def drive_id(self) -> Optional[str]:
        """
        Drive ID
        """
        return pulumi.get(self, "drive_id")


