"use strict";(self.webpackChunk_jupyter_collaboration_extension=self.webpackChunk_jupyter_collaboration_extension||[]).push([[87],{5087:(e,o,t)=>{t.r(o),t.d(o,{default:()=>B});var r,a=t(2177),n=t(9324),s=t(5355),i=t(2497),l=t(5116),c=t(899),d=t(94),u=t(7387),p=t(2293),v=t(2563);!function(e){e.openPath="filebrowser:open-path"}(r||(r={}));const m={id:"@jupyter/collaboration-extension:drive",description:"The default collaborative drive provider",provides:v.ICollaborativeDrive,requires:[u.ITranslator],optional:[],activate:(e,o)=>{const t=o.load("jupyter_collaboration"),r=new v.YDrive(e.serviceManager.user,t);return e.serviceManager.contents.addDrive(r),r}},g={id:"@jupyter/collaboration-extension:yfile",description:"Plugin to register the shared model factory for the content type 'file'",autoStart:!0,requires:[v.ICollaborativeDrive],optional:[],activate:(e,o)=>{o.sharedModelFactory.registerDocumentFactory("file",(()=>new p.YFile))}},y={id:"@jupyter/collaboration-extension:ynotebook",description:"Plugin to register the shared model factory for the content type 'notebook'",autoStart:!0,requires:[v.ICollaborativeDrive],optional:[d.ISettingRegistry],activate:(e,o,t)=>{let r=!0;t&&t.load("@jupyterlab/notebook-extension:tracker").then((e=>{const o=e=>{var o;const t=null==e?void 0:e.get("experimentalEnableDocumentWideUndoRedo").composite;r=null===(o=!t)||void 0===o||o};o(e),e.changed.connect((e=>o(e)))})),o.sharedModelFactory.registerDocumentFactory("notebook",(()=>new p.YNotebook({disableDocumentWideUndoRedo:r})))}},b={id:"@jupyter/collaboration-extension:defaultFileBrowser",description:"The default file browser factory provider",provides:s.IDefaultFileBrowser,requires:[v.ICollaborativeDrive,s.IFileBrowserFactory],optional:[a.IRouter,a.JupyterFrontEnd.ITreeResolver,a.ILabShell,d.ISettingRegistry],activate:async(e,o,t,r,a,n)=>{const{commands:s}=e;e.serviceManager.contents.addDrive(o);const i=t.createFileBrowser("filebrowser",{auto:!1,restore:!1,driveName:o.name});return w.restoreBrowser(i,s,r,a,n),i}},h={id:"@jupyter/collaboration-extension:logger",description:"A logging plugin for debugging purposes.",autoStart:!0,optional:[l.ILoggerRegistry,i.IEditorTracker,c.INotebookTracker,u.ITranslator],activate:(e,o,t,r,a)=>{const s=(null!=a?a:u.nullTranslator).load("jupyter_collaboration"),i="https://schema.jupyter.org/jupyter_collaboration/session/v1";if(!o)return void e.serviceManager.events.stream.connect(((e,o)=>{var t,r;o.schema_id===i&&(console.debug(`[${o.room}(${o.path})] ${null!==(t=o.action)&&void 0!==t?t:""}: ${null!==(r=o.msg)&&void 0!==r?r:""}`),"WARNING"===o.level&&(0,n.showDialog)({title:s.__("Warning"),body:s.__(`Two collaborative sessions are accessing the file ${o.path} simultaneously.\n                \nOpening the same file using different views simultaneously is not supported. Please, close one view; otherwise, you might lose some of your progress.`),buttons:[n.Dialog.okButton()]}))}));const l=new Map,c=(e,t)=>{const r=o.getLogger(t.context.path);l.set(t.context.localPath,r),t.disposed.connect((e=>{l.delete(e.context.localPath)}))};t&&t.widgetAdded.connect(c),r&&r.widgetAdded.connect(c),(async()=>{var o,t;const{events:r}=e.serviceManager;for await(const e of r.stream)if(e.schema_id===i){const r=l.get(e.path);null==r||r.log({type:"text",level:e.level.toLowerCase(),data:`[${e.room}] ${null!==(o=e.action)&&void 0!==o?o:""}: ${null!==(t=e.msg)&&void 0!==t?t:""}`}),"WARNING"===e.level&&(0,n.showDialog)({title:s.__("Warning"),body:s.__("Two collaborative sessions are accessing the file %1 simultaneously.\n                \nOpening a document with multiple views simultaneously is not supported. Please close one view; otherwise, you might lose some of your progress.",e.path),buttons:[n.Dialog.warnButton({label:s.__("Ok")})]})}})()}};var w;!function(e){e.restoreBrowser=async function(e,o,t,a,n){const s="jp-mod-restoring";if(e.addClass(s),!t)return await e.model.restore(e.id),await e.model.refresh(),void e.removeClass(s);const i=async()=>{t.routed.disconnect(i);const l=await(null==a?void 0:a.paths);(null==l?void 0:l.file)||(null==l?void 0:l.browser)?(await e.model.restore(e.id,!1),l.file&&await o.execute(r.openPath,{path:l.file,dontShowBrowser:!0}),l.browser&&await o.execute(r.openPath,{path:l.browser,dontShowBrowser:!0})):(await e.model.restore(e.id),await e.model.refresh()),e.removeClass(s),(null==n?void 0:n.isEmpty("main"))&&o.execute("launcher:create")};t.routed.connect(i)}}(w||(w={}));var f=t(674),I=t(4813),_=t(3897),x=t(8778),j=t(9474),k=t(3020),C=t(1802),S=t(981),M=t(6493),D=t(7099);const P={id:"@jupyter/collaboration-extension:userMenu",description:"Provide connected user menu.",requires:[],provides:I.IUserMenu,activate:e=>{const{commands:o}=e,{user:t}=e.serviceManager;return new I.UserMenu({commands:o,user:t})}},T={id:"@jupyter/collaboration-extension:user-menu-bar",description:"Add user menu to the interface.",autoStart:!0,requires:[I.IUserMenu,n.IToolbarWidgetRegistry],activate:async(e,o,t)=>{const{user:r}=e.serviceManager,a=new x.MenuBar({forceItemsPosition:{forceX:!1,forceY:!1},renderer:new I.RendererUserMenu(r)});a.id="jp-UserMenu",r.userChanged.connect((()=>a.update())),a.addMenu(o),t.addFactory("TopBar","user-menu",(()=>a))}},R={id:"@jupyter/collaboration-extension:rtcGlobalAwareness",description:"Add global awareness to share working document of users.",requires:[C.IStateDB],provides:I.IGlobalAwareness,activate:(e,o)=>{const{user:t}=e.serviceManager,r=new S.Doc,a=new M.GL(r),n=k.ServerConnection.makeSettings(),s=j.URLExt.join(n.wsUrl,"api/collaboration/room");new D.WebsocketProvider(s,"JupyterLab:globalAwareness",r,{awareness:a});const i=()=>{a.setLocalStateField("user",t.identity)};return t.isReady&&i(),t.ready.then(i).catch((e=>console.error(e))),t.userChanged.connect(i),o.changed.connect((async()=>{var e,t;const r=(null===(t=null===(e=(await o.toJSON())["layout-restorer:data"])||void 0===e?void 0:e.main)||void 0===t?void 0:t.current)||"";r.startsWith("editor")||r.startsWith("notebook")?a.setLocalStateField("current",r):a.setLocalStateField("current",null)})),a}},F={id:"@jupyter/collaboration-extension:rtcPanel",description:"Add side panel to display all currently connected users.",autoStart:!0,requires:[I.IGlobalAwareness],optional:[u.ITranslator],activate:(e,o,t)=>{const{user:r}=e.serviceManager,a=(null!=t?t:u.nullTranslator).load("jupyter_collaboration"),s=new _.SidePanel({alignment:"justify"});s.id=n.DOMUtils.createDomID(),s.title.icon=_.usersIcon,s.title.caption=a.__("Collaboration"),s.addClass("jp-RTCPanel"),e.shell.add(s,"left",{rank:300});const i=new I.UserInfoPanel(r);i.title.label=a.__("User info"),i.title.caption=a.__("User information"),s.addWidget(i);const l=new I.CollaboratorsPanel(r,o,(o=>{e.commands.execute("docmanager:open",{path:o})}));l.title.label=a.__("Online Collaborators"),s.addWidget(l)}},U={id:"@jupyter/collaboration-extension:userEditorCursors",description:"Add CodeMirror extension to display remote user cursors and selections.",autoStart:!0,requires:[f.IEditorExtensionRegistry],activate:(e,o)=>{o.addExtension({name:"remote-user-cursors",factory(e){const{awareness:o,ysource:t}=e.model.sharedModel;return f.EditorExtensionRegistry.createImmutableExtension((0,I.remoteUserCursors)({awareness:o,ytext:t}))}})}};var A;!function(e){e.share="collaboration:shared-link"}(A||(A={}));const B=[m,g,y,b,h,P,T,R,F,{id:"@jupyter/collaboration-extension:shared-link",autoStart:!0,optional:[n.ICommandPalette,u.ITranslator],activate:async(e,o,t)=>{const{commands:r}=e,a=(null!=t?t:u.nullTranslator).load("collaboration");r.addCommand(A.share,{label:a.__("Generate a Shared Link"),icon:_.shareIcon,execute:async()=>{const e=await(0,I.showSharedLinkDialog)({translator:t});e.button.accept&&e.value&&n.Clipboard.copyToSystem(e.value)}}),o&&o.addItem({command:A.share,category:a.__("Server")})}},U]}}]);