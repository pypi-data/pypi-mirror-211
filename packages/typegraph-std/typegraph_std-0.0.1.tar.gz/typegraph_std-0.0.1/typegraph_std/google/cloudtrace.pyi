from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    StackFrameIn: t.typedef = ...
    StackFrameOut: t.typedef = ...
    TruncatableStringIn: t.typedef = ...
    TruncatableStringOut: t.typedef = ...
    MessageEventIn: t.typedef = ...
    MessageEventOut: t.typedef = ...
    StackFramesIn: t.typedef = ...
    StackFramesOut: t.typedef = ...
    BatchWriteSpansRequestIn: t.typedef = ...
    BatchWriteSpansRequestOut: t.typedef = ...
    TimeEventIn: t.typedef = ...
    TimeEventOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    LinkIn: t.typedef = ...
    LinkOut: t.typedef = ...
    TimeEventsIn: t.typedef = ...
    TimeEventsOut: t.typedef = ...
    SpanIn: t.typedef = ...
    SpanOut: t.typedef = ...
    AttributeValueIn: t.typedef = ...
    AttributeValueOut: t.typedef = ...
    LinksIn: t.typedef = ...
    LinksOut: t.typedef = ...
    StackTraceIn: t.typedef = ...
    StackTraceOut: t.typedef = ...
    AnnotationIn: t.typedef = ...
    AnnotationOut: t.typedef = ...
    StatusIn: t.typedef = ...
    StatusOut: t.typedef = ...
    AttributesIn: t.typedef = ...
    AttributesOut: t.typedef = ...
    ModuleIn: t.typedef = ...
    ModuleOut: t.typedef = ...

class FuncList:
    projectsTracesBatchWrite: t.func = ...
    projectsTracesSpansCreateSpan: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_cloudtrace() -> Import: ...
