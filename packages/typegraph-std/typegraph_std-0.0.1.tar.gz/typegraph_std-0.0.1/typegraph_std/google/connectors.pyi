from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    ExecuteSqlQueryRequestIn: t.typedef = ...
    ExecuteSqlQueryRequestOut: t.typedef = ...
    EntityIn: t.typedef = ...
    EntityOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    QueryIn: t.typedef = ...
    QueryOut: t.typedef = ...
    ExecuteSqlQueryResponseIn: t.typedef = ...
    ExecuteSqlQueryResponseOut: t.typedef = ...
    ExecuteActionResponseIn: t.typedef = ...
    ExecuteActionResponseOut: t.typedef = ...
    ListEntitiesResponseIn: t.typedef = ...
    ListEntitiesResponseOut: t.typedef = ...
    ExecuteActionRequestIn: t.typedef = ...
    ExecuteActionRequestOut: t.typedef = ...
    InputParameterIn: t.typedef = ...
    InputParameterOut: t.typedef = ...
    ActionIn: t.typedef = ...
    ActionOut: t.typedef = ...
    EntityTypeIn: t.typedef = ...
    EntityTypeOut: t.typedef = ...
    ListEntityTypesResponseIn: t.typedef = ...
    ListEntityTypesResponseOut: t.typedef = ...
    ReferenceIn: t.typedef = ...
    ReferenceOut: t.typedef = ...
    ResultMetadataIn: t.typedef = ...
    ResultMetadataOut: t.typedef = ...
    ListActionsResponseIn: t.typedef = ...
    ListActionsResponseOut: t.typedef = ...
    UpdateEntitiesWithConditionsResponseIn: t.typedef = ...
    UpdateEntitiesWithConditionsResponseOut: t.typedef = ...
    FieldIn: t.typedef = ...
    FieldOut: t.typedef = ...

class FuncList:
    projectsLocationsConnectionsExecuteSqlQuery: t.func = ...
    projectsLocationsConnectionsEntityTypesList: t.func = ...
    projectsLocationsConnectionsEntityTypesEntitiesUpdateEntitiesWithConditions: t.func = (
        ...
    )
    projectsLocationsConnectionsEntityTypesEntitiesDeleteEntitiesWithConditions: t.func = (
        ...
    )
    projectsLocationsConnectionsEntityTypesEntitiesGet: t.func = ...
    projectsLocationsConnectionsEntityTypesEntitiesList: t.func = ...
    projectsLocationsConnectionsEntityTypesEntitiesPatch: t.func = ...
    projectsLocationsConnectionsEntityTypesEntitiesCreate: t.func = ...
    projectsLocationsConnectionsEntityTypesEntitiesDelete: t.func = ...
    projectsLocationsConnectionsActionsList: t.func = ...
    projectsLocationsConnectionsActionsExecute: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_connectors() -> Import: ...
