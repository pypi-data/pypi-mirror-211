from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    SourcePositionIn: t.typedef = ...
    SourcePositionOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    TestRulesetResponseIn: t.typedef = ...
    TestRulesetResponseOut: t.typedef = ...
    FileIn: t.typedef = ...
    FileOut: t.typedef = ...
    ReleaseIn: t.typedef = ...
    ReleaseOut: t.typedef = ...
    ListRulesetsResponseIn: t.typedef = ...
    ListRulesetsResponseOut: t.typedef = ...
    MetadataIn: t.typedef = ...
    MetadataOut: t.typedef = ...
    SourceIn: t.typedef = ...
    SourceOut: t.typedef = ...
    TestCaseIn: t.typedef = ...
    TestCaseOut: t.typedef = ...
    ArgIn: t.typedef = ...
    ArgOut: t.typedef = ...
    ExpressionReportIn: t.typedef = ...
    ExpressionReportOut: t.typedef = ...
    TestResultIn: t.typedef = ...
    TestResultOut: t.typedef = ...
    TestRulesetRequestIn: t.typedef = ...
    TestRulesetRequestOut: t.typedef = ...
    VisitedExpressionIn: t.typedef = ...
    VisitedExpressionOut: t.typedef = ...
    ListReleasesResponseIn: t.typedef = ...
    ListReleasesResponseOut: t.typedef = ...
    ValueCountIn: t.typedef = ...
    ValueCountOut: t.typedef = ...
    GetReleaseExecutableResponseIn: t.typedef = ...
    GetReleaseExecutableResponseOut: t.typedef = ...
    FunctionCallIn: t.typedef = ...
    FunctionCallOut: t.typedef = ...
    ResultIn: t.typedef = ...
    ResultOut: t.typedef = ...
    UpdateReleaseRequestIn: t.typedef = ...
    UpdateReleaseRequestOut: t.typedef = ...
    IssueIn: t.typedef = ...
    IssueOut: t.typedef = ...
    TestSuiteIn: t.typedef = ...
    TestSuiteOut: t.typedef = ...
    FunctionMockIn: t.typedef = ...
    FunctionMockOut: t.typedef = ...
    RulesetIn: t.typedef = ...
    RulesetOut: t.typedef = ...

class FuncList:
    projectsTest: t.func = ...
    projectsReleasesGetExecutable: t.func = ...
    projectsReleasesGet: t.func = ...
    projectsReleasesList: t.func = ...
    projectsReleasesDelete: t.func = ...
    projectsReleasesPatch: t.func = ...
    projectsReleasesCreate: t.func = ...
    projectsRulesetsDelete: t.func = ...
    projectsRulesetsList: t.func = ...
    projectsRulesetsGet: t.func = ...
    projectsRulesetsCreate: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_firebaserules() -> Import: ...
