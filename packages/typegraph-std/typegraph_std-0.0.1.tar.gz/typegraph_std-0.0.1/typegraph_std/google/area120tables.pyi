from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    DateDetailsIn: t.typedef = ...
    DateDetailsOut: t.typedef = ...
    UpdateRowRequestIn: t.typedef = ...
    UpdateRowRequestOut: t.typedef = ...
    TableIn: t.typedef = ...
    TableOut: t.typedef = ...
    ColumnDescriptionIn: t.typedef = ...
    ColumnDescriptionOut: t.typedef = ...
    BatchCreateRowsResponseIn: t.typedef = ...
    BatchCreateRowsResponseOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    WorkspaceIn: t.typedef = ...
    WorkspaceOut: t.typedef = ...
    BatchUpdateRowsRequestIn: t.typedef = ...
    BatchUpdateRowsRequestOut: t.typedef = ...
    BatchCreateRowsRequestIn: t.typedef = ...
    BatchCreateRowsRequestOut: t.typedef = ...
    SavedViewIn: t.typedef = ...
    SavedViewOut: t.typedef = ...
    CreateRowRequestIn: t.typedef = ...
    CreateRowRequestOut: t.typedef = ...
    ListTablesResponseIn: t.typedef = ...
    ListTablesResponseOut: t.typedef = ...
    RowIn: t.typedef = ...
    RowOut: t.typedef = ...
    BatchUpdateRowsResponseIn: t.typedef = ...
    BatchUpdateRowsResponseOut: t.typedef = ...
    BatchDeleteRowsRequestIn: t.typedef = ...
    BatchDeleteRowsRequestOut: t.typedef = ...
    LookupDetailsIn: t.typedef = ...
    LookupDetailsOut: t.typedef = ...
    ListRowsResponseIn: t.typedef = ...
    ListRowsResponseOut: t.typedef = ...
    ListWorkspacesResponseIn: t.typedef = ...
    ListWorkspacesResponseOut: t.typedef = ...
    LabeledItemIn: t.typedef = ...
    LabeledItemOut: t.typedef = ...
    RelationshipDetailsIn: t.typedef = ...
    RelationshipDetailsOut: t.typedef = ...

class FuncList:
    tablesGet: t.func = ...
    tablesList: t.func = ...
    tablesRowsGet: t.func = ...
    tablesRowsCreate: t.func = ...
    tablesRowsBatchDelete: t.func = ...
    tablesRowsDelete: t.func = ...
    tablesRowsBatchCreate: t.func = ...
    tablesRowsPatch: t.func = ...
    tablesRowsBatchUpdate: t.func = ...
    tablesRowsList: t.func = ...
    workspacesGet: t.func = ...
    workspacesList: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_area120tables() -> Import: ...
