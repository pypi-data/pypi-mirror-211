from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    ListLocationAdminsResponseIn: t.typedef = ...
    ListLocationAdminsResponseOut: t.typedef = ...
    InvitationIn: t.typedef = ...
    InvitationOut: t.typedef = ...
    AdminIn: t.typedef = ...
    AdminOut: t.typedef = ...
    ListInvitationsResponseIn: t.typedef = ...
    ListInvitationsResponseOut: t.typedef = ...
    TargetLocationIn: t.typedef = ...
    TargetLocationOut: t.typedef = ...
    TransferLocationRequestIn: t.typedef = ...
    TransferLocationRequestOut: t.typedef = ...
    DeclineInvitationRequestIn: t.typedef = ...
    DeclineInvitationRequestOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    AcceptInvitationRequestIn: t.typedef = ...
    AcceptInvitationRequestOut: t.typedef = ...
    AccountIn: t.typedef = ...
    AccountOut: t.typedef = ...
    PostalAddressIn: t.typedef = ...
    PostalAddressOut: t.typedef = ...
    OrganizationInfoIn: t.typedef = ...
    OrganizationInfoOut: t.typedef = ...
    ListAccountsResponseIn: t.typedef = ...
    ListAccountsResponseOut: t.typedef = ...
    ListAccountAdminsResponseIn: t.typedef = ...
    ListAccountAdminsResponseOut: t.typedef = ...

class FuncList:
    accountsCreate: t.func = ...
    accountsPatch: t.func = ...
    accountsGet: t.func = ...
    accountsList: t.func = ...
    accountsInvitationsList: t.func = ...
    accountsInvitationsAccept: t.func = ...
    accountsInvitationsDecline: t.func = ...
    accountsAdminsDelete: t.func = ...
    accountsAdminsPatch: t.func = ...
    accountsAdminsCreate: t.func = ...
    accountsAdminsList: t.func = ...
    locationsTransfer: t.func = ...
    locationsAdminsCreate: t.func = ...
    locationsAdminsList: t.func = ...
    locationsAdminsPatch: t.func = ...
    locationsAdminsDelete: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_mybusinessaccountmanagement() -> Import: ...
