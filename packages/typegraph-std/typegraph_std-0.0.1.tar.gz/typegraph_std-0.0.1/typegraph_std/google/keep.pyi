from typegraph import t

class TypeList:
    ErrorResponse: t.typedef = ...
    ListContentIn: t.typedef = ...
    ListContentOut: t.typedef = ...
    NoteIn: t.typedef = ...
    NoteOut: t.typedef = ...
    EmptyIn: t.typedef = ...
    EmptyOut: t.typedef = ...
    BatchCreatePermissionsResponseIn: t.typedef = ...
    BatchCreatePermissionsResponseOut: t.typedef = ...
    ListItemIn: t.typedef = ...
    ListItemOut: t.typedef = ...
    TextContentIn: t.typedef = ...
    TextContentOut: t.typedef = ...
    FamilyIn: t.typedef = ...
    FamilyOut: t.typedef = ...
    GroupIn: t.typedef = ...
    GroupOut: t.typedef = ...
    CreatePermissionRequestIn: t.typedef = ...
    CreatePermissionRequestOut: t.typedef = ...
    UserIn: t.typedef = ...
    UserOut: t.typedef = ...
    BatchDeletePermissionsRequestIn: t.typedef = ...
    BatchDeletePermissionsRequestOut: t.typedef = ...
    ListNotesResponseIn: t.typedef = ...
    ListNotesResponseOut: t.typedef = ...
    SectionIn: t.typedef = ...
    SectionOut: t.typedef = ...
    AttachmentIn: t.typedef = ...
    AttachmentOut: t.typedef = ...
    PermissionIn: t.typedef = ...
    PermissionOut: t.typedef = ...
    BatchCreatePermissionsRequestIn: t.typedef = ...
    BatchCreatePermissionsRequestOut: t.typedef = ...

class FuncList:
    notesCreate: t.func = ...
    notesDelete: t.func = ...
    notesGet: t.func = ...
    notesList: t.func = ...
    notesPermissionsBatchDelete: t.func = ...
    notesPermissionsBatchCreate: t.func = ...
    mediaDownload: t.func = ...

class Import:
    types: TypeList = ...
    functions: FuncList = ...

def import_keep() -> Import: ...
