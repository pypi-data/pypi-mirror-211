[package]
name = "polars-time"
version= "0.30.0"
authors = ["ritchie46 <ritchie46@gmail.com>"]
edition = "2021"
license = "MIT"
description = "Time related code for the polars dataframe library"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
atoi = "2.0.0"
chrono = { version = "0.4", default-features = false, features = ["std"] }
chrono-tz = { version = "0.8", optional = true }
now = "0.1"
once_cell= "1"
polars-arrow = { version = "0.30.0", path = "../polars-arrow", features = ["compute", "temporal"] }
polars-core = { version = "0.30.0", path = "../polars-core", default-features = false, features = ["private", "dtype-datetime", "dtype-duration", "dtype-time", "dtype-date"] }
polars-ops = { version = "0.30.0", path = "../polars-ops" }
polars-utils = { version = "0.30.0", path = "../polars-utils" }
regex = "1.7.1"
serde = { version = "1", features = ["derive"], optional = true }
smartstring= { version = "1" }

[features]
dtype-date = ["polars-core/dtype-date", "polars-core/temporal"]
dtype-datetime = ["polars-core/dtype-date", "polars-core/temporal"]
dtype-time = ["polars-core/dtype-time", "polars-core/temporal"]
dtype-duration = ["polars-core/dtype-duration", "polars-core/temporal"]
rolling_window = ["polars-core/rolling_window", "dtype-duration"]
private = []
fmt = ["polars-core/fmt"]
timezones = ["chrono-tz", "dtype-datetime", "polars-core/timezones", "polars-arrow/timezones"]

test = ["dtype-date", "dtype-datetime", "polars-core/fmt"]

default = ["private"]

[dependencies.arrow]
package = "arrow2"
# git = "https://github.com/jorgecarleitao/arrow2"
# git = "https://github.com/ritchie46/arrow2"
# rev = "1491c6e8f4fd100f53c358e4f3ef1536d9e75090"
# path = "../arrow2"
# branch = "polars_2023-05-25"
version = "0.17"
default-features = false
features = [
  "compute_aggregate",
  "compute_arithmetics",
  "compute_boolean",
  "compute_boolean_kleene",
  "compute_cast",
  "compute_comparison",
  "compute_concatenate",
  "compute_filter",
  "compute_if_then_else",
]
