[wipac:cicd_setup_builder]
pypi_name = wipac-file-catalog-indexer
python_min = 3.8
author = WIPAC Developers
author_email = developers@icecube.wisc.edu
keywords_spaced = indexer metadata data warehouse archive L2 PFDST PFFilt PFRaw i3 simulation File Catalog iceprod

[metadata]
name = wipac-file-catalog-indexer
version = attr: indexer.__version__
url = https://github.com/WIPACrepo/file-catalog-indexer
author = WIPAC Developers
author_email = developers@icecube.wisc.edu
description = Indexing package and scripts for the File Catalog
long_description = file: README.md
long_description_content_type = text/markdown
keywords = 
	indexer
	metadata
	data
	warehouse
	archive
	L2
	PFDST
	PFFilt
	PFRaw
	i3
	simulation
	File
	Catalog
	iceprod
	WIPAC
	IceCube
license = MIT
classifiers = 
	Development Status :: 5 - Production/Stable
	License :: OSI Approved :: MIT License
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
download_url = https://pypi.org/project/wipac-file-catalog-indexer/
project_urls = 
	Tracker = https://github.com/WIPACrepo/file-catalog-indexer/issues
	Source = https://github.com/WIPACrepo/file-catalog-indexer

[semantic_release]
version_variable = indexer/__init__.py:__version__
upload_to_pypi = True
patch_without_tag = True
commit_parser = semantic_release.history.emoji_parser
major_emoji = [major]
minor_emoji = [minor]
patch_emoji = [fix], [patch]
branch = master

[options]
packages = find:
install_requires = 
	PyMySQL
	bitmath
	iceprod
	more-itertools
	requests
	requests-futures
	requests-toolbelt
	typing-extensions
	wipac-file-catalog
	wipac-rest-tools
	xmltodict
python_requires = >=3.8, <3.12

[options.extras_require]
dev = 
	coloredlogs
	flake8
	mypy
	natsort
	pycycle
	pytest
	pytest-asyncio
	pytest-cov
	pytest-mock
	requests
	requests-mock
	ruff
	types-PyMySQL
	types-PyYAML
	types-requests

[options.package_data]
* = py.typed

[options.packages.find]
exclude = 
	test
	tests
	doc
	docs
	resource
	resources
	example
	examples

[tool:pytest]
asyncio_mode = strict

[coverage:html]
directory = htmlcov

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	
	if 0:
	if __name__ == .__main__.:
omit = 
	*__init__*
ignore_errors = True

[coverage:run]
branch = True
parallel = True

[flake8]
ignore = E501

[mypy]
show_error_codes = True
warn_unused_ignores = True

[egg_info]
tag_build = 
tag_date = 0

