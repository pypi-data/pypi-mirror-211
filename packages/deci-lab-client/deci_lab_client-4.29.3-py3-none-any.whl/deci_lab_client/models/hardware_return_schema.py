# coding: utf-8

"""
    Deci Platform API

    Train, deploy, optimize and serve your models using Deci's platform, in your cloud or on premise.  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from deci_lab_client.configuration import Configuration


class HardwareReturnSchema(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'HardwareType',
        'label': 'HardwareTypeLabel',
        'vendor': 'HardwareVendor',
        'machine': 'HardwareMachineModel',
        'group': 'HardwareGroup',
        'future': 'bool',
        'deprecated': 'bool'
    }

    attribute_map = {
        'name': 'name',
        'label': 'label',
        'vendor': 'vendor',
        'machine': 'machine',
        'group': 'group',
        'future': 'future',
        'deprecated': 'deprecated'
    }

    def __init__(self, name=None, label=None, vendor=None, machine=None, group=None, future=False, deprecated=False, local_vars_configuration=None):  # noqa: E501
        """HardwareReturnSchema - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._name = None
        self._label = None
        self._vendor = None
        self._machine = None
        self._group = None
        self._future = None
        self._deprecated = None
        self.discriminator = None

        self.name = name
        self.label = label
        if vendor is not None:
            self.vendor = vendor
        if machine is not None:
            self.machine = machine
        if group is not None:
            self.group = group
        if future is not None:
            self.future = future
        if deprecated is not None:
            self.deprecated = deprecated

    @property
    def name(self):
        """Gets the name of this HardwareReturnSchema.  # noqa: E501


        :return: The name of this HardwareReturnSchema.  # noqa: E501
        :rtype: HardwareType
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HardwareReturnSchema.


        :param name: The name of this HardwareReturnSchema.  # noqa: E501
        :type: HardwareType
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def label(self):
        """Gets the label of this HardwareReturnSchema.  # noqa: E501


        :return: The label of this HardwareReturnSchema.  # noqa: E501
        :rtype: HardwareTypeLabel
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this HardwareReturnSchema.


        :param label: The label of this HardwareReturnSchema.  # noqa: E501
        :type: HardwareTypeLabel
        """
        if self.local_vars_configuration.client_side_validation and label is None:  # noqa: E501
            raise ValueError("Invalid value for `label`, must not be `None`")  # noqa: E501

        self._label = label

    @property
    def vendor(self):
        """Gets the vendor of this HardwareReturnSchema.  # noqa: E501


        :return: The vendor of this HardwareReturnSchema.  # noqa: E501
        :rtype: HardwareVendor
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this HardwareReturnSchema.


        :param vendor: The vendor of this HardwareReturnSchema.  # noqa: E501
        :type: HardwareVendor
        """

        self._vendor = vendor

    @property
    def machine(self):
        """Gets the machine of this HardwareReturnSchema.  # noqa: E501


        :return: The machine of this HardwareReturnSchema.  # noqa: E501
        :rtype: HardwareMachineModel
        """
        return self._machine

    @machine.setter
    def machine(self, machine):
        """Sets the machine of this HardwareReturnSchema.


        :param machine: The machine of this HardwareReturnSchema.  # noqa: E501
        :type: HardwareMachineModel
        """

        self._machine = machine

    @property
    def group(self):
        """Gets the group of this HardwareReturnSchema.  # noqa: E501


        :return: The group of this HardwareReturnSchema.  # noqa: E501
        :rtype: HardwareGroup
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this HardwareReturnSchema.


        :param group: The group of this HardwareReturnSchema.  # noqa: E501
        :type: HardwareGroup
        """

        self._group = group

    @property
    def future(self):
        """Gets the future of this HardwareReturnSchema.  # noqa: E501


        :return: The future of this HardwareReturnSchema.  # noqa: E501
        :rtype: bool
        """
        return self._future

    @future.setter
    def future(self, future):
        """Sets the future of this HardwareReturnSchema.


        :param future: The future of this HardwareReturnSchema.  # noqa: E501
        :type: bool
        """

        self._future = future

    @property
    def deprecated(self):
        """Gets the deprecated of this HardwareReturnSchema.  # noqa: E501


        :return: The deprecated of this HardwareReturnSchema.  # noqa: E501
        :rtype: bool
        """
        return self._deprecated

    @deprecated.setter
    def deprecated(self, deprecated):
        """Sets the deprecated of this HardwareReturnSchema.


        :param deprecated: The deprecated of this HardwareReturnSchema.  # noqa: E501
        :type: bool
        """

        self._deprecated = deprecated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HardwareReturnSchema):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, HardwareReturnSchema):
            return True

        return self.to_dict() != other.to_dict()
