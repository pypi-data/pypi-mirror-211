# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vector_pipelines.grpc import (
    embeddings_pb2 as vector__pipelines_dot_grpc_dot_embeddings__pb2,
)


class EmbeddingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateEmbeddings = channel.unary_unary(
            "/vector_pipelines.EmbeddingService/GenerateEmbeddings",
            request_serializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingRequest.SerializeToString,
            response_deserializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingResponse.FromString,
        )
        self.GetEmbeddingInfo = channel.unary_unary(
            "/vector_pipelines.EmbeddingService/GetEmbeddingInfo",
            request_serializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoRequest.SerializeToString,
            response_deserializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoResponse.FromString,
        )


class EmbeddingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateEmbeddings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetEmbeddingInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EmbeddingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GenerateEmbeddings": grpc.unary_unary_rpc_method_handler(
            servicer.GenerateEmbeddings,
            request_deserializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingRequest.FromString,
            response_serializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingResponse.SerializeToString,
        ),
        "GetEmbeddingInfo": grpc.unary_unary_rpc_method_handler(
            servicer.GetEmbeddingInfo,
            request_deserializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoRequest.FromString,
            response_serializer=vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "vector_pipelines.EmbeddingService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class EmbeddingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateEmbeddings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vector_pipelines.EmbeddingService/GenerateEmbeddings",
            vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingRequest.SerializeToString,
            vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetEmbeddingInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vector_pipelines.EmbeddingService/GetEmbeddingInfo",
            vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoRequest.SerializeToString,
            vector__pipelines_dot_grpc_dot_embeddings__pb2.EmbeddingInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
