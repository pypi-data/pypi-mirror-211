#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C,I,R


"there are no paths"


import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from nopaths.clients import Client
from nopaths.command import Commands
from nopaths.errored import Errors
from nopaths.logging import Logging
from nopaths.objects import update
from nopaths.persist import Persist, write
from nopaths.runtime import DATE, Cfg, banner, command, launch, parse_cli
from nopaths.runtime import scanstr, waiter
from nopaths.utility import spl


import nopaths.modules


Persist.workdir = os.path.expanduser(f"~/.{Cfg.name}")


class CLI(Client):

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)


class Console(CLI):

    def handle(self, evt):
        CLI.handle(self, evt)
        evt.wait()

    def poll(self):
        return self.event(input("> "))


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open('/dev/null', 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open('/dev/null', 'a+')
    ses = open('/dev/null', 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print('')
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


def main():
    parse_cli(' '.join(sys.argv[1:]))
    if "v" in Cfg.opts and "d" not in Cfg.opts:
        Logging.verbose = True
        Logging.raw = print
        banner()
    dowait = False
    if Cfg.txt:
        scanstr(nopaths.modules, Cfg.mod, "a" in Cfg.opts)
        cli = CLI()
        command(cli, Cfg.otxt)
    elif 'd' in Cfg.opts:
        daemon()
        dowait = True
    if "c" in Cfg.opts:
        dowait = True
    if dowait:
        scanstr(nopaths.modules, Cfg.mod, True, wait=True)
        if 'c' in Cfg.opts and "d" not in Cfg.opts:
            csl = Console()
            csl.start()
        while 1:
            time.sleep(1.0)
            waiter()


if __name__ == "__main__":
    wrap(main)
