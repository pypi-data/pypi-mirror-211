#!/usr/bin/env python3


from optparse import OptionParser
from pastro import pastro
import json

def parse_command_line():
  parser = OptionParser()
  parser.add_option("-v", "--verbose", action = "store_true", help = "Be verbose.",default=False)
  parser.add_option("--rankstat-filename", help = "the rankingstatpdf .xml.gz filename")
  parser.add_option("--rates", help="string of dictionary containing merger rates of each category in MPc^-3 months^-1")
  parser.add_option("--rates-inj", help="string of dictionary containing rates of injections each category in MPc^-3 months^-1")
  parser.add_option("--template-database",help="template bank database sqlite file")
  parser.add_option("--weights-dir",help="directory containing template weight files")
  parser.add_option("--V-new", help="string of dictionary containing volumes for each category in MPc^3")
  parser.add_option("--far-threshold",help='FAR threshold to be used for new run')
  parser.add_option("--output", help="name of the output h5 file where the model will be stored")
  (options,arg) = parser.parse_args()

  process_params = dict(options.__dict__)

  return options,process_params
  
options,process_params = parse_command_line()

# this should work
p_astro_model = pastro.p_astro_fgmc(rates=json.loads(options.rates),rates_inj=json.loads(options.rates_inj),V=json.loads(options.V_new),far_th=float(options.far_threshold))
p_astro_model.read_dir(options.weights_dir,options.rankstat_filename,template_bank_database=None)



p_astro_model.to_h5(options.output)
