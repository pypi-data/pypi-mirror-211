{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "getContinuousFeesForFund",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "continuousFees_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "feeManager_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_fees",
          "type": "address[]"
        }
      ],
      "name": "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b506040516106db3803806106db8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b03166106746100676000398061064552506106746000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630efe688014610046578063ace7cc9c146100bc578063f2d638261461013e575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b0316610162565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100a8578181015183820152602001610090565b505050509050019250505060405180910390f35b61013c600480360360408110156100d257600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100fd57600080fd5b82018360208201111561010f57600080fd5b8035906020019184602083028401116401000000008311171561013157600080fd5b509092509050610485565b005b610146610643565b604080516001600160a01b039092168252519081900360200190f35b6060600061016e610643565b90506060816001600160a01b031663a9f3b42f856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b1580156101bf57600080fd5b505afa1580156101d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156101fc57600080fd5b810190808051604051939291908464010000000082111561021c57600080fd5b90830190602082018581111561023157600080fd5b825186602082028301116401000000008211171561024e57600080fd5b82525081516020918201928201910280838360005b8381101561027b578181015183820152602001610263565b50505050905001604052505050905060006060825167ffffffffffffffff811180156102a657600080fd5b506040519080825280602002602001820160405280156102d0578160200160208202803683370190505b50905060005b83518110156103a75760008482815181106102ed57fe5b60200260200101516001600160a01b031663320f0ddd60006040518263ffffffff1660e01b81526004018082600381111561032457fe5b8152602001915050604080518083038186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d604081101561036d57600080fd5b50519050801561039e578380600101945050600183838151811061038d57fe5b911515602092830291909101909101525b506001016102d6565b50816103c85750506040805160008152602081019091529250610480915050565b8167ffffffffffffffff811180156103df57600080fd5b50604051908082528060200260200182016040528015610409578160200160208202803683370190505b5094506000805b84518110156104795782818151811061042557fe5b6020026020010151156104715784818151811061043e57fe5b602002602001015187838151811061045257fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610410565b5050505050505b919050565b826001600160a01b0381166339bf70d161049d610643565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526000602483018190526060604484015260648301819052905160a48084019382900301818387803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b50505050806001600160a01b03166339bf70d1610525610643565b6001868660405160200180806020018281038252848482818152602001925060200280828437600081840152601f19601f82011690508083019250505093505050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105d75781810151838201526020016105bf565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b5050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000009056fea164736f6c634300060c000a",
    "sourceMap": "566:2837:350:-:0;;;654:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;654:82:350;704:25;;;;-1:-1:-1;;;;;;704:25:350;;;-1:-1:-1;;;;;566:2837:350;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630efe688014610046578063ace7cc9c146100bc578063f2d638261461013e575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b0316610162565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100a8578181015183820152602001610090565b505050509050019250505060405180910390f35b61013c600480360360408110156100d257600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100fd57600080fd5b82018360208201111561010f57600080fd5b8035906020019184602083028401116401000000008311171561013157600080fd5b509092509050610485565b005b610146610643565b604080516001600160a01b039092168252519081900360200190f35b6060600061016e610643565b90506060816001600160a01b031663a9f3b42f856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b1580156101bf57600080fd5b505afa1580156101d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156101fc57600080fd5b810190808051604051939291908464010000000082111561021c57600080fd5b90830190602082018581111561023157600080fd5b825186602082028301116401000000008211171561024e57600080fd5b82525081516020918201928201910280838360005b8381101561027b578181015183820152602001610263565b50505050905001604052505050905060006060825167ffffffffffffffff811180156102a657600080fd5b506040519080825280602002602001820160405280156102d0578160200160208202803683370190505b50905060005b83518110156103a75760008482815181106102ed57fe5b60200260200101516001600160a01b031663320f0ddd60006040518263ffffffff1660e01b81526004018082600381111561032457fe5b8152602001915050604080518083038186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d604081101561036d57600080fd5b50519050801561039e578380600101945050600183838151811061038d57fe5b911515602092830291909101909101525b506001016102d6565b50816103c85750506040805160008152602081019091529250610480915050565b8167ffffffffffffffff811180156103df57600080fd5b50604051908082528060200260200182016040528015610409578160200160208202803683370190505b5094506000805b84518110156104795782818151811061042557fe5b6020026020010151156104715784818151811061043e57fe5b602002602001015187838151811061045257fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610410565b5050505050505b919050565b826001600160a01b0381166339bf70d161049d610643565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526000602483018190526060604484015260648301819052905160a48084019382900301818387803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b50505050806001600160a01b03166339bf70d1610525610643565b6001868660405160200180806020018281038252848482818152602001925060200280828437600081840152601f19601f82011690508083019250505093505050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105d75781810151838201526020016105bf565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b5050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000009056fea164736f6c634300060c000a",
    "sourceMap": "566:2837:350:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:1276;;;;;;;;;;;;;;;;-1:-1:-1;972:1276:350;-1:-1:-1;;;;;972:1276:350;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:406;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2705:406:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2705:406:350;;-1:-1:-1;2705:406:350;-1:-1:-1;2705:406:350;:::i;:::-;;3299:102;;;:::i;:::-;;;;-1:-1:-1;;;;;3299:102:350;;;;;;;;;;;;;;972:1276;1080:32;1128:29;1171:15;:13;:15::i;:::-;1128:59;;1198:21;1222:18;-1:-1:-1;;;;;1222:40:350;;1263:17;1222:59;;;;;;;;;;;;;-1:-1:-1;;;;;1222:59:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1222:59:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:59:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:83;;1329:27;1366:38;1418:4;:11;1407:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1407:23:350;;1366:64;;1445:9;1440:273;1460:4;:11;1456:1;:15;1440:273;;;1493:12;1516:4;1521:1;1516:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1511:27:350;;1539:30;1511:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1511:59:350;;-1:-1:-1;1584:119:350;;;;1615:21;;;;;;;1684:4;1654:24;1679:1;1654:27;;;;;;;;:34;;;:27;;;;;;;;;;;:34;1584:119;-1:-1:-1;1473:3:350;;1440:273;;;-1:-1:-1;1773:24:350;1769:78;;-1:-1:-1;;1820:16:350;;;1834:1;1820:16;;;;;;;;;-1:-1:-1;1813:23:350;;-1:-1:-1;;1813:23:350;1769:78;1929:19;1915:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1915:34:350;;1897:52;;1959:27;2001:9;1996:213;2016:4;:11;2012:1;:15;1996:213;;;2052:24;2077:1;2052:27;;;;;;;;;;;;;;2048:151;;;2138:4;2143:1;2138:7;;;;;;;;;;;;;;2099:15;2115:19;2099:36;;;;;;;;-1:-1:-1;;;;;2099:46:350;;;:36;;;;;;;;;;;:46;2163:21;;;;;2048:151;2029:3;;1996:213;;;;2219:22;;;;;972:1276;;;;:::o;2705:406::-;2922:17;-1:-1:-1;;;;;2951:40:350;;;2992:15;:13;:15::i;:::-;2951:64;;;-1:-1:-1;;;;;;2951:64:350;;;;;;;-1:-1:-1;;;;;2951:64:350;;;;;;;3009:1;2951:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:1;2951:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:24;-1:-1:-1;;;;;3025:40:350;;3066:15;:13;:15::i;:::-;3083:1;3097:5;;3086:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:79;;;;;;;;;;;;;-1:-1:-1;;;;;3025:79:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:406;;;;:::o;3299:102::-;3383:11;3299:102;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "74633": [
        {
          "start": 1605,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getContinuousFeesForFund(address)": "0efe6880",
    "getFeeManager()": "f2d63826",
    "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund(address,address[])": "ace7cc9c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getContinuousFeesForFund\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"continuousFees_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_fees\",\"type\":\"address[]\"}],\"name\":\"invokeContinuousFeeHookAndPayoutSharesOutstandingForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"getContinuousFeesForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"continuousFees_\":\"The fees that implement the `Continuous` fee hook\"}},\"getFeeManager()\":{\"returns\":{\"feeManager_\":\"The `FEE_MANAGER` variable value\"}},\"invokeContinuousFeeHookAndPayoutSharesOutstandingForFund(address,address[])\":{\"details\":\"This is just a wrapper to execute two callOnExtension() actions atomically, in sequence. The caller must pass in the fees that they want to run this logic on.\",\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_fees\":\"The fees for which to run these actions\"}}},\"title\":\"UnpermissionedActionsWrapper Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getContinuousFeesForFund(address)\":{\"notice\":\"Gets all fees that implement the `Continuous` fee hook for a fund\"},\"getFeeManager()\":{\"notice\":\"Gets the `FEE_MANAGER` variable\"},\"invokeContinuousFeeHookAndPayoutSharesOutstandingForFund(address,address[])\":{\"notice\":\"Invokes the Continuous fee hook on all specified fees, and then attempts to payout any shares outstanding on those fees\"}},\"notice\":\"Logic related to wrapping actions that do not need access control\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/peripheral/UnpermissionedActionsWrapper.sol\":\"UnpermissionedActionsWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]},\"contracts/persistent/external-positions/IExternalPosition.sol\":{\"keccak256\":\"0x00e6ea9721e5fd1e72215e4c744306097d7f8b1a834cced5d65a17a924f750ad\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ad763df961067233f8631d1cd386a0cf41f8e83e419ace84ec4424214db8efa\",\"dweb:/ipfs/QmNVZCeyA9uqKrhBeCAmTVswWybN9TQAxngVPZUZZ6X4dM\"]},\"contracts/persistent/vault/interfaces/IExternalPositionVault.sol\":{\"keccak256\":\"0x3c047551a9bab8cb84299c4cf17d0435f1d4d0791ecc1d03e0d55cb3450baad6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://133d31469ac5d984f52ebcd919b16af72fae2eb1ed673c3db95a5d69ec8b152d\",\"dweb:/ipfs/Qma1QVesFPKmPUX4bET6eArccuC77euzPAogjp9hmvPZU8\"]},\"contracts/persistent/vault/interfaces/IFreelyTransferableSharesVault.sol\":{\"keccak256\":\"0xe31f063493e6e3a4434eaa5629c0a706b8fa0569aff3f4ef9d62e27a1928cfa0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12b99c370c2bb6a1e1cf8d1a8d7e90538142ebc35d03e94d8449645d9046a0fb\",\"dweb:/ipfs/QmbNwAR6455sbjoxYXaBeHpqUYpwWfWaWyMkpaJaXeBbiU\"]},\"contracts/persistent/vault/interfaces/IMigratableVault.sol\":{\"keccak256\":\"0x8e1355a7efa8ec2172f5c9b532071def392b86ab1e5534d2fc73417a6e9f7238\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://acaff907d8327cbd3060a3ac09f230c7bd78253d0f3f8186f8a5e7a9932b19f6\",\"dweb:/ipfs/QmPGbecKjcFMCg8rVW4M55JENKNH2KqdqATy5bgvnkMGqs\"]},\"contracts/persistent/vault/interfaces/IVaultCore.sol\":{\"keccak256\":\"0x5108a008d8b13bfe8aef70713f30c35f76efa210afd9c0ac8c35dea6e9cf7f80\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a43246a32c866e21d64d1e77e8b178eee45a8183630cd62f2981489ced7ae3cd\",\"dweb:/ipfs/QmdLSfXvUNjsFwu6Dqq7XHhJzmMzAFmDagKPt87rgzoQhr\"]},\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"keccak256\":\"0x5b901b81b3a4ef3d30ef9b4a1fa7fdd6526dfacd66e9971d1f988c2b63334314\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79eba24bcad7e3abddafd20b518add8d5acb1e8de250a0e20050dfbe2f2d8aea\",\"dweb:/ipfs/QmYq9QYKr1UJaVyhkkSEfeiJ68TwGbwrmZsgRTPjVjkpUp\"]},\"contracts/release/core/fund/comptroller/ComptrollerLib.sol\":{\"keccak256\":\"0x2d915156479096f5ab309c2ef0e0834cff299903210b65489c269c220180de64\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6c6415e6c58c2fdf1f955a2f9d7fe2b71d7f0cb351717876f113eadb0fc4579\",\"dweb:/ipfs/QmXGctKECUrriskrK6nfaweV32yhMdg4H2Aq4aYVgR7Nrq\"]},\"contracts/release/core/fund/comptroller/IComptroller.sol\":{\"keccak256\":\"0x51d4a60ba37b5f9198ef1328e08ff45efe0dee76bc067d71ed98f3a221c3636f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8176790c239ae899162a503e6aaffef7576ca89c20864798a22b53096a662b97\",\"dweb:/ipfs/QmYMHifgJExxU97nEGdvFGPtH6kCf1jxSax1o4dUcNPN3L\"]},\"contracts/release/core/fund/vault/IVault.sol\":{\"keccak256\":\"0xeb0b8a4ee1beb7edd02c802ac0901107e34d241b7d9c27b59f26ee736c6d72cd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f10632fd76d06baa94f92a5f1e8cce658dd78e0163213890727ce53c814e1599\",\"dweb:/ipfs/QmaruXmEsUjn8EuEiv8tC1QbA1kK2Vo5LW2w2k5g9eGfDG\"]},\"contracts/release/extensions/IExtension.sol\":{\"keccak256\":\"0x59aaa2ddd32c24271bd4a57e9e1f3426570a78cd56d6d11e63786f36c916e94b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6b476ec92f0691d70a616aa76ecf5fb33725d5fe02ea59a2e5f9b582f662dc70\",\"dweb:/ipfs/QmQZ2xJqWSA4YHveB6RoYuU5gx7DGk7ra6KFp6KvV6Kn1t\"]},\"contracts/release/extensions/fee-manager/FeeManager.sol\":{\"keccak256\":\"0xf3a3e504ca755cafda78f204d1e8005b6808854be0b5b19d17d9971ec49369a9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b82ffb3926983b4c60ddf8cd80b14d4ae548ea9b6f9ebf87f3fe70ffa5a89b9\",\"dweb:/ipfs/QmfJE4i4ZTDWhPwwKQSfjfWYQ62BsDs3FrxavjmLFe3HzB\"]},\"contracts/release/extensions/fee-manager/IFee.sol\":{\"keccak256\":\"0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0\",\"dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2\"]},\"contracts/release/extensions/fee-manager/IFeeManager.sol\":{\"keccak256\":\"0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22\",\"dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod\"]},\"contracts/release/extensions/policy-manager/IPolicyManager.sol\":{\"keccak256\":\"0x1ed5fff925cdfa8808a65aa4c1e45813d87c1f462fc6740be670065ed2f6fd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3cf584b792bc5321930a1c4c7ec22aa23a7ad8e09483694bb6f5968dca0132aa\",\"dweb:/ipfs/QmbNeaENye3NtnG3fRD7QtDSKUm2knBxUDdeuWicCMzcHb\"]},\"contracts/release/extensions/utils/ExtensionBase.sol\":{\"keccak256\":\"0xae68767766f6459bd2cd9dbd39df74f2c2f68f2150885bbce410e4091c807bb1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce4c49522a39f618cc76feb474260fe910949f38e83b5f4518f1f245ba6eb876\",\"dweb:/ipfs/QmZ4wciRpziZAS4HRQy44Sgzm4GM4Wzme9zYnABzR6Cbzo\"]},\"contracts/release/extensions/utils/PermissionedVaultActionMixin.sol\":{\"keccak256\":\"0x77ddb9299d9c5f1538c20ae1543c20ef73db11ad7d9a9b817d26969ab233bb57\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://77812616256a092e0fd77469dcd2a2e098a1cf52686eeb6703a169efa64c27df\",\"dweb:/ipfs/QmbRPZznXSX3aA2VVJNpRqFXdJZebVDcDuY8EnF75Z7GpB\"]},\"contracts/release/infrastructure/gas-relayer/GasRelayRecipientMixin.sol\":{\"keccak256\":\"0x365ff80d9395af25b1fa0956618c372f7957c12b54cd770be592cd3a87ea8609\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5df6293828b09c52c351f354e301f4ecb7587555eebecef8019ae08bcbf2b15f\",\"dweb:/ipfs/QmZ1WkGSaDL5sR86FCUuTXscauHBRkLFJHmJRxwHJCWksp\"]},\"contracts/release/infrastructure/gas-relayer/IGasRelayPaymaster.sol\":{\"keccak256\":\"0xb8b05029aca9eb89ff33c9cc3f97f6d096a5d8185a5ddcdec7cb1a92e4927b01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://94bbfb0701265e422cdadb7fcfc12c9e7f2e2dce26258eea97a08bfba715add0\",\"dweb:/ipfs/QmYbb4Crd7h8wckLZ8d8A5EYxeofSLRWwiCFQew1GzssD2\"]},\"contracts/release/infrastructure/gas-relayer/IGasRelayPaymasterDepositor.sol\":{\"keccak256\":\"0xcbfbcc963988ba5ca56e5e54ea8fc7fcdf4a3fd903a73b139d9bef63c18ef196\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75317e0eb06ba96deb1161ff003e80431aafe2567b8d105ba346716d0e96567b\",\"dweb:/ipfs/QmfEVud7js7jJCthqCZQZjeFMEq8Hfb6iMvkrgTPgGaZb3\"]},\"contracts/release/infrastructure/value-interpreter/IValueInterpreter.sol\":{\"keccak256\":\"0x6838a22b0357f3c5f437c1e54b8f63c7df42b41e3b25d56c5017eb75a857a794\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55cb0682cb809cd2568969b7753a0d2de4385d499ff42be7f0eb55f584366965\",\"dweb:/ipfs/QmderqKaijbqYMGeRUscictNMfo6GuFd6ZrDDmBe3pEazJ\"]},\"contracts/release/interfaces/IGsnForwarder.sol\":{\"keccak256\":\"0xdf725d6209efe494c5f56c1f3d2cc8c64f0785b4b62fa9869bee3d85d8d9e030\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d544190084ae2255099ebed2b31db6b4d057fec64abe0e50a892301f35e77b29\",\"dweb:/ipfs/QmUEdBMTJySZH3QPUC863k21g3LHHVwVVtCyLbUbVF987G\"]},\"contracts/release/interfaces/IGsnPaymaster.sol\":{\"keccak256\":\"0x2b6990c5f1721a994774d431c41563970e9400971df9ba0ff91ead265427272c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://683a1de5aa7e804adbda00d74441b9925872f6e86bdd3c308fc828a1f075a7f4\",\"dweb:/ipfs/QmUVysuPw6X9XDUZGx1hdrRkcTVf9afWVxswRcvXZ7MeCF\"]},\"contracts/release/interfaces/IGsnTypes.sol\":{\"keccak256\":\"0xa5e951206789bd818be825058792b233858a9c58ca25d451b3691917a0ce3714\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://93e4d58106e10cab38a54b4c445b7c169de82502434259098672cec0b4b023a7\",\"dweb:/ipfs/Qmei36zKU4bG6x8Uhnbj1HoDcuw35XsuvPmP6tPtJmkF1C\"]},\"contracts/release/peripheral/UnpermissionedActionsWrapper.sol\":{\"keccak256\":\"0x77758733792b561febec91b86d5512fb37e6e7de3eed56aa9913eb51ea0cc0c8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e1381b126e72f78f5da5d9778b25ffa21c2a9fcf94e44ea68195974a723a823\",\"dweb:/ipfs/QmVE7fBhXUxzCwosTuhPtb8QpbKi6EpW8U6FKfPJ7Udp5G\"]},\"contracts/release/utils/AddressArrayLib.sol\":{\"keccak256\":\"0xd76e220cc754d7c939e54c18d4060f843ca798bccaf9a9dbbd428e38d0f0960f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf0cbaedaec3390b6912ecef7bf62b2e8ec00d7f2b4f0045bab121b812e6f9d6\",\"dweb:/ipfs/QmSd5kxsv5x37TXeRDD91YmVCVA3GVFishdVyC2B9ed9ap\"]},\"contracts/release/utils/FundDeployerOwnerMixin.sol\":{\"keccak256\":\"0xd415583828581051080d575f058643f4975d7048fda0d1765122b260d9d14934\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8191af7a3cd0867af1a401d3cba1294be054c761c2276d21bff7c9296ecc6927\",\"dweb:/ipfs/QmYBSrx1XrcqMNkH2Q6ALuczRv6LgpzVHvFH3DjvCu6SaM\"]},\"contracts/release/utils/beacon-proxy/IBeacon.sol\":{\"keccak256\":\"0x27a585523828a67a1a7c84eadd22b3056e8ffc51ab71992fd97c9ffb4239eeb2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da6aab223fcf84060c63266f743443f5bece3cd1b3131c29db925f2c2671cb39\",\"dweb:/ipfs/Qmd4LvTJHhF6KeRN77ykk5KuV1U7y5ka9gvHChqkg2145V\"]},\"contracts/release/utils/beacon-proxy/IBeaconProxyFactory.sol\":{\"keccak256\":\"0x747e53725f5dbe419893ea447df4f33a3b25d99aae5b724aa1b9778cec1a26bc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://af89093638cb2a72b2760233a4f3e600bed766fa7938f35f0664b86954b313be\",\"dweb:/ipfs/QmXhqBFHrKYHc5DLtyPqEy9FG8F94Wz63tp9Px9P873isG\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_comptrollerProxy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContinuousFeesForFund",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "continuousFees_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "feeManager_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_comptrollerProxy",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_fees",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getContinuousFeesForFund(address)": {
            "params": {
              "_comptrollerProxy": "The ComptrollerProxy of the fund"
            },
            "returns": {
              "continuousFees_": "The fees that implement the `Continuous` fee hook"
            }
          },
          "getFeeManager()": {
            "returns": {
              "feeManager_": "The `FEE_MANAGER` variable value"
            }
          },
          "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund(address,address[])": {
            "details": "This is just a wrapper to execute two callOnExtension() actions atomically, in sequence. The caller must pass in the fees that they want to run this logic on.",
            "params": {
              "_comptrollerProxy": "The ComptrollerProxy of the fund",
              "_fees": "The fees for which to run these actions"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getContinuousFeesForFund(address)": {
            "notice": "Gets all fees that implement the `Continuous` fee hook for a fund"
          },
          "getFeeManager()": {
            "notice": "Gets the `FEE_MANAGER` variable"
          },
          "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund(address,address[])": {
            "notice": "Invokes the Continuous fee hook on all specified fees, and then attempts to payout any shares outstanding on those fees"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/release/peripheral/UnpermissionedActionsWrapper.sol": "UnpermissionedActionsWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/persistent/dispatcher/IDispatcher.sol": {
        "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30",
        "urls": [
          "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0",
          "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/external-positions/IExternalPosition.sol": {
        "keccak256": "0x00e6ea9721e5fd1e72215e4c744306097d7f8b1a834cced5d65a17a924f750ad",
        "urls": [
          "bzz-raw://2ad763df961067233f8631d1cd386a0cf41f8e83e419ace84ec4424214db8efa",
          "dweb:/ipfs/QmNVZCeyA9uqKrhBeCAmTVswWybN9TQAxngVPZUZZ6X4dM"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/vault/interfaces/IExternalPositionVault.sol": {
        "keccak256": "0x3c047551a9bab8cb84299c4cf17d0435f1d4d0791ecc1d03e0d55cb3450baad6",
        "urls": [
          "bzz-raw://133d31469ac5d984f52ebcd919b16af72fae2eb1ed673c3db95a5d69ec8b152d",
          "dweb:/ipfs/Qma1QVesFPKmPUX4bET6eArccuC77euzPAogjp9hmvPZU8"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/vault/interfaces/IFreelyTransferableSharesVault.sol": {
        "keccak256": "0xe31f063493e6e3a4434eaa5629c0a706b8fa0569aff3f4ef9d62e27a1928cfa0",
        "urls": [
          "bzz-raw://12b99c370c2bb6a1e1cf8d1a8d7e90538142ebc35d03e94d8449645d9046a0fb",
          "dweb:/ipfs/QmbNwAR6455sbjoxYXaBeHpqUYpwWfWaWyMkpaJaXeBbiU"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/vault/interfaces/IMigratableVault.sol": {
        "keccak256": "0x8e1355a7efa8ec2172f5c9b532071def392b86ab1e5534d2fc73417a6e9f7238",
        "urls": [
          "bzz-raw://acaff907d8327cbd3060a3ac09f230c7bd78253d0f3f8186f8a5e7a9932b19f6",
          "dweb:/ipfs/QmPGbecKjcFMCg8rVW4M55JENKNH2KqdqATy5bgvnkMGqs"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/vault/interfaces/IVaultCore.sol": {
        "keccak256": "0x5108a008d8b13bfe8aef70713f30c35f76efa210afd9c0ac8c35dea6e9cf7f80",
        "urls": [
          "bzz-raw://a43246a32c866e21d64d1e77e8b178eee45a8183630cd62f2981489ced7ae3cd",
          "dweb:/ipfs/QmdLSfXvUNjsFwu6Dqq7XHhJzmMzAFmDagKPt87rgzoQhr"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/core/fund-deployer/IFundDeployer.sol": {
        "keccak256": "0x5b901b81b3a4ef3d30ef9b4a1fa7fdd6526dfacd66e9971d1f988c2b63334314",
        "urls": [
          "bzz-raw://79eba24bcad7e3abddafd20b518add8d5acb1e8de250a0e20050dfbe2f2d8aea",
          "dweb:/ipfs/QmYq9QYKr1UJaVyhkkSEfeiJ68TwGbwrmZsgRTPjVjkpUp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/core/fund/comptroller/ComptrollerLib.sol": {
        "keccak256": "0x2d915156479096f5ab309c2ef0e0834cff299903210b65489c269c220180de64",
        "urls": [
          "bzz-raw://c6c6415e6c58c2fdf1f955a2f9d7fe2b71d7f0cb351717876f113eadb0fc4579",
          "dweb:/ipfs/QmXGctKECUrriskrK6nfaweV32yhMdg4H2Aq4aYVgR7Nrq"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/core/fund/comptroller/IComptroller.sol": {
        "keccak256": "0x51d4a60ba37b5f9198ef1328e08ff45efe0dee76bc067d71ed98f3a221c3636f",
        "urls": [
          "bzz-raw://8176790c239ae899162a503e6aaffef7576ca89c20864798a22b53096a662b97",
          "dweb:/ipfs/QmYMHifgJExxU97nEGdvFGPtH6kCf1jxSax1o4dUcNPN3L"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/core/fund/vault/IVault.sol": {
        "keccak256": "0xeb0b8a4ee1beb7edd02c802ac0901107e34d241b7d9c27b59f26ee736c6d72cd",
        "urls": [
          "bzz-raw://f10632fd76d06baa94f92a5f1e8cce658dd78e0163213890727ce53c814e1599",
          "dweb:/ipfs/QmaruXmEsUjn8EuEiv8tC1QbA1kK2Vo5LW2w2k5g9eGfDG"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/IExtension.sol": {
        "keccak256": "0x59aaa2ddd32c24271bd4a57e9e1f3426570a78cd56d6d11e63786f36c916e94b",
        "urls": [
          "bzz-raw://6b476ec92f0691d70a616aa76ecf5fb33725d5fe02ea59a2e5f9b582f662dc70",
          "dweb:/ipfs/QmQZ2xJqWSA4YHveB6RoYuU5gx7DGk7ra6KFp6KvV6Kn1t"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/FeeManager.sol": {
        "keccak256": "0xf3a3e504ca755cafda78f204d1e8005b6808854be0b5b19d17d9971ec49369a9",
        "urls": [
          "bzz-raw://3b82ffb3926983b4c60ddf8cd80b14d4ae548ea9b6f9ebf87f3fe70ffa5a89b9",
          "dweb:/ipfs/QmfJE4i4ZTDWhPwwKQSfjfWYQ62BsDs3FrxavjmLFe3HzB"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/IFee.sol": {
        "keccak256": "0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff",
        "urls": [
          "bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0",
          "dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/IFeeManager.sol": {
        "keccak256": "0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51",
        "urls": [
          "bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22",
          "dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/policy-manager/IPolicyManager.sol": {
        "keccak256": "0x1ed5fff925cdfa8808a65aa4c1e45813d87c1f462fc6740be670065ed2f6fd32",
        "urls": [
          "bzz-raw://3cf584b792bc5321930a1c4c7ec22aa23a7ad8e09483694bb6f5968dca0132aa",
          "dweb:/ipfs/QmbNeaENye3NtnG3fRD7QtDSKUm2knBxUDdeuWicCMzcHb"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/utils/ExtensionBase.sol": {
        "keccak256": "0xae68767766f6459bd2cd9dbd39df74f2c2f68f2150885bbce410e4091c807bb1",
        "urls": [
          "bzz-raw://ce4c49522a39f618cc76feb474260fe910949f38e83b5f4518f1f245ba6eb876",
          "dweb:/ipfs/QmZ4wciRpziZAS4HRQy44Sgzm4GM4Wzme9zYnABzR6Cbzo"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/utils/PermissionedVaultActionMixin.sol": {
        "keccak256": "0x77ddb9299d9c5f1538c20ae1543c20ef73db11ad7d9a9b817d26969ab233bb57",
        "urls": [
          "bzz-raw://77812616256a092e0fd77469dcd2a2e098a1cf52686eeb6703a169efa64c27df",
          "dweb:/ipfs/QmbRPZznXSX3aA2VVJNpRqFXdJZebVDcDuY8EnF75Z7GpB"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/gas-relayer/GasRelayRecipientMixin.sol": {
        "keccak256": "0x365ff80d9395af25b1fa0956618c372f7957c12b54cd770be592cd3a87ea8609",
        "urls": [
          "bzz-raw://5df6293828b09c52c351f354e301f4ecb7587555eebecef8019ae08bcbf2b15f",
          "dweb:/ipfs/QmZ1WkGSaDL5sR86FCUuTXscauHBRkLFJHmJRxwHJCWksp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/gas-relayer/IGasRelayPaymaster.sol": {
        "keccak256": "0xb8b05029aca9eb89ff33c9cc3f97f6d096a5d8185a5ddcdec7cb1a92e4927b01",
        "urls": [
          "bzz-raw://94bbfb0701265e422cdadb7fcfc12c9e7f2e2dce26258eea97a08bfba715add0",
          "dweb:/ipfs/QmYbb4Crd7h8wckLZ8d8A5EYxeofSLRWwiCFQew1GzssD2"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/gas-relayer/IGasRelayPaymasterDepositor.sol": {
        "keccak256": "0xcbfbcc963988ba5ca56e5e54ea8fc7fcdf4a3fd903a73b139d9bef63c18ef196",
        "urls": [
          "bzz-raw://75317e0eb06ba96deb1161ff003e80431aafe2567b8d105ba346716d0e96567b",
          "dweb:/ipfs/QmfEVud7js7jJCthqCZQZjeFMEq8Hfb6iMvkrgTPgGaZb3"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/value-interpreter/IValueInterpreter.sol": {
        "keccak256": "0x6838a22b0357f3c5f437c1e54b8f63c7df42b41e3b25d56c5017eb75a857a794",
        "urls": [
          "bzz-raw://55cb0682cb809cd2568969b7753a0d2de4385d499ff42be7f0eb55f584366965",
          "dweb:/ipfs/QmderqKaijbqYMGeRUscictNMfo6GuFd6ZrDDmBe3pEazJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IGsnForwarder.sol": {
        "keccak256": "0xdf725d6209efe494c5f56c1f3d2cc8c64f0785b4b62fa9869bee3d85d8d9e030",
        "urls": [
          "bzz-raw://d544190084ae2255099ebed2b31db6b4d057fec64abe0e50a892301f35e77b29",
          "dweb:/ipfs/QmUEdBMTJySZH3QPUC863k21g3LHHVwVVtCyLbUbVF987G"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IGsnPaymaster.sol": {
        "keccak256": "0x2b6990c5f1721a994774d431c41563970e9400971df9ba0ff91ead265427272c",
        "urls": [
          "bzz-raw://683a1de5aa7e804adbda00d74441b9925872f6e86bdd3c308fc828a1f075a7f4",
          "dweb:/ipfs/QmUVysuPw6X9XDUZGx1hdrRkcTVf9afWVxswRcvXZ7MeCF"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IGsnTypes.sol": {
        "keccak256": "0xa5e951206789bd818be825058792b233858a9c58ca25d451b3691917a0ce3714",
        "urls": [
          "bzz-raw://93e4d58106e10cab38a54b4c445b7c169de82502434259098672cec0b4b023a7",
          "dweb:/ipfs/Qmei36zKU4bG6x8Uhnbj1HoDcuw35XsuvPmP6tPtJmkF1C"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/peripheral/UnpermissionedActionsWrapper.sol": {
        "keccak256": "0x77758733792b561febec91b86d5512fb37e6e7de3eed56aa9913eb51ea0cc0c8",
        "urls": [
          "bzz-raw://2e1381b126e72f78f5da5d9778b25ffa21c2a9fcf94e44ea68195974a723a823",
          "dweb:/ipfs/QmVE7fBhXUxzCwosTuhPtb8QpbKi6EpW8U6FKfPJ7Udp5G"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/AddressArrayLib.sol": {
        "keccak256": "0xd76e220cc754d7c939e54c18d4060f843ca798bccaf9a9dbbd428e38d0f0960f",
        "urls": [
          "bzz-raw://bf0cbaedaec3390b6912ecef7bf62b2e8ec00d7f2b4f0045bab121b812e6f9d6",
          "dweb:/ipfs/QmSd5kxsv5x37TXeRDD91YmVCVA3GVFishdVyC2B9ed9ap"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/FundDeployerOwnerMixin.sol": {
        "keccak256": "0xd415583828581051080d575f058643f4975d7048fda0d1765122b260d9d14934",
        "urls": [
          "bzz-raw://8191af7a3cd0867af1a401d3cba1294be054c761c2276d21bff7c9296ecc6927",
          "dweb:/ipfs/QmYBSrx1XrcqMNkH2Q6ALuczRv6LgpzVHvFH3DjvCu6SaM"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/beacon-proxy/IBeacon.sol": {
        "keccak256": "0x27a585523828a67a1a7c84eadd22b3056e8ffc51ab71992fd97c9ffb4239eeb2",
        "urls": [
          "bzz-raw://da6aab223fcf84060c63266f743443f5bece3cd1b3131c29db925f2c2671cb39",
          "dweb:/ipfs/Qmd4LvTJHhF6KeRN77ykk5KuV1U7y5ka9gvHChqkg2145V"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/beacon-proxy/IBeaconProxyFactory.sol": {
        "keccak256": "0x747e53725f5dbe419893ea447df4f33a3b25d99aae5b724aa1b9778cec1a26bc",
        "urls": [
          "bzz-raw://af89093638cb2a72b2760233a4f3e600bed766fa7938f35f0664b86954b313be",
          "dweb:/ipfs/QmXhqBFHrKYHc5DLtyPqEy9FG8F94Wz63tp9Px9P873isG"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
        "urls": [
          "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
          "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
        "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
        "urls": [
          "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
          "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
        "urls": [
          "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
          "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
        "urls": [
          "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
          "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/release/peripheral/UnpermissionedActionsWrapper.sol",
    "id": 74822,
    "exportedSymbols": {
      "UnpermissionedActionsWrapper": [
        74821
      ]
    },
    "nodeType": "SourceUnit",
    "src": "255:3149:350",
    "nodes": [
      {
        "id": 74628,
        "nodeType": "PragmaDirective",
        "src": "255:23:350",
        "nodes": [],
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 74629,
        "nodeType": "ImportDirective",
        "src": "280:53:350",
        "nodes": [],
        "absolutePath": "contracts/release/core/fund/comptroller/ComptrollerLib.sol",
        "file": "../core/fund/comptroller/ComptrollerLib.sol",
        "scope": 74822,
        "sourceUnit": 16976,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74630,
        "nodeType": "ImportDirective",
        "src": "334:50:350",
        "nodes": [],
        "absolutePath": "contracts/release/extensions/fee-manager/FeeManager.sol",
        "file": "../extensions/fee-manager/FeeManager.sol",
        "scope": 74822,
        "sourceUnit": 38484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74821,
        "nodeType": "ContractDefinition",
        "src": "566:2837:350",
        "nodes": [
          {
            "id": 74633,
            "nodeType": "VariableDeclaration",
            "src": "610:37:350",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "FEE_MANAGER",
            "overrides": null,
            "scope": 74821,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 74632,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "610:7:350",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "id": 74643,
            "nodeType": "FunctionDefinition",
            "src": "654:82:350",
            "nodes": [],
            "body": {
              "id": 74642,
              "nodeType": "Block",
              "src": "694:42:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74638,
                      "name": "FEE_MANAGER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74633,
                      "src": "704:11:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74639,
                      "name": "_feeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74635,
                      "src": "718:11:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "704:25:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74641,
                  "nodeType": "ExpressionStatement",
                  "src": "704:25:350"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "overrides": null,
            "parameters": {
              "id": 74636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74635,
                  "mutability": "mutable",
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74643,
                  "src": "666:19:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "665:21:350"
            },
            "returnParameters": {
              "id": 74637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:350"
            },
            "scope": 74821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74774,
            "nodeType": "FunctionDefinition",
            "src": "972:1276:350",
            "nodes": [],
            "body": {
              "id": 74773,
              "nodeType": "Block",
              "src": "1118:1130:350",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74653,
                      "mutability": "mutable",
                      "name": "feeManagerContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74773,
                      "src": "1128:29:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeManager_$38483",
                        "typeString": "contract FeeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74652,
                        "name": "FeeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 38483,
                        "src": "1128:10:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeManager_$38483",
                          "typeString": "contract FeeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74658,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74655,
                          "name": "getFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74820,
                          "src": "1171:13:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1171:15:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74654,
                      "name": "FeeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38483,
                      "src": "1160:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_FeeManager_$38483_$",
                        "typeString": "type(contract FeeManager)"
                      }
                    },
                    "id": 74657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:27:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeManager_$38483",
                      "typeString": "contract FeeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1128:59:350"
                },
                {
                  "assignments": [
                    74663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74663,
                      "mutability": "mutable",
                      "name": "fees",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74773,
                      "src": "1198:21:350",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 74662,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1198:9:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74668,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 74666,
                        "name": "_comptrollerProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74646,
                        "src": "1263:17:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 74664,
                        "name": "feeManagerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74653,
                        "src": "1222:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeManager_$38483",
                          "typeString": "contract FeeManager"
                        }
                      },
                      "id": 74665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getEnabledFeesForFund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38465,
                      "src": "1222:40:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (address[] memory)"
                      }
                    },
                    "id": 74667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:59:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1198:83:350"
                },
                {
                  "assignments": [
                    74670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74670,
                      "mutability": "mutable",
                      "name": "continuousFeesCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74773,
                      "src": "1329:27:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74671,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:27:350"
                },
                {
                  "assignments": [
                    74676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74676,
                      "mutability": "mutable",
                      "name": "implementsContinuousHook",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74773,
                      "src": "1366:38:350",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74674,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74675,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1366:6:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74683,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 74680,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74663,
                          "src": "1418:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 74681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1418:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1407:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74677,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74678,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1411:6:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 74682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:23:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1366:64:350"
                },
                {
                  "body": {
                    "id": 74719,
                    "nodeType": "Block",
                    "src": "1478:235:350",
                    "statements": [
                      {
                        "assignments": [
                          74695,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74695,
                            "mutability": "mutable",
                            "name": "settles",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 74719,
                            "src": "1493:12:350",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 74694,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1493:4:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 74706,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 74702,
                                  "name": "IFeeManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38594,
                                  "src": "1539:11:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IFeeManager_$38594_$",
                                    "typeString": "type(contract IFeeManager)"
                                  }
                                },
                                "id": 74703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "FeeHook",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38577,
                                "src": "1539:19:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FeeHook_$38577_$",
                                  "typeString": "type(enum IFeeManager.FeeHook)"
                                }
                              },
                              "id": 74704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Continuous",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1539:30:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FeeHook_$38577",
                                "typeString": "enum IFeeManager.FeeHook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FeeHook_$38577",
                                "typeString": "enum IFeeManager.FeeHook"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 74697,
                                    "name": "fees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74663,
                                    "src": "1516:4:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 74699,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 74698,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74685,
                                    "src": "1521:1:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1516:7:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 74696,
                                "name": "IFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38568,
                                "src": "1511:4:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFee_$38568_$",
                                  "typeString": "type(contract IFee)"
                                }
                              },
                              "id": 74700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1511:13:350",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFee_$38568",
                                "typeString": "contract IFee"
                              }
                            },
                            "id": 74701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "settlesOnHook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38545,
                            "src": "1511:27:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_enum$_FeeHook_$38577_$returns$_t_bool_$_t_bool_$",
                              "typeString": "function (enum IFeeManager.FeeHook) view external returns (bool,bool)"
                            }
                          },
                          "id": 74705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1511:59:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1492:78:350"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 74707,
                          "name": "settles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74695,
                          "src": "1588:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 74718,
                        "nodeType": "IfStatement",
                        "src": "1584:119:350",
                        "trueBody": {
                          "id": 74717,
                          "nodeType": "Block",
                          "src": "1597:106:350",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 74709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1615:21:350",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 74708,
                                  "name": "continuousFeesCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74670,
                                  "src": "1615:19:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74710,
                              "nodeType": "ExpressionStatement",
                              "src": "1615:21:350"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 74715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 74711,
                                    "name": "implementsContinuousHook",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74676,
                                    "src": "1654:24:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 74713,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 74712,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74685,
                                    "src": "1679:1:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1654:27:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 74714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1684:4:350",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1654:34:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 74716,
                              "nodeType": "ExpressionStatement",
                              "src": "1654:34:350"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74687,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74685,
                      "src": "1456:1:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 74688,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74663,
                        "src": "1460:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 74689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1460:11:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1456:15:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74720,
                  "initializationExpression": {
                    "assignments": [
                      74685
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74685,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 74720,
                        "src": "1445:9:350",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74684,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1445:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 74686,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1445:9:350"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 74692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1473:3:350",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 74691,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74685,
                        "src": "1473:1:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74693,
                    "nodeType": "ExpressionStatement",
                    "src": "1473:3:350"
                  },
                  "nodeType": "ForStatement",
                  "src": "1440:273:350"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74721,
                      "name": "continuousFeesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74670,
                      "src": "1773:19:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 74722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1796:1:350",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1773:24:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 74731,
                  "nodeType": "IfStatement",
                  "src": "1769:78:350",
                  "trueBody": {
                    "id": 74730,
                    "nodeType": "Block",
                    "src": "1799:48:350",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 74727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1834:1:350",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 74726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1820:13:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1824:7:350",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74725,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "1824:9:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 74728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1820:16:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 74651,
                        "id": 74729,
                        "nodeType": "Return",
                        "src": "1813:23:350"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74732,
                      "name": "continuousFees_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74650,
                      "src": "1897:15:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 74736,
                          "name": "continuousFeesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74670,
                          "src": "1929:19:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 74735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1915:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 74733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1919:7:350",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 74734,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1919:9:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 74737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1915:34:350",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1897:52:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 74739,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:52:350"
                },
                {
                  "assignments": [
                    74741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74741,
                      "mutability": "mutable",
                      "name": "continuousFeesIndex",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74773,
                      "src": "1959:27:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1959:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74742,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1959:27:350"
                },
                {
                  "body": {
                    "id": 74769,
                    "nodeType": "Block",
                    "src": "2034:175:350",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 74753,
                            "name": "implementsContinuousHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74676,
                            "src": "2052:24:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          },
                          "id": 74755,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 74754,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74744,
                            "src": "2077:1:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2052:27:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 74768,
                        "nodeType": "IfStatement",
                        "src": "2048:151:350",
                        "trueBody": {
                          "id": 74767,
                          "nodeType": "Block",
                          "src": "2081:118:350",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 74762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 74756,
                                    "name": "continuousFees_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74650,
                                    "src": "2099:15:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 74758,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 74757,
                                    "name": "continuousFeesIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74741,
                                    "src": "2115:19:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2099:36:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 74759,
                                    "name": "fees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74663,
                                    "src": "2138:4:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 74761,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 74760,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74744,
                                    "src": "2143:1:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2138:7:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2099:46:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74763,
                              "nodeType": "ExpressionStatement",
                              "src": "2099:46:350"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 74765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2163:21:350",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 74764,
                                  "name": "continuousFeesIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74741,
                                  "src": "2163:19:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74766,
                              "nodeType": "ExpressionStatement",
                              "src": "2163:21:350"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74746,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74744,
                      "src": "2012:1:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 74747,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74663,
                        "src": "2016:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 74748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2016:11:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2012:15:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74770,
                  "initializationExpression": {
                    "assignments": [
                      74744
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74744,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 74770,
                        "src": "2001:9:350",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2001:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 74745,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2001:9:350"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 74751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2029:3:350",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 74750,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74744,
                        "src": "2029:1:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74752,
                    "nodeType": "ExpressionStatement",
                    "src": "2029:3:350"
                  },
                  "nodeType": "ForStatement",
                  "src": "1996:213:350"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74771,
                    "name": "continuousFees_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74650,
                    "src": "2226:15:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 74651,
                  "id": 74772,
                  "nodeType": "Return",
                  "src": "2219:22:350"
                }
              ]
            },
            "documentation": {
              "id": 74644,
              "nodeType": "StructuredDocumentation",
              "src": "742:225:350",
              "text": "@notice Gets all fees that implement the `Continuous` fee hook for a fund\n @param _comptrollerProxy The ComptrollerProxy of the fund\n @return continuousFees_ The fees that implement the `Continuous` fee hook"
            },
            "functionSelector": "0efe6880",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContinuousFeesForFund",
            "overrides": null,
            "parameters": {
              "id": 74647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74646,
                  "mutability": "mutable",
                  "name": "_comptrollerProxy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74774,
                  "src": "1006:25:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:27:350"
            },
            "returnParameters": {
              "id": 74651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74650,
                  "mutability": "mutable",
                  "name": "continuousFees_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74774,
                  "src": "1080:32:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74648,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1080:7:350",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74649,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1080:9:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:34:350"
            },
            "scope": 74821,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74811,
            "nodeType": "FunctionDefinition",
            "src": "2705:406:350",
            "nodes": [],
            "body": {
              "id": 74810,
              "nodeType": "Block",
              "src": "2855:256:350",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74784,
                      "mutability": "mutable",
                      "name": "comptrollerProxyContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 74810,
                      "src": "2865:39:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ComptrollerLib_$16975",
                        "typeString": "contract ComptrollerLib"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74783,
                        "name": "ComptrollerLib",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 16975,
                        "src": "2865:14:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerLib_$16975",
                          "typeString": "contract ComptrollerLib"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74788,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 74786,
                        "name": "_comptrollerProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74777,
                        "src": "2922:17:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74785,
                      "name": "ComptrollerLib",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16975,
                      "src": "2907:14:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ComptrollerLib_$16975_$",
                        "typeString": "type(contract ComptrollerLib)"
                      }
                    },
                    "id": 74787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:33:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerLib_$16975",
                      "typeString": "contract ComptrollerLib"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:75:350"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74792,
                          "name": "getFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74820,
                          "src": "2992:13:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2992:15:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 74794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3009:1:350",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 74795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:2:350",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 74789,
                        "name": "comptrollerProxyContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74784,
                        "src": "2951:24:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerLib_$16975",
                          "typeString": "contract ComptrollerLib"
                        }
                      },
                      "id": 74791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callOnExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14567,
                      "src": "2951:40:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 74796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:64:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74797,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:64:350"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74801,
                          "name": "getFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74820,
                          "src": "3066:13:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3066:15:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 74803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:1:350",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 74806,
                            "name": "_fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74780,
                            "src": "3097:5:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 74804,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3086:3:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 74805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3086:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 74807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3086:17:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 74798,
                        "name": "comptrollerProxyContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74784,
                        "src": "3025:24:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerLib_$16975",
                          "typeString": "contract ComptrollerLib"
                        }
                      },
                      "id": 74800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callOnExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14567,
                      "src": "3025:40:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 74808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:79:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74809,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:79:350"
                }
              ]
            },
            "documentation": {
              "id": 74775,
              "nodeType": "StructuredDocumentation",
              "src": "2254:446:350",
              "text": "@notice Invokes the Continuous fee hook on all specified fees, and then attempts to payout\n any shares outstanding on those fees\n @param _comptrollerProxy The ComptrollerProxy of the fund\n @param _fees The fees for which to run these actions\n @dev This is just a wrapper to execute two callOnExtension() actions atomically, in sequence.\n The caller must pass in the fees that they want to run this logic on."
            },
            "functionSelector": "ace7cc9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invokeContinuousFeeHookAndPayoutSharesOutstandingForFund",
            "overrides": null,
            "parameters": {
              "id": 74781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74777,
                  "mutability": "mutable",
                  "name": "_comptrollerProxy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74811,
                  "src": "2780:25:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74780,
                  "mutability": "mutable",
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74811,
                  "src": "2815:24:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2815:7:350",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74779,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2815:9:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2770:75:350"
            },
            "returnParameters": {
              "id": 74782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:0:350"
            },
            "scope": 74821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74820,
            "nodeType": "FunctionDefinition",
            "src": "3299:102:350",
            "nodes": [],
            "body": {
              "id": 74819,
              "nodeType": "Block",
              "src": "3366:35:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74817,
                    "name": "FEE_MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74633,
                    "src": "3383:11:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74816,
                  "id": 74818,
                  "nodeType": "Return",
                  "src": "3376:18:350"
                }
              ]
            },
            "documentation": {
              "id": 74812,
              "nodeType": "StructuredDocumentation",
              "src": "3190:104:350",
              "text": "@notice Gets the `FEE_MANAGER` variable\n @return feeManager_ The `FEE_MANAGER` variable value"
            },
            "functionSelector": "f2d63826",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeeManager",
            "overrides": null,
            "parameters": {
              "id": 74813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3321:2:350"
            },
            "returnParameters": {
              "id": 74816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74815,
                  "mutability": "mutable",
                  "name": "feeManager_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74820,
                  "src": "3345:19:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3344:21:350"
            },
            "scope": 74821,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 74631,
          "nodeType": "StructuredDocumentation",
          "src": "386:180:350",
          "text": "@title UnpermissionedActionsWrapper Contract\n @author Enzyme Council <security@enzyme.finance>\n @notice Logic related to wrapping actions that do not need access control"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74821
        ],
        "name": "UnpermissionedActionsWrapper",
        "scope": 74822
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 350
}