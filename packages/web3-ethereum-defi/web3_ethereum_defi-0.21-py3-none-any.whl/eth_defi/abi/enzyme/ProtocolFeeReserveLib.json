{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MlnTokenBalanceWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nextProtocolFeeReserveLib",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeReserveLibSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mlnValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mlnBurned",
          "type": "uint256"
        }
      ],
      "name": "SharesBoughtBack",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sharesAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mlnValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buyBackSharesViaTrustedVaultProxy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mlnAmountToBurn_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_callData",
          "type": "bytes"
        }
      ],
      "name": "callOnContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDispatcher",
      "outputs": [
        {
          "internalType": "address",
          "name": "dispatcher_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeeReserveLib",
      "outputs": [
        {
          "internalType": "address",
          "name": "protocolFeeReserveLib_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dispatcher",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "uuid_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nextProtocolFeeReserveLib",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeReserveLib",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506107b9806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a90cce4b1161005b578063a90cce4b146100ed578063b3e2546b1461016d578063c75a882a14610191578063ebb3d589146101b75761007d565b806319ab453c1461008257806352d1902d146100aa57806396c45aec146100c4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101bf565b005b6100b2610286565b60408051918252519081900360200190f35b6100b2600480360360608110156100da57600080fd5b50803590602081013590604001356102aa565b6100a86004803603604081101561010357600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561012e57600080fd5b82018360208201111561014057600080fd5b8035906020019184600183028401116401000000008311171561016257600080fd5b509092509050610311565b6101756104c0565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156101a757600080fd5b50356001600160a01b03166104e5565b6101756105df565b60006101c96105df565b6001600160a01b031614610224576040805162461bcd60e51b815260206004820152601f60248201527f696e69743a2050726f787920616c726561647920696e697469616c697a656400604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0383161790557f637d0ba5806b2c873952a12cd23e7cf28669dba115b2ded43df3d2d75c71e8c16102686104c0565b604080516001600160a01b039092168252519081900360200190a150565b7fbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f57633223918190565b60006102b78360026105ee565b9050806102c65750600061030a565b6040805185815260208101859052808201839052905133917f6b63e290827c0f9226da4ffa1b681a509f0764acfc1ab99503a4f55012ec3c19919081900360600190a25b9392505050565b6103196105df565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561035157600080fd5b505afa158015610365573d6000803e3d6000fd5b505050506040513d602081101561037b57600080fd5b50516001600160a01b031633146103c35760405162461bcd60e51b815260040180806020018281038252603081526020018061077d6030913960400191505060405180910390fd5b60006060846001600160a01b03168484604051808383808284376040519201945060009350909150508083038183865af19150503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b50915091508181906104b85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561047d578181015183820152602001610465565b50505050905090810190601f1680156104aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6104ed6105df565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d602081101561054f57600080fd5b50516001600160a01b031633146105975760405162461bcd60e51b815260040180806020018281038252603081526020018061077d6030913960400191505060405180910390fd5b6105a081610655565b604080516001600160a01b038316815290517f637d0ba5806b2c873952a12cd23e7cf28669dba115b2ded43df3d2d75c71e8c19181900360200190a150565b6000546001600160a01b031690565b6000808211610644576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161064d57fe5b049392505050565b7fbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f57633223918160001b816001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b50511461071a5760405162461bcd60e51b815260040180806020018281038252603e81526020018061073f603e913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe5f5f757064617465436f6465416464726573733a205f6e65787450726f746f636f6c466565526573657276654c6962206e6f7420636f6d70617469626c654f6e6c79207468652044697370617463686572206f776e65722063616e2063616c6c20746869732066756e6374696f6ea164736f6c634300060c000a",
    "sourceMap": "596:1930:51:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a90cce4b1161005b578063a90cce4b146100ed578063b3e2546b1461016d578063c75a882a14610191578063ebb3d589146101b75761007d565b806319ab453c1461008257806352d1902d146100aa57806396c45aec146100c4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101bf565b005b6100b2610286565b60408051918252519081900360200190f35b6100b2600480360360608110156100da57600080fd5b50803590602081013590604001356102aa565b6100a86004803603604081101561010357600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561012e57600080fd5b82018360208201111561014057600080fd5b8035906020019184600183028401116401000000008311171561016257600080fd5b509092509050610311565b6101756104c0565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156101a757600080fd5b50356001600160a01b03166104e5565b6101756105df565b60006101c96105df565b6001600160a01b031614610224576040805162461bcd60e51b815260206004820152601f60248201527f696e69743a2050726f787920616c726561647920696e697469616c697a656400604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0383161790557f637d0ba5806b2c873952a12cd23e7cf28669dba115b2ded43df3d2d75c71e8c16102686104c0565b604080516001600160a01b039092168252519081900360200190a150565b7fbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f57633223918190565b60006102b78360026105ee565b9050806102c65750600061030a565b6040805185815260208101859052808201839052905133917f6b63e290827c0f9226da4ffa1b681a509f0764acfc1ab99503a4f55012ec3c19919081900360600190a25b9392505050565b6103196105df565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561035157600080fd5b505afa158015610365573d6000803e3d6000fd5b505050506040513d602081101561037b57600080fd5b50516001600160a01b031633146103c35760405162461bcd60e51b815260040180806020018281038252603081526020018061077d6030913960400191505060405180910390fd5b60006060846001600160a01b03168484604051808383808284376040519201945060009350909150508083038183865af19150503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b50915091508181906104b85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561047d578181015183820152602001610465565b50505050905090810190601f1680156104aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6104ed6105df565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d602081101561054f57600080fd5b50516001600160a01b031633146105975760405162461bcd60e51b815260040180806020018281038252603081526020018061077d6030913960400191505060405180910390fd5b6105a081610655565b604080516001600160a01b038316815290517f637d0ba5806b2c873952a12cd23e7cf28669dba115b2ded43df3d2d75c71e8c19181900360200190a150565b6000546001600160a01b031690565b6000808211610644576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161064d57fe5b049392505050565b7fbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f57633223918160001b816001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b50511461071a5760405162461bcd60e51b815260040180806020018281038252603e81526020018061073f603e913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe5f5f757064617465436f6465416464726573733a205f6e65787450726f746f636f6c466565526573657276654c6962206e6f7420636f6d70617469626c654f6e6c79207468652044697370617463686572206f776e65722063616e2063616c6c20746869732066756e6374696f6ea164736f6c634300060c000a",
    "sourceMap": "596:1930:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:237:54;;;;;;;;;;;;;;;;-1:-1:-1;1235:237:54;-1:-1:-1;;;;;1235:237:54;;:::i;:::-;;1462:108:57;;;:::i;:::-;;;;;;;;;;;;;;;;1600:444:51;;;;;;;;;;;;;;;;-1:-1:-1;1600:444:51;;;;;;;;;;;;:::i;2276:248::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2276:248:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2276:248:51;;-1:-1:-1;2276:248:51;-1:-1:-1;2276:248:51;:::i;2625:224:54:-;;;:::i;:::-;;;;-1:-1:-1;;;;;2625:224:54;;;;;;;;;;;;;;1908:251;;;;;;;;;;;;;;;;-1:-1:-1;1908:251:54;-1:-1:-1;;;;;1908:251:54;;:::i;2345:101::-;;;:::i;1235:237::-;1324:1;1297:15;:13;:15::i;:::-;-1:-1:-1;;;;;1297:29:54;;1289:73;;;;;-1:-1:-1;;;1289:73:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;1373:10;:24;;-1:-1:-1;;;;;;1373:24:54;-1:-1:-1;;;;;1373:24:54;;;;;1413:52;1438:26;:24;:26::i;:::-;1413:52;;;-1:-1:-1;;;;;1413:52:54;;;;;;;;;;;;;;1235:237;:::o;1462:108:57:-;628:66:56;1462:108:57;:::o;1600:444:51:-;1751:24;1806:39;:9;803:1;1806:13;:39::i;:::-;1787:58;-1:-1:-1;1860:21:51;1856:60;;-1:-1:-1;1904:1:51;1897:8;;1856:60;1931:72;;;;;;;;;;;;;;;;;;;;1948:10;;1931:72;;;;;;;;;;1600:444;;;;;;:::o;2276:248::-;934:15:54;:13;:15::i;:::-;-1:-1:-1;;;;;922:37:54;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:39:54;-1:-1:-1;;;;;908:53:54;:10;:53;887:148;;;;-1:-1:-1;;;887:148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2405:12:51::1;2419:23;2446:9;-1:-1:-1::0;;;;;2446:14:51::1;2461:9;;2446:25;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;2446:25:51::1;::::0;-1:-1:-1;2446:25:51;;-1:-1:-1;;2446:25:51;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2404:67;;;;2489:7;2505:10;2481:36;;;;;-1:-1:-1::0;;;2481:36:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:1:54;;2276:248:51::0;;;:::o;2625:224:54:-;2779:13;2773:20;2625:224;:::o;1908:251::-;934:15;:13;:15::i;:::-;-1:-1:-1;;;;;922:37:54;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:39:54;-1:-1:-1;;;;;908:53:54;:10;:53;887:148;;;;-1:-1:-1;;;887:148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:47:::1;2057:26;2037:19;:47::i;:::-;2100:52;::::0;;-1:-1:-1;;;;;2100:52:54;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;1908:251:::0;:::o;2345:101::-;2391:19;2429:10;-1:-1:-1;;;;;2429:10:54;2345:101;:::o;4217:150:442:-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:442:o;896:417:57:-;628:66:56;1103:23:57;;1032:26;-1:-1:-1;;;;;1001:72:57;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1001:74:57;:126;980:235;;;;-1:-1:-1;;;980:235:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:13;1248:49;1234:73::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "buyBackSharesViaTrustedVaultProxy(uint256,uint256,uint256)": "96c45aec",
    "callOnContract(address,bytes)": "a90cce4b",
    "getDispatcher()": "ebb3d589",
    "getProtocolFeeReserveLib()": "b3e2546b",
    "init(address)": "19ab453c",
    "proxiableUUID()": "52d1902d",
    "setProtocolFeeReserveLib(address)": "c75a882a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MlnTokenBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"ProtocolFeeReserveLibSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnBurned\",\"type\":\"uint256\"}],\"name\":\"SharesBoughtBack\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mlnValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyBackSharesViaTrustedVaultProxy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mlnAmountToBurn_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_callData\",\"type\":\"bytes\"}],\"name\":\"callOnContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeReserveLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeReserveLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uuid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"setProtocolFeeReserveLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"buyBackSharesViaTrustedVaultProxy(uint256,uint256,uint256)\":{\"details\":\"Since VaultProxy instances are completely trusted, all the work of calculating and burning the appropriate amount of shares and MLN can be done by the calling VaultProxy. This contract only needs to provide the discounted MLN amount to burn. Though it is currently unused, passing in GAV would allow creating a tiered system of discounts in a new library, for example.\",\"params\":{\"_mlnValue\":\"The MLN-denominated market value of _sharesAmount\",\"_sharesAmount\":\"The amount of shares to buy back\"},\"returns\":{\"mlnAmountToBurn_\":\"The amount of MLN to burn\"}},\"callOnContract(address,bytes)\":{\"params\":{\"_callData\":\"The call data for the call\",\"_contract\":\"The contract to call\"}},\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `dispatcher` variable value\"}},\"getProtocolFeeReserveLib()\":{\"returns\":{\"protocolFeeReserveLib_\":\"The address of the ProtocolFeeReserveLib target\"}},\"init(address)\":{\"details\":\"Serves as a pseudo-constructor\",\"params\":{\"_dispatcher\":\"The Dispatcher contract\"}},\"proxiableUUID()\":{\"returns\":{\"uuid_\":\"The bytes32 hash representing the UUID\"}},\"setProtocolFeeReserveLib(address)\":{\"details\":\"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib\",\"params\":{\"_nextProtocolFeeReserveLib\":\"The address to set as the ProtocolFeeReserveLib\"}}},\"title\":\"ProtocolFeeReserveLib Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyBackSharesViaTrustedVaultProxy(uint256,uint256,uint256)\":{\"notice\":\"Indicates that the calling VaultProxy is buying back shares collected as protocol fee, and returns the amount of MLN that should be burned for the buyback\"},\"callOnContract(address,bytes)\":{\"notice\":\"Makes an arbitrary call with this contract as the sender\"},\"getDispatcher()\":{\"notice\":\"Gets the `dispatcher` variable\"},\"getProtocolFeeReserveLib()\":{\"notice\":\"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"},\"init(address)\":{\"notice\":\"Initializes the ProtocolFeeReserveProxy with core configuration\"},\"proxiableUUID()\":{\"notice\":\"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances\"},\"setProtocolFeeReserveLib(address)\":{\"notice\":\"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"}},\"notice\":\"The proxiable library contract for ProtocolFeeReserveProxy\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveLib.sol\":\"ProtocolFeeReserveLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]},\"contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveLib.sol\":{\"keccak256\":\"0xb3f3bfe041b83d35f15cf17f827ff541e4fc2d9a640d5f5a45eeb54e3d10e9e6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://52d8368cc9065702e835a87e24cb10c9103ce488fe1f4accc617e42485e08539\",\"dweb:/ipfs/QmNo8v6iNcioAicTQ1CsT8XJFih15sx8xD4fmSehewYpvk\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol\":{\"keccak256\":\"0x06b6f8ad9599628e932275a3cdf189197f4ecc6eabedcd19cbcffa8e8e84c92c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460a870f1f55f3afee3d966af8f3a17d29558215d2147822accde9e0cd3ec5f1\",\"dweb:/ipfs/QmPxmw28R9PNzymXrA9Jpo353ZT7DFxVn9vciy5rh9xQ2x\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol\":{\"keccak256\":\"0xf3f0ab84492ace625caae9572cbf3dc25f7a9ccdfee67d38fa8e6c4a2c679a92\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b32274866f86ec7f13cc2349da3136d80a7a5968dfbad2361fd47d6013ed83f\",\"dweb:/ipfs/QmaWGGkaCfzckGfzSACzyL1Jyw2n24iT1oHZw8jTw9pb9Z\"]},\"contracts/persistent/protocol-fee-reserve/interfaces/IProtocolFeeReserve1.sol\":{\"keccak256\":\"0x2728878c423db523bc95189137e8c58d2d7db9f56bbd5c6b1f988c08b551fbab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b0df1d2eb74151265d03ab91a7c341f7beca475dd2f4d669052dbc4ee2c06ac\",\"dweb:/ipfs/QmVx1cgrxQNYfdK1Kn15pcgqf79Uw8bF3U6i7F2HG2rj6G\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol\":{\"keccak256\":\"0x2ae2574c42812a6c7dedc69f37176132d7f55c36ca22672a56b3240a164de7ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1debdcb650ec03dff95ca515206e4850b5fcdb5bb9151cc88019135fee8651f8\",\"dweb:/ipfs/Qmea7QFovEcXGPVSZp8NcAkEzWo94ejUkcwxT7Z9ybWFPe\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol\":{\"keccak256\":\"0xefc9befd638e13010c556c2d691949a3ce51171de8007e2daa536b368ad78868\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fb6d3f317ec683b1e6b31984bbf65d6d727e7b3f9057917b9f3b5c03f90eb7fd\",\"dweb:/ipfs/QmWmQKoMgavRRMbMEGhX5qGvxfpDkLfwEgUEqYsnAxTt6T\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MlnTokenBalanceWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nextProtocolFeeReserveLib",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeReserveLibSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vaultProxy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sharesAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "mlnValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "mlnBurned",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharesBoughtBack",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_sharesAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_mlnValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyBackSharesViaTrustedVaultProxy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mlnAmountToBurn_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_callData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "callOnContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDispatcher",
          "outputs": [
            {
              "internalType": "address",
              "name": "dispatcher_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeeReserveLib",
          "outputs": [
            {
              "internalType": "address",
              "name": "protocolFeeReserveLib_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dispatcher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uuid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nextProtocolFeeReserveLib",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeReserveLib"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyBackSharesViaTrustedVaultProxy(uint256,uint256,uint256)": {
            "details": "Since VaultProxy instances are completely trusted, all the work of calculating and burning the appropriate amount of shares and MLN can be done by the calling VaultProxy. This contract only needs to provide the discounted MLN amount to burn. Though it is currently unused, passing in GAV would allow creating a tiered system of discounts in a new library, for example.",
            "params": {
              "_mlnValue": "The MLN-denominated market value of _sharesAmount",
              "_sharesAmount": "The amount of shares to buy back"
            },
            "returns": {
              "mlnAmountToBurn_": "The amount of MLN to burn"
            }
          },
          "callOnContract(address,bytes)": {
            "params": {
              "_callData": "The call data for the call",
              "_contract": "The contract to call"
            }
          },
          "getDispatcher()": {
            "returns": {
              "dispatcher_": "The `dispatcher` variable value"
            }
          },
          "getProtocolFeeReserveLib()": {
            "returns": {
              "protocolFeeReserveLib_": "The address of the ProtocolFeeReserveLib target"
            }
          },
          "init(address)": {
            "details": "Serves as a pseudo-constructor",
            "params": {
              "_dispatcher": "The Dispatcher contract"
            }
          },
          "proxiableUUID()": {
            "returns": {
              "uuid_": "The bytes32 hash representing the UUID"
            }
          },
          "setProtocolFeeReserveLib(address)": {
            "details": "This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib",
            "params": {
              "_nextProtocolFeeReserveLib": "The address to set as the ProtocolFeeReserveLib"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyBackSharesViaTrustedVaultProxy(uint256,uint256,uint256)": {
            "notice": "Indicates that the calling VaultProxy is buying back shares collected as protocol fee, and returns the amount of MLN that should be burned for the buyback"
          },
          "callOnContract(address,bytes)": {
            "notice": "Makes an arbitrary call with this contract as the sender"
          },
          "getDispatcher()": {
            "notice": "Gets the `dispatcher` variable"
          },
          "getProtocolFeeReserveLib()": {
            "notice": "Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"
          },
          "init(address)": {
            "notice": "Initializes the ProtocolFeeReserveProxy with core configuration"
          },
          "proxiableUUID()": {
            "notice": "Returns a unique bytes32 hash for ProtocolFeeReserveLib instances"
          },
          "setProtocolFeeReserveLib(address)": {
            "notice": "Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveLib.sol": "ProtocolFeeReserveLib"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/persistent/dispatcher/IDispatcher.sol": {
        "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30",
        "urls": [
          "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0",
          "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveLib.sol": {
        "keccak256": "0xb3f3bfe041b83d35f15cf17f827ff541e4fc2d9a640d5f5a45eeb54e3d10e9e6",
        "urls": [
          "bzz-raw://52d8368cc9065702e835a87e24cb10c9103ce488fe1f4accc617e42485e08539",
          "dweb:/ipfs/QmNo8v6iNcioAicTQ1CsT8XJFih15sx8xD4fmSehewYpvk"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol": {
        "keccak256": "0x06b6f8ad9599628e932275a3cdf189197f4ecc6eabedcd19cbcffa8e8e84c92c",
        "urls": [
          "bzz-raw://460a870f1f55f3afee3d966af8f3a17d29558215d2147822accde9e0cd3ec5f1",
          "dweb:/ipfs/QmPxmw28R9PNzymXrA9Jpo353ZT7DFxVn9vciy5rh9xQ2x"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol": {
        "keccak256": "0xf3f0ab84492ace625caae9572cbf3dc25f7a9ccdfee67d38fa8e6c4a2c679a92",
        "urls": [
          "bzz-raw://8b32274866f86ec7f13cc2349da3136d80a7a5968dfbad2361fd47d6013ed83f",
          "dweb:/ipfs/QmaWGGkaCfzckGfzSACzyL1Jyw2n24iT1oHZw8jTw9pb9Z"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/interfaces/IProtocolFeeReserve1.sol": {
        "keccak256": "0x2728878c423db523bc95189137e8c58d2d7db9f56bbd5c6b1f988c08b551fbab",
        "urls": [
          "bzz-raw://3b0df1d2eb74151265d03ab91a7c341f7beca475dd2f4d669052dbc4ee2c06ac",
          "dweb:/ipfs/QmVx1cgrxQNYfdK1Kn15pcgqf79Uw8bF3U6i7F2HG2rj6G"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol": {
        "keccak256": "0x2ae2574c42812a6c7dedc69f37176132d7f55c36ca22672a56b3240a164de7ea",
        "urls": [
          "bzz-raw://1debdcb650ec03dff95ca515206e4850b5fcdb5bb9151cc88019135fee8651f8",
          "dweb:/ipfs/Qmea7QFovEcXGPVSZp8NcAkEzWo94ejUkcwxT7Z9ybWFPe"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol": {
        "keccak256": "0xefc9befd638e13010c556c2d691949a3ce51171de8007e2daa536b368ad78868",
        "urls": [
          "bzz-raw://fb6d3f317ec683b1e6b31984bbf65d6d727e7b3f9057917b9f3b5c03f90eb7fd",
          "dweb:/ipfs/QmWmQKoMgavRRMbMEGhX5qGvxfpDkLfwEgUEqYsnAxTt6T"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveLib.sol",
    "id": 7163,
    "exportedSymbols": {
      "ProtocolFeeReserveLib": [
        7162
      ]
    },
    "nodeType": "SourceUnit",
    "src": "255:2272:51",
    "nodes": [
      {
        "id": 7081,
        "nodeType": "PragmaDirective",
        "src": "255:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 7082,
        "nodeType": "ImportDirective",
        "src": "280:51:51",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "scope": 7163,
        "sourceUnit": 104041,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7083,
        "nodeType": "ImportDirective",
        "src": "332:48:51",
        "nodes": [],
        "absolutePath": "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol",
        "file": "./bases/ProtocolFeeReserveLibBase1.sol",
        "scope": 7163,
        "sourceUnit": 7265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7084,
        "nodeType": "ImportDirective",
        "src": "381:47:51",
        "nodes": [],
        "absolutePath": "contracts/persistent/protocol-fee-reserve/interfaces/IProtocolFeeReserve1.sol",
        "file": "./interfaces/IProtocolFeeReserve1.sol",
        "scope": 7163,
        "sourceUnit": 7374,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7162,
        "nodeType": "ContractDefinition",
        "src": "596:1930:51",
        "nodes": [
          {
            "id": 7092,
            "nodeType": "UsingForDirective",
            "src": "685:27:51",
            "nodes": [],
            "libraryName": {
              "contractScope": null,
              "id": 7090,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 104040,
              "src": "691:8:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$104040",
                "typeString": "library SafeMath"
              }
            },
            "typeName": {
              "id": 7091,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 7095,
            "nodeType": "VariableDeclaration",
            "src": "751:53:51",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "BUYBACK_DISCOUNT_DIVISOR",
            "overrides": null,
            "scope": 7162,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7093,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "751:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 7094,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "803:1:51",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 7133,
            "nodeType": "FunctionDefinition",
            "src": "1600:444:51",
            "nodes": [],
            "body": {
              "id": 7132,
              "nodeType": "Block",
              "src": "1777:267:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7108,
                      "name": "mlnAmountToBurn_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7106,
                      "src": "1787:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7111,
                          "name": "BUYBACK_DISCOUNT_DIVISOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7095,
                          "src": "1820:24:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7109,
                          "name": "_mlnValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7100,
                          "src": "1806:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 103945,
                        "src": "1806:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1806:39:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1787:58:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7114,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:58:51"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7115,
                      "name": "mlnAmountToBurn_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7106,
                      "src": "1860:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1880:1:51",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1860:21:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7121,
                  "nodeType": "IfStatement",
                  "src": "1856:60:51",
                  "trueBody": {
                    "id": 7120,
                    "nodeType": "Block",
                    "src": "1883:33:51",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1904:1:51",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 7107,
                        "id": 7119,
                        "nodeType": "Return",
                        "src": "1897:8:51"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1948:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1948:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7125,
                        "name": "_sharesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7098,
                        "src": "1960:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7126,
                        "name": "_mlnValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7100,
                        "src": "1975:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7127,
                        "name": "mlnAmountToBurn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7106,
                        "src": "1986:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7122,
                      "name": "SharesBoughtBack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7263,
                      "src": "1931:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:72:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7129,
                  "nodeType": "EmitStatement",
                  "src": "1926:77:51"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7130,
                    "name": "mlnAmountToBurn_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7106,
                    "src": "2021:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7107,
                  "id": 7131,
                  "nodeType": "Return",
                  "src": "2014:23:51"
                }
              ]
            },
            "baseFunctions": [
              7372
            ],
            "documentation": {
              "id": 7096,
              "nodeType": "StructuredDocumentation",
              "src": "811:784:51",
              "text": "@notice Indicates that the calling VaultProxy is buying back shares collected as protocol fee,\n and returns the amount of MLN that should be burned for the buyback\n @param _sharesAmount The amount of shares to buy back\n @param _mlnValue The MLN-denominated market value of _sharesAmount\n @return mlnAmountToBurn_ The amount of MLN to burn\n @dev Since VaultProxy instances are completely trusted, all the work of calculating and\n burning the appropriate amount of shares and MLN can be done by the calling VaultProxy.\n This contract only needs to provide the discounted MLN amount to burn.\n Though it is currently unused, passing in GAV would allow creating a tiered system of\n discounts in a new library, for example."
            },
            "functionSelector": "96c45aec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyBackSharesViaTrustedVaultProxy",
            "overrides": {
              "id": 7104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1733:8:51"
            },
            "parameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7098,
                  "mutability": "mutable",
                  "name": "_sharesAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7133,
                  "src": "1652:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7100,
                  "mutability": "mutable",
                  "name": "_mlnValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7133,
                  "src": "1683:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7102,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7133,
                  "src": "1710:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1642:81:51"
            },
            "returnParameters": {
              "id": 7107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7106,
                  "mutability": "mutable",
                  "name": "mlnAmountToBurn_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7133,
                  "src": "1751:24:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1750:26:51"
            },
            "scope": 7162,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7161,
            "nodeType": "FunctionDefinition",
            "src": "2276:248:51",
            "nodes": [],
            "body": {
              "id": 7160,
              "nodeType": "Block",
              "src": "2394:130:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7144,
                    7146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7144,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7160,
                      "src": "2405:12:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7143,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2405:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7146,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7160,
                      "src": "2419:23:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7145,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2419:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7151,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7149,
                        "name": "_callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7138,
                        "src": "2461:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7147,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7136,
                        "src": "2446:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 7148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2446:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 7150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:25:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2404:67:51"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7153,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7144,
                        "src": "2489:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7156,
                            "name": "returnData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7146,
                            "src": "2505:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 7155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2498:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 7154,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "2498:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2498:18:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2481:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:36:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7159,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:36:51"
                }
              ]
            },
            "documentation": {
              "id": 7134,
              "nodeType": "StructuredDocumentation",
              "src": "2105:166:51",
              "text": "@notice Makes an arbitrary call with this contract as the sender\n @param _contract The contract to call\n @param _callData The call data for the call"
            },
            "functionSelector": "a90cce4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7140,
                  "name": "onlyDispatcherOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7294,
                  "src": "2370:19:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2370:19:51"
              }
            ],
            "name": "callOnContract",
            "overrides": null,
            "parameters": {
              "id": 7139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7136,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7161,
                  "src": "2300:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7138,
                  "mutability": "mutable",
                  "name": "_callData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7161,
                  "src": "2319:24:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2299:45:51"
            },
            "returnParameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:0:51"
            },
            "scope": 7162,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7086,
              "name": "IProtocolFeeReserve1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7373,
              "src": "630:20:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IProtocolFeeReserve1_$7373",
                "typeString": "contract IProtocolFeeReserve1"
              }
            },
            "id": 7087,
            "nodeType": "InheritanceSpecifier",
            "src": "630:20:51"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7088,
              "name": "ProtocolFeeReserveLibBase1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7264,
              "src": "652:26:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProtocolFeeReserveLibBase1_$7264",
                "typeString": "contract ProtocolFeeReserveLibBase1"
              }
            },
            "id": 7089,
            "nodeType": "InheritanceSpecifier",
            "src": "652:26:51"
          }
        ],
        "contractDependencies": [
          7264,
          7358,
          7373,
          7383,
          7421
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7085,
          "nodeType": "StructuredDocumentation",
          "src": "430:166:51",
          "text": "@title ProtocolFeeReserveLib Contract\n @author Enzyme Council <security@enzyme.finance>\n @notice The proxiable library contract for ProtocolFeeReserveProxy"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7162,
          7264,
          7358,
          7421,
          7383,
          7373
        ],
        "name": "ProtocolFeeReserveLib",
        "scope": 7163
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 51
}