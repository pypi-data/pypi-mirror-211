{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesQuantity",
          "type": "uint256"
        }
      ],
      "name": "Settled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "activateForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "addFundSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "feeManager_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRecipientForFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "payout",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "enum IFeeManager.FeeHook",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_settlementData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "settle",
      "outputs": [
        {
          "internalType": "enum IFeeManager.SettlementType",
          "name": "settlementType_",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "payer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sharesDue_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IFeeManager.FeeHook",
          "name": "_hook",
          "type": "uint8"
        }
      ],
      "name": "settlesOnHook",
      "outputs": [
        {
          "internalType": "bool",
          "name": "settles_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "usesGav_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IFeeManager.FeeHook",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IFeeManager.FeeHook",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "updatesOnHook",
      "outputs": [
        {
          "internalType": "bool",
          "name": "updates_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "usesGav_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161067f38038061067f8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661061361006c600039806103dc528061058b52506106136000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806341892d7e1161006657806341892d7e1461021657806362780b3c146102e1578063b78b481314610323578063e337a91f14610365578063f2d638261461038557610093565b80630f5f6b4f14610098578063233faf5f1461011a5780633146d058146101ad578063320f0ddd146101db575b600080fd5b610118600480360360408110156100ae57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100d957600080fd5b8201836020820111156100eb57600080fd5b8035906020019184600183028401116401000000008311171561010d57600080fd5b50909250905061038d565b005b610118600480360360a081101561013057600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561016e57600080fd5b82018360208201111561018057600080fd5b803590602001918460018302840111640100000000831117156101a257600080fd5b919350915035610392565b610118600480360360408110156101c357600080fd5b506001600160a01b038135811691602001351661039a565b6101fb600480360360208110156101f157600080fd5b503560ff1661039e565b60408051921515835290151560208301528051918290030190f35b6102a9600480360360a081101561022c57600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b9193509150356103cd565b604051808460058111156102b957fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b610307600480360360208110156102f757600080fd5b50356001600160a01b0316610573565b604080516001600160a01b039092168252519081900360200190f35b6103516004803603604081101561033957600080fd5b506001600160a01b0381358116916020013516610579565b604080519115158252519081900360200190f35b6101fb6004803603602081101561037b57600080fd5b503560ff16610581565b610307610589565b505050565b505050505050565b5050565b60008060028360038111156103af57fe5b14156103c157506001905060006103c8565b5060009050805b915091565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104385760405162461bcd60e51b81526004018080602001828103825260258152602001806105e26025913960400191505060405180910390fd5b6000886001600160a01b03166370a0823160016040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d60208110156104b257600080fd5b50519050620f424081106104d157600080600093509350935050610567565b80620f424003915061051887878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ad92505050565b50506040805184815290519194506001600160a01b0380861692908d16917f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68919081900360200190a360019350505b96509650969350505050565b50600190565b600092915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b60008060008380602001905160608110156105c757600080fd5b50805160208201516040909201519096919550935091505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6ca164736f6c634300060c000a",
    "sourceMap": "563:2745:150:-:0;;;888:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;888:63:150;705:25:154;;;;-1:-1:-1;;;;;;705:25:154;;;-1:-1:-1;;;;;563:2745:150;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806341892d7e1161006657806341892d7e1461021657806362780b3c146102e1578063b78b481314610323578063e337a91f14610365578063f2d638261461038557610093565b80630f5f6b4f14610098578063233faf5f1461011a5780633146d058146101ad578063320f0ddd146101db575b600080fd5b610118600480360360408110156100ae57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100d957600080fd5b8201836020820111156100eb57600080fd5b8035906020019184600183028401116401000000008311171561010d57600080fd5b50909250905061038d565b005b610118600480360360a081101561013057600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561016e57600080fd5b82018360208201111561018057600080fd5b803590602001918460018302840111640100000000831117156101a257600080fd5b919350915035610392565b610118600480360360408110156101c357600080fd5b506001600160a01b038135811691602001351661039a565b6101fb600480360360208110156101f157600080fd5b503560ff1661039e565b60408051921515835290151560208301528051918290030190f35b6102a9600480360360a081101561022c57600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b9193509150356103cd565b604051808460058111156102b957fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b610307600480360360208110156102f757600080fd5b50356001600160a01b0316610573565b604080516001600160a01b039092168252519081900360200190f35b6103516004803603604081101561033957600080fd5b506001600160a01b0381358116916020013516610579565b604080519115158252519081900360200190f35b6101fb6004803603602081101561037b57600080fd5b503560ff16610581565b610307610589565b505050565b505050505050565b5050565b60008060028360038111156103af57fe5b14156103c157506001905060006103c8565b5060009050805b915091565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104385760405162461bcd60e51b81526004018080602001828103825260258152602001806105e26025913960400191505060405180910390fd5b6000886001600160a01b03166370a0823160016040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d60208110156104b257600080fd5b50519050620f424081106104d157600080600093509350935050610567565b80620f424003915061051887878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ad92505050565b50506040805184815290519194506001600160a01b0380861692908d16917f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68919081900360200190a360019350505b96509650969350505050565b50600190565b600092915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b60008060008380602001905160608110156105c757600080fd5b50805160208201516040909201519096919550935091505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6ca164736f6c634300060c000a",
    "sourceMap": "563:2745:150:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1078:78;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1078:78:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1078:78:150;;-1:-1:-1;1078:78:150;-1:-1:-1;1078:78:150;:::i;:::-;;1755:175:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1755:175:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1755:175:154;-1:-1:-1;1755:175:154;;:::i;862:92::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;862:92:154;;;;;;;;;;:::i;3017:289:150:-;;;;;;;;;;;;;;;;-1:-1:-1;3017:289:150;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1846:907;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:907:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1846:907:150;-1:-1:-1;1846:907:150;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:907:150;;;;;;;;;;;;;;;;;;;;;;1266:187;;;;;;;;;;;;;;;;-1:-1:-1;1266:187:150;-1:-1:-1;;;;;1266:187:150;;:::i;:::-;;;;-1:-1:-1;;;;;1266:187:150;;;;;;;;;;;;;;1490:104:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1490:104:154;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2232:196;;;;;;;;;;;;;;;;-1:-1:-1;2232:196:154;;;;:::i;3806:104::-;;;:::i;1078:78:150:-;;;;:::o;1755:175:154:-;;;;;;;:::o;862:92::-;;;:::o;3017:289:150:-;3131:13;;3188:33;3179:5;:42;;;;;;;;;3175:93;;;-1:-1:-1;3245:4:150;;-1:-1:-1;3251:5:150;3237:20;;3175:93;-1:-1:-1;3286:5:150;;-1:-1:-1;3286:5:150;3017:289;;;;:::o;1846:907::-;2105:42;;;564:10:154;-1:-1:-1;;;;;578:11:154;564:25;;556:75;;;;-1:-1:-1;;;556:75:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2232:20:150::1;2261:11;-1:-1:-1::0;;;;;2255:28:150::1;;879:1;2255:51;;;;;;;;;;;;;-1:-1:-1::0;;;;;2255:51:150::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2255:51:150;;-1:-1:-1;754:3:150::1;2320:33:::0;::::1;2316:119;;2377:31;2418:1:::0;2422::::1;2369:55;;;;;;;;;2316:119;2522:12;754:3;2502:32;2489:45;;2559:52;2595:15;;2559:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2559:35:150::1;::::0;-1:-1:-1;;;2559:52:150:i:1;:::-;-1:-1:-1::0;;2627:46:150::1;::::0;;;;;;;2544:67;;-1:-1:-1;;;;;;2627:46:150;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;2692:33;2684:62;;;641:1:154;1846:907:150::0;;;;;;;;;;:::o;1266:187::-;-1:-1:-1;879:1:150;;1266:187::o;1490:104:154:-;1559:4;1490:104;;;;:::o;2232:196::-;2356:13;;2232:196;;;:::o;3806:104::-;3892:11;3806:104;:::o;3300:318::-;3435:14;3463:25;3502:21;3566:15;3555:56;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;-1:-1:-1;3300:318:154;-1:-1:-1;;3300:318:154:o",
    "linkReferences": {},
    "immutableReferences": {
      "40426": [
        {
          "start": 988,
          "length": 32
        },
        {
          "start": 1419,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "activateForFund(address,address)": "3146d058",
    "addFundSettings(address,bytes)": "0f5f6b4f",
    "getFeeManager()": "f2d63826",
    "getRecipientForFund(address)": "62780b3c",
    "payout(address,address)": "b78b4813",
    "settle(address,address,uint8,bytes,uint256)": "41892d7e",
    "settlesOnHook(uint8)": "320f0ddd",
    "update(address,address,uint8,bytes,uint256)": "233faf5f",
    "updatesOnHook(uint8)": "e337a91f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesQuantity\",\"type\":\"uint256\"}],\"name\":\"Settled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_settlementData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesDue_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"_hook\",\"type\":\"uint8\"}],\"name\":\"settlesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"settles_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"updatesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"updates_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address,address)\":{\"details\":\"Unimplemented by default, may be overrode.\"},\"addFundSettings(address,bytes)\":{\"details\":\"Unnecessary for this fee\"},\"getFeeManager()\":{\"returns\":{\"feeManager_\":\"The `FEE_MANAGER` variable value\"}},\"getRecipientForFund(address)\":{\"returns\":{\"recipient_\":\"The recipient\"}},\"payout(address,address)\":{\"details\":\"Returns false by default, can be overridden by fee\"},\"settle(address,address,uint8,bytes,uint256)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settlementData\":\"Encoded args to use in calculating the settlement\",\"_vaultProxy\":\"The VaultProxy of the fund\"},\"returns\":{\"payer_\":\"The payer of shares due\",\"settlementType_\":\"The type of settlement\",\"sharesDue_\":\"The amount of shares due\"}},\"settlesOnHook(uint8)\":{\"params\":{\"_hook\":\"The FeeHook\"},\"returns\":{\"settles_\":\"True if the fee settles on the _hook\",\"usesGav_\":\"True if the fee uses GAV during settle() for the _hook\"}},\"update(address,address,uint8,bytes,uint256)\":{\"details\":\"Unimplemented by default, can be overridden by fee\"},\"updatesOnHook(uint8)\":{\"details\":\"Returns false values by default, can be overridden by fee\",\"returns\":{\"updates_\":\"True if the fee updates on the _hook\",\"usesGav_\":\"True if the fee uses GAV during update() for the _hook\"}}},\"title\":\"MinSharesSupplyFee Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address,address)\":{\"notice\":\"Allows Fee to run logic during fund activation\"},\"addFundSettings(address,bytes)\":{\"notice\":\"Add the initial fee settings for a fund\"},\"getFeeManager()\":{\"notice\":\"Gets the `FEE_MANAGER` variable\"},\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"},\"payout(address,address)\":{\"notice\":\"Runs payout logic for a fee that utilizes shares outstanding as its settlement type\"},\"settle(address,address,uint8,bytes,uint256)\":{\"notice\":\"Settles the fee\"},\"settlesOnHook(uint8)\":{\"notice\":\"Gets whether the fee settles and requires GAV on a particular hook\"},\"update(address,address,uint8,bytes,uint256)\":{\"notice\":\"Update fee state after all settlement has occurred during a given fee hook\"},\"updatesOnHook(uint8)\":{\"notice\":\"Gets whether the fee updates and requires GAV on a particular hook\"}},\"notice\":\"Charges and permanently locks a one-time fee to ensure a minimum shares supply at all times\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol\":\"MinSharesSupplyFee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/IFee.sol\":{\"keccak256\":\"0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0\",\"dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2\"]},\"contracts/release/extensions/fee-manager/IFeeManager.sol\":{\"keccak256\":\"0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22\",\"dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod\"]},\"contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol\":{\"keccak256\":\"0x9af095d953addea2d9b6bf5ef987a1b734b31c32b2836cbb9add488da6eace1b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6e109deb1b547f0cda18330918baa92e200ccd4acee164d89927ee658fd55d0\",\"dweb:/ipfs/QmW8L1W1dQFQ4MEdXyScQM4duzyZvNwtTwMFqpQWVSDEp5\"]},\"contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol\":{\"keccak256\":\"0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767\",\"dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "comptrollerProxy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sharesQuantity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Settled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activateForFund"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFundSettings"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "feeManager_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipientForFund",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payout",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_comptrollerProxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_vaultProxy",
              "type": "address"
            },
            {
              "internalType": "enum IFeeManager.FeeHook",
              "name": "",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "_settlementData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settle",
          "outputs": [
            {
              "internalType": "enum IFeeManager.SettlementType",
              "name": "settlementType_",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "payer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sharesDue_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IFeeManager.FeeHook",
              "name": "_hook",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "settlesOnHook",
          "outputs": [
            {
              "internalType": "bool",
              "name": "settles_",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "usesGav_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IFeeManager.FeeHook",
              "name": "",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "update"
        },
        {
          "inputs": [
            {
              "internalType": "enum IFeeManager.FeeHook",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updatesOnHook",
          "outputs": [
            {
              "internalType": "bool",
              "name": "updates_",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "usesGav_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activateForFund(address,address)": {
            "details": "Unimplemented by default, may be overrode."
          },
          "addFundSettings(address,bytes)": {
            "details": "Unnecessary for this fee"
          },
          "getFeeManager()": {
            "returns": {
              "feeManager_": "The `FEE_MANAGER` variable value"
            }
          },
          "getRecipientForFund(address)": {
            "returns": {
              "recipient_": "The recipient"
            }
          },
          "payout(address,address)": {
            "details": "Returns false by default, can be overridden by fee"
          },
          "settle(address,address,uint8,bytes,uint256)": {
            "params": {
              "_comptrollerProxy": "The ComptrollerProxy of the fund",
              "_settlementData": "Encoded args to use in calculating the settlement",
              "_vaultProxy": "The VaultProxy of the fund"
            },
            "returns": {
              "payer_": "The payer of shares due",
              "settlementType_": "The type of settlement",
              "sharesDue_": "The amount of shares due"
            }
          },
          "settlesOnHook(uint8)": {
            "params": {
              "_hook": "The FeeHook"
            },
            "returns": {
              "settles_": "True if the fee settles on the _hook",
              "usesGav_": "True if the fee uses GAV during settle() for the _hook"
            }
          },
          "update(address,address,uint8,bytes,uint256)": {
            "details": "Unimplemented by default, can be overridden by fee"
          },
          "updatesOnHook(uint8)": {
            "details": "Returns false values by default, can be overridden by fee",
            "returns": {
              "updates_": "True if the fee updates on the _hook",
              "usesGav_": "True if the fee uses GAV during update() for the _hook"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activateForFund(address,address)": {
            "notice": "Allows Fee to run logic during fund activation"
          },
          "addFundSettings(address,bytes)": {
            "notice": "Add the initial fee settings for a fund"
          },
          "getFeeManager()": {
            "notice": "Gets the `FEE_MANAGER` variable"
          },
          "getRecipientForFund(address)": {
            "notice": "Gets the recipient of the fee for a given fund"
          },
          "payout(address,address)": {
            "notice": "Runs payout logic for a fee that utilizes shares outstanding as its settlement type"
          },
          "settle(address,address,uint8,bytes,uint256)": {
            "notice": "Settles the fee"
          },
          "settlesOnHook(uint8)": {
            "notice": "Gets whether the fee settles and requires GAV on a particular hook"
          },
          "update(address,address,uint8,bytes,uint256)": {
            "notice": "Update fee state after all settlement has occurred during a given fee hook"
          },
          "updatesOnHook(uint8)": {
            "notice": "Gets whether the fee updates and requires GAV on a particular hook"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol": "MinSharesSupplyFee"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/release/extensions/fee-manager/IFee.sol": {
        "keccak256": "0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff",
        "urls": [
          "bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0",
          "dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/IFeeManager.sol": {
        "keccak256": "0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51",
        "urls": [
          "bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22",
          "dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol": {
        "keccak256": "0x9af095d953addea2d9b6bf5ef987a1b734b31c32b2836cbb9add488da6eace1b",
        "urls": [
          "bzz-raw://c6e109deb1b547f0cda18330918baa92e200ccd4acee164d89927ee658fd55d0",
          "dweb:/ipfs/QmW8L1W1dQFQ4MEdXyScQM4duzyZvNwtTwMFqpQWVSDEp5"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol": {
        "keccak256": "0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14",
        "urls": [
          "bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767",
          "dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
        "urls": [
          "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
          "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
        "urls": [
          "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
          "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol",
    "id": 39331,
    "exportedSymbols": {
      "MinSharesSupplyFee": [
        39330
      ]
    },
    "nodeType": "SourceUnit",
    "src": "255:3054:150",
    "nodes": [
      {
        "id": 39175,
        "nodeType": "PragmaDirective",
        "src": "255:23:150",
        "nodes": [],
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 39176,
        "nodeType": "ImportDirective",
        "src": "280:55:150",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "scope": 39331,
        "sourceUnit": 104904,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39177,
        "nodeType": "ImportDirective",
        "src": "336:29:150",
        "nodes": [],
        "absolutePath": "contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol",
        "file": "./utils/FeeBase.sol",
        "scope": 39331,
        "sourceUnit": 40603,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39330,
        "nodeType": "ContractDefinition",
        "src": "563:2745:150",
        "nodes": [
          {
            "id": 39188,
            "nodeType": "EventDefinition",
            "src": "608:95:150",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "Settled",
            "parameters": {
              "id": 39187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "comptrollerProxy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39188,
                  "src": "622:32:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39184,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39188,
                  "src": "656:21:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sharesQuantity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39188,
                  "src": "679:22:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:81:150"
            }
          },
          {
            "id": 39191,
            "nodeType": "VariableDeclaration",
            "src": "709:48:150",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MIN_SHARES_SUPPLY",
            "overrides": null,
            "scope": 39330,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "709:7:150",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "316536",
              "id": 39190,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "754:3:150",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1e6"
            },
            "visibility": "private"
          },
          {
            "id": 39197,
            "nodeType": "VariableDeclaration",
            "src": "822:59:150",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "LOCKED_SHARES_ADDRESS",
            "overrides": null,
            "scope": 39330,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39192,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "822:7:150",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 39195,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "879:1:150",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 39194,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "871:7:150",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39193,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:7:150",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 39196,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "871:10:150",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39206,
            "nodeType": "FunctionDefinition",
            "src": "888:63:150",
            "nodes": [],
            "body": {
              "id": 39205,
              "nodeType": "Block",
              "src": "949:2:150",
              "nodes": [],
              "statements": []
            },
            "documentation": null,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 39202,
                    "name": "_feeManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39199,
                    "src": "936:11:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 39203,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39201,
                  "name": "FeeBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40602,
                  "src": "928:7:150",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FeeBase_$40602_$",
                    "typeString": "type(contract FeeBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "928:20:150"
              }
            ],
            "name": "",
            "overrides": null,
            "parameters": {
              "id": 39200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39199,
                  "mutability": "mutable",
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39206,
                  "src": "900:19:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "899:21:150"
            },
            "returnParameters": {
              "id": 39204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:0:150"
            },
            "scope": 39330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39216,
            "nodeType": "FunctionDefinition",
            "src": "1078:78:150",
            "nodes": [],
            "body": {
              "id": 39215,
              "nodeType": "Block",
              "src": "1154:2:150",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              38501
            ],
            "documentation": {
              "id": 39207,
              "nodeType": "StructuredDocumentation",
              "src": "984:89:150",
              "text": "@notice Add the initial fee settings for a fund\n @dev Unnecessary for this fee"
            },
            "functionSelector": "0f5f6b4f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFundSettings",
            "overrides": {
              "id": 39213,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1145:8:150"
            },
            "parameters": {
              "id": 39212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39209,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39216,
                  "src": "1103:7:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39211,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39216,
                  "src": "1112:14:150",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39210,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1102:25:150"
            },
            "returnParameters": {
              "id": 39214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:150"
            },
            "scope": 39330,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 39228,
            "nodeType": "FunctionDefinition",
            "src": "1266:187:150",
            "nodes": [],
            "body": {
              "id": 39227,
              "nodeType": "Block",
              "src": "1408:45:150",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39225,
                    "name": "LOCKED_SHARES_ADDRESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39197,
                    "src": "1425:21:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 39224,
                  "id": 39226,
                  "nodeType": "Return",
                  "src": "1418:28:150"
                }
              ]
            },
            "baseFunctions": [
              40474
            ],
            "documentation": {
              "id": 39217,
              "nodeType": "StructuredDocumentation",
              "src": "1162:99:150",
              "text": "@notice Gets the recipient of the fee for a given fund\n @return recipient_ The recipient"
            },
            "functionSelector": "62780b3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipientForFund",
            "overrides": {
              "id": 39221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1358:8:150"
            },
            "parameters": {
              "id": 39220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39219,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39228,
                  "src": "1295:7:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1294:9:150"
            },
            "returnParameters": {
              "id": 39224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39223,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39228,
                  "src": "1384:18:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1383:20:150"
            },
            "scope": 39330,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 39302,
            "nodeType": "FunctionDefinition",
            "src": "1846:907:150",
            "nodes": [],
            "body": {
              "id": 39301,
              "nodeType": "Block",
              "src": "2222:531:150",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39252,
                      "mutability": "mutable",
                      "name": "lockedShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 39301,
                      "src": "2232:20:150",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2232:7:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 39259,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 39257,
                        "name": "LOCKED_SHARES_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39197,
                        "src": "2284:21:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 39254,
                            "name": "_vaultProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39233,
                            "src": "2261:11:150",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39253,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104903,
                          "src": "2255:5:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$104903_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 39255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2255:18:150",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$104903",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 39256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104503,
                      "src": "2255:28:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 39258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:51:150",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2232:74:150"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 39260,
                      "name": "lockedShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39252,
                      "src": "2320:12:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 39261,
                      "name": "MIN_SHARES_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39191,
                      "src": "2336:17:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2320:33:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39274,
                  "nodeType": "IfStatement",
                  "src": "2316:119:150",
                  "trueBody": {
                    "id": 39273,
                    "nodeType": "Block",
                    "src": "2355:80:150",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 39263,
                                  "name": "IFeeManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38594,
                                  "src": "2377:11:150",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IFeeManager_$38594_$",
                                    "typeString": "type(contract IFeeManager)"
                                  }
                                },
                                "id": 39264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "SettlementType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38584,
                                "src": "2377:26:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SettlementType_$38584_$",
                                  "typeString": "type(enum IFeeManager.SettlementType)"
                                }
                              },
                              "id": 39265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "None",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2377:31:150",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SettlementType_$38584",
                                "typeString": "enum IFeeManager.SettlementType"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 39268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2418:1:150",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 39267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2410:7:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 39266,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2410:7:150",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 39269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2410:10:150",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 39270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2422:1:150",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 39271,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2376:48:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_enum$_SettlementType_$38584_$_t_address_payable_$_t_rational_0_by_1_$",
                            "typeString": "tuple(enum IFeeManager.SettlementType,address payable,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 39250,
                        "id": 39272,
                        "nodeType": "Return",
                        "src": "2369:55:150"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39275,
                      "name": "sharesDue_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39249,
                      "src": "2489:10:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 39276,
                        "name": "MIN_SHARES_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39191,
                        "src": "2502:17:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 39277,
                        "name": "lockedShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39252,
                        "src": "2522:12:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2502:32:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2489:45:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39280,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:45:150"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 39281,
                          "name": "payer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39247,
                          "src": "2545:6:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 39282,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2544:12:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$__$__$",
                        "typeString": "tuple(address,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 39284,
                          "name": "_settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39237,
                          "src": "2595:15:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 39283,
                        "name": "__decodePostBuySharesSettlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40592,
                        "src": "2559:35:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (bytes memory) pure returns (address,uint256,uint256)"
                        }
                      },
                      "id": 39285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2559:52:150",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(address,uint256,uint256)"
                      }
                    },
                    "src": "2544:67:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39287,
                  "nodeType": "ExpressionStatement",
                  "src": "2544:67:150"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 39289,
                        "name": "_comptrollerProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39231,
                        "src": "2635:17:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39290,
                        "name": "payer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39247,
                        "src": "2654:6:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39291,
                        "name": "sharesDue_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39249,
                        "src": "2662:10:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39288,
                      "name": "Settled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39188,
                      "src": "2627:7:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 39292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2627:46:150",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39293,
                  "nodeType": "EmitStatement",
                  "src": "2622:51:150"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39294,
                            "name": "IFeeManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38594,
                            "src": "2692:11:150",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFeeManager_$38594_$",
                              "typeString": "type(contract IFeeManager)"
                            }
                          },
                          "id": 39295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "SettlementType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38584,
                          "src": "2692:26:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_SettlementType_$38584_$",
                            "typeString": "type(enum IFeeManager.SettlementType)"
                          }
                        },
                        "id": 39296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Direct",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2692:33:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SettlementType_$38584",
                          "typeString": "enum IFeeManager.SettlementType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39297,
                        "name": "payer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39247,
                        "src": "2727:6:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39298,
                        "name": "sharesDue_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39249,
                        "src": "2735:10:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 39299,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2691:55:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_SettlementType_$38584_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(enum IFeeManager.SettlementType,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 39250,
                  "id": 39300,
                  "nodeType": "Return",
                  "src": "2684:62:150"
                }
              ]
            },
            "baseFunctions": [
              38536
            ],
            "documentation": {
              "id": 39229,
              "nodeType": "StructuredDocumentation",
              "src": "1459:382:150",
              "text": "@notice Settles the fee\n @param _comptrollerProxy The ComptrollerProxy of the fund\n @param _vaultProxy The VaultProxy of the fund\n @param _settlementData Encoded args to use in calculating the settlement\n @return settlementType_ The type of settlement\n @return payer_ The payer of shares due\n @return sharesDue_ The amount of shares due"
            },
            "functionSelector": "41892d7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 39243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39242,
                  "name": "onlyFeeManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40438,
                  "src": "2060:14:150",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2060:14:150"
              }
            ],
            "name": "settle",
            "overrides": {
              "id": 39241,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2043:8:150"
            },
            "parameters": {
              "id": 39240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39231,
                  "mutability": "mutable",
                  "name": "_comptrollerProxy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "1871:25:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39233,
                  "mutability": "mutable",
                  "name": "_vaultProxy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "1906:19:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39235,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "1935:19:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_FeeHook_$38577",
                    "typeString": "enum IFeeManager.FeeHook"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 39234,
                    "name": "IFeeManager.FeeHook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 38577,
                    "src": "1935:19:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_FeeHook_$38577",
                      "typeString": "enum IFeeManager.FeeHook"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39237,
                  "mutability": "mutable",
                  "name": "_settlementData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "1964:30:150",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39236,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:5:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39239,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "2004:7:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1861:156:150"
            },
            "returnParameters": {
              "id": 39250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39245,
                  "mutability": "mutable",
                  "name": "settlementType_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "2105:42:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SettlementType_$38584",
                    "typeString": "enum IFeeManager.SettlementType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 39244,
                    "name": "IFeeManager.SettlementType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 38584,
                    "src": "2105:26:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SettlementType_$38584",
                      "typeString": "enum IFeeManager.SettlementType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39247,
                  "mutability": "mutable",
                  "name": "payer_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "2161:14:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39249,
                  "mutability": "mutable",
                  "name": "sharesDue_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39302,
                  "src": "2189:18:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:126:150"
            },
            "scope": 39330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39329,
            "nodeType": "FunctionDefinition",
            "src": "3017:289:150",
            "nodes": [],
            "body": {
              "id": 39328,
              "nodeType": "Block",
              "src": "3165:141:150",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_FeeHook_$38577",
                      "typeString": "enum IFeeManager.FeeHook"
                    },
                    "id": 39317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 39313,
                      "name": "_hook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39305,
                      "src": "3179:5:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_FeeHook_$38577",
                        "typeString": "enum IFeeManager.FeeHook"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 39314,
                          "name": "IFeeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38594,
                          "src": "3188:11:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFeeManager_$38594_$",
                            "typeString": "type(contract IFeeManager)"
                          }
                        },
                        "id": 39315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FeeHook",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38577,
                        "src": "3188:19:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_FeeHook_$38577_$",
                          "typeString": "type(enum IFeeManager.FeeHook)"
                        }
                      },
                      "id": 39316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PostBuyShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3188:33:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_FeeHook_$38577",
                        "typeString": "enum IFeeManager.FeeHook"
                      }
                    },
                    "src": "3179:42:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39323,
                  "nodeType": "IfStatement",
                  "src": "3175:93:150",
                  "trueBody": {
                    "id": 39322,
                    "nodeType": "Block",
                    "src": "3223:45:150",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 39318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3245:4:150",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 39319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3251:5:150",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "id": 39320,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3244:13:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "functionReturnParameters": 39312,
                        "id": 39321,
                        "nodeType": "Return",
                        "src": "3237:20:150"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 39324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3286:5:150",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 39325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3293:5:150",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 39326,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3285:14:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                      "typeString": "tuple(bool,bool)"
                    }
                  },
                  "functionReturnParameters": 39312,
                  "id": 39327,
                  "nodeType": "Return",
                  "src": "3278:21:150"
                }
              ]
            },
            "baseFunctions": [
              38545
            ],
            "documentation": {
              "id": 39303,
              "nodeType": "StructuredDocumentation",
              "src": "2759:253:150",
              "text": "@notice Gets whether the fee settles and requires GAV on a particular hook\n @param _hook The FeeHook\n @return settles_ True if the fee settles on the _hook\n @return usesGav_ True if the fee uses GAV during settle() for the _hook"
            },
            "functionSelector": "320f0ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settlesOnHook",
            "overrides": {
              "id": 39307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3105:8:150"
            },
            "parameters": {
              "id": 39306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39305,
                  "mutability": "mutable",
                  "name": "_hook",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39329,
                  "src": "3040:25:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_FeeHook_$38577",
                    "typeString": "enum IFeeManager.FeeHook"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 39304,
                    "name": "IFeeManager.FeeHook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 38577,
                    "src": "3040:19:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_FeeHook_$38577",
                      "typeString": "enum IFeeManager.FeeHook"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3039:27:150"
            },
            "returnParameters": {
              "id": 39312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39309,
                  "mutability": "mutable",
                  "name": "settles_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39329,
                  "src": "3131:13:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:4:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39311,
                  "mutability": "mutable",
                  "name": "usesGav_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 39329,
                  "src": "3146:13:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:4:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3130:30:150"
            },
            "scope": 39330,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39179,
              "name": "FeeBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 40602,
              "src": "594:7:150",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeBase_$40602",
                "typeString": "contract FeeBase"
              }
            },
            "id": 39180,
            "nodeType": "InheritanceSpecifier",
            "src": "594:7:150"
          }
        ],
        "contractDependencies": [
          38568,
          40602
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 39178,
          "nodeType": "StructuredDocumentation",
          "src": "367:196:150",
          "text": "@title MinSharesSupplyFee Contract\n @author Enzyme Council <security@enzyme.finance>\n @notice Charges and permanently locks a one-time fee to ensure a minimum shares supply at all times"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39330,
          40602,
          38568
        ],
        "name": "MinSharesSupplyFee",
        "scope": 39331
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 150
}