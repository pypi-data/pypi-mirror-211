{
  "abi": [
    {
      "inputs": [],
      "name": "ETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ETH_ADDRESS()": "a734f06e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/utils/EthConstantMixin.sol\":\"EthConstantMixin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/mocks/utils/EthConstantMixin.sol\":{\"keccak256\":\"0x3970888dcaec9b20f4fe5910225221dbea5582cff9908f391ff7bf30f3e8c27b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1e99ecbe6188f2ec0a650634fa22e93e41786d55c67083a5672e71f755fb7018\",\"dweb:/ipfs/QmXbBTuMQMED2u97L8wZbNZuJ1hTmhFWbDUusuBNYVTh3o\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ETH_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/mocks/utils/EthConstantMixin.sol": "EthConstantMixin"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mocks/utils/EthConstantMixin.sol": {
        "keccak256": "0x3970888dcaec9b20f4fe5910225221dbea5582cff9908f391ff7bf30f3e8c27b",
        "urls": [
          "bzz-raw://1e99ecbe6188f2ec0a650634fa22e93e41786d55c67083a5672e71f755fb7018",
          "dweb:/ipfs/QmXbBTuMQMED2u97L8wZbNZuJ1hTmhFWbDUusuBNYVTh3o"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mocks/utils/EthConstantMixin.sol",
    "id": 1446,
    "exportedSymbols": {
      "EthConstantMixin": [
        1445
      ]
    },
    "nodeType": "SourceUnit",
    "src": "255:150:8",
    "nodes": [
      {
        "id": 1441,
        "nodeType": "PragmaDirective",
        "src": "255:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 1445,
        "nodeType": "ContractDefinition",
        "src": "280:124:8",
        "nodes": [
          {
            "id": 1444,
            "nodeType": "VariableDeclaration",
            "src": "321:80:8",
            "nodes": [],
            "constant": true,
            "functionSelector": "a734f06e",
            "mutability": "constant",
            "name": "ETH_ADDRESS",
            "overrides": null,
            "scope": 1445,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1442,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 1443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "359:42:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1445
        ],
        "name": "EthConstantMixin",
        "scope": 1446
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 8
}