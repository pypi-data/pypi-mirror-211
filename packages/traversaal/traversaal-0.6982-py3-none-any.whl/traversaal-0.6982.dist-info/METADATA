Metadata-Version: 2.1
Name: traversaal
Version: 0.6982
Summary: A semantic search package for hotel data
Home-page: https://github.com/hamzafarooq
Author: Traversaal
Author-email: hello@traversaal.com
License: Apache License 2.0
Keywords: Transformer Networks BERT XLNet sentence embedding PyTorch NLP deep learning
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: transformers (<5.0.0,>=4.6.0)
Requires-Dist: tqdm
Requires-Dist: torch (>=1.6.0)
Requires-Dist: torchvision
Requires-Dist: numpy
Requires-Dist: scikit-learn
Requires-Dist: scipy
Requires-Dist: nltk
Requires-Dist: sentencepiece
Requires-Dist: huggingface-hub (>=0.4.0)

## Traversaal

Traversaal is a Python package that provides a simple semantic search functionality for hotel data. It leverages large language models such as mpnet to encode hotel descriptions and reviews, allowing users to perform semantic search queries and retrieve relevant results based on the provided search query.

## Features

- Efficient semantic search for hotel data based on descriptions and reviews.
- Utilizes state-of-the-art language models to encode and compare text embeddings.
- Returns relevant search results with corresponding scores for ranking.
- Supports GPU acceleration for faster encoding and search performance.
- Utilizes distributed computing to increase speed in embedding creation

## Installation

You can install Traversaal using pip:

```bash
pip install traversaal

import pandas as pd
import traversaal


search = traversaal.SemanticSearch()

df = pd.read_csv('hotels.csv')
encoded_data = search.encode_data(df)
query = 'great location and service'

relevant_results = search.search(encoded_data, query)

print("\nRelevant Results:")
print(relevant_results.head())


For more detailed usage examples and API documentation, please refer to the GitHub repository.

Contributing
Contributions to Traversaal are welcome! If you encounter any issues, have suggestions, or would like to contribute enhancements or new features, please feel free to submit a pull request on the GitHub repository.

License
Traversaal is licensed under the MIT License. See the LICENSE file for more details.


```
