[project]
description = "Interface plugin for CPPython that hooks into PDM"
name = "cppython-pdm"
license = "MIT"
authors = [
    { name = "Synodic Software", email = "contact@synodic.software" },
]
readme = "README.md"
dynamic = []
requires-python = ">=3.11"
dependencies = [
    "cppython>=0.7.1.dev20",
    "pdm>=2.1.5",
]
version = "0.3.1.dev14"

[project.license-files]
paths = [
    "LICENSE.md",
]

[project.urls]
homepage = "https://github.com/Synodic-Software/CPPython-PDM"
repository = "https://github.com/Synodic-Software/CPPython-PDM"

[project.entry-points.pdm]
cppython = "cppython_pdm.plugin:CPPythonPlugin"

[tool.pdm.version]
use_scm = true

[tool.pdm.dev-dependencies]
lint = [
    "black>=22.6.0",
    "pylint>=2.14.5",
    "isort>=5.10.1",
    "mypy>=0.971",
]
test = [
    "pytest >=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.8.2",
    "pytest-cppython>=0.1.7.dev0",
]

[tool.pdm.scripts.analyze]
shell = "pylint --verbose cppython_pdm tests"

[tool.pdm.scripts.format]
shell = "black --check --verbose ."

[tool.pdm.scripts.lint]
composite = [
    "analyze",
    "format",
    "sort-imports",
    "type-check",
]

[tool.pdm.scripts.sort-imports]
shell = "isort --check-only --diff --verbose ."

[tool.pdm.scripts.test]
shell = "pytest --cov=cppython_pdm --verbose tests"

[tool.pdm.scripts.type-check]
shell = "mypy ."

[tool.pytest.ini_options]
log_cli = true
testpaths = [
    "tests",
]

[tool.black]
line-length = 120
preview = true

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
exclude = "__pypackages__"
show_error_codes = true
strict = true

[tool.pylint.MAIN]
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
    "pylint.extensions.docstyle",
    "pylint.extensions.docparams",
    "pylint.extensions.private_import",
    "pylint.extensions.bad_builtin",
]

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.parameter_documentation]
accept-no-param-doc = false
accept-no-raise-doc = false
accept-no-return-doc = false
accept-no-yields-doc = false
default-docstring-type = "google"

[tool.coverage.report]
skip_empty = true

[build-system]
build-backend = "pdm.pep517.api"
requires = [
    "pdm-pep517",
]
